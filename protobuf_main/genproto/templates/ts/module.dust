// generated by Proto2Typescript. do not touch!

declare module dcodeIO {
    var ByteBuffer: any;
    module ProtoBuf {
        class Map<K,T> {
            forEach(cb: (value:T , key: K) => void, thisArgs?: any): void;
            get(id: K): T;
        }
    }
}

declare module {package} {
	interface ProtoBufModel {
		toArrayBuffer(): ArrayBuffer;
		//toBuffer(): NodeBuffer;
		//encode(): ByteBuffer;
		toBase64(): string;
		toString(): string;
	}

	export interface ProtoBufBuilder {
		{#definitions}{name}: {type};
		{/definitions}
	}
	export var idMap: any;
	export var nameMap: any;
}
{#messages}
{>interface:./}{/messages}{#enums}
{>enum:./}
{/enums}{#consts}
{>enum:./}
{/consts}{#services}
{>service package=package/}
{/services}

declare module pb {
	export interface MessageHandler {
		onRecvMessage?(cmdId: number, data: pb.ProtoBufModel, transId: number): boolean; // return true代表不需要路由到handler
		{@iter obj=idMap}
		on{$value}?(data: pb.{$value}, transId: number): void; // {$key}{/iter}
	}
}
