// generated by Proto2Typescript. do not touch!

declare module dcodeIO {
    var ByteBuffer: any;
    module ProtoBuf {
        class Map<K,T> {
            forEach(cb: (value:T , key: K) => void, thisArgs?: any): void;
            get(id: K): T;
        }
    }
}

declare module pb {
	interface ProtoBufModel {
		toArrayBuffer(): ArrayBuffer;
		//toBuffer(): NodeBuffer;
		//encode(): ByteBuffer;
		toBase64(): string;
		toString(): string;
	}

	export interface ProtoBufBuilder {
		AchievementLoadReq: AchievementLoadReqBuilder;
		AchievementLoadAck: AchievementLoadAckBuilder;
		AchievementGetAwardReq: AchievementGetAwardReqBuilder;
		AchievementGetAwardAck: AchievementGetAwardAckBuilder;
		ActiveMedalReq: ActiveMedalReqBuilder;
		ActiveMedalAck: ActiveMedalAckBuilder;
		AchievementInfo: AchievementInfoBuilder;
		AchievementTaskInfoNtf: AchievementTaskInfoNtfBuilder;
		ErrorAck: ErrorAckBuilder;
		UserLoginInfo: UserLoginInfoBuilder;
		appletsInfo: appletsInfoBuilder;
		AncientTreasureInfo: AncientTreasureInfoBuilder;
		MiJiInfo: MiJiInfoBuilder;
		AnnouncementInfo: AnnouncementInfoBuilder;
		HeroInfo: HeroInfoBuilder;
		UserWear: UserWearBuilder;
		Wears: WearsBuilder;
		BriefUserInfo: BriefUserInfoBuilder;
		BriefUserInfoWithDisplay: BriefUserInfoWithDisplayBuilder;
		TopDataChangeNtf: TopDataChangeNtfBuilder;
		TopDataChange: TopDataChangeBuilder;
		BagDataChangeNtf: BagDataChangeNtfBuilder;
		ItemChange: ItemChangeBuilder;
		BagEquipDataChangeNtf: BagEquipDataChangeNtfBuilder;
		EquipChange: EquipChangeBuilder;
		Item: ItemBuilder;
		GoodsChangeNtf: GoodsChangeNtfBuilder;
		itemUnit: itemUnitBuilder;
		EquipUnit: EquipUnitBuilder;
		EquipRandProp: EquipRandPropBuilder;
		EquipClearArr: EquipClearArrBuilder;
		EquipClearInfo: EquipClearInfoBuilder;
		HeroProp: HeroPropBuilder;
		TaskInfoNtf: TaskInfoNtfBuilder;
		DisplayNtf: DisplayNtfBuilder;
		EventNtf: EventNtfBuilder;
		DailyConditionNtf: DailyConditionNtfBuilder;
		PropInfo: PropInfoBuilder;
		EquipGrid: EquipGridBuilder;
		Fabao: FabaoBuilder;
		GodEquip: GodEquipBuilder;
		Juexue: JuexueBuilder;
		Fashion: FashionBuilder;
		Wing: WingBuilder;
		WingSpecialNtf: WingSpecialNtfBuilder;
		Rein: ReinBuilder;
		ReinCost: ReinCostBuilder;
		Atlas: AtlasBuilder;
		AtlasGather: AtlasGatherBuilder;
		Preference: PreferenceBuilder;
		WorldBossInfoNtf: WorldBossInfoNtfBuilder;
		VipBoss: VipBossBuilder;
		ExpStage: ExpStageBuilder;
		MaterialStage: MaterialStageBuilder;
		Display: DisplayBuilder;
		SpecialEquipUnit: SpecialEquipUnitBuilder;
		GetSource: GetSourceBuilder;
		RankInfo: RankInfoBuilder;
		SkillUnit: SkillUnitBuilder;
		ShopInfo: ShopInfoBuilder;
		DictateInfo: DictateInfoBuilder;
		PanaceaInfo: PanaceaInfoBuilder;
		JewelInfo: JewelInfoBuilder;
		DayStateInfo: DayStateInfoBuilder;
		SignInfo: SignInfoBuilder;
		InsideInfo: InsideInfoBuilder;
		InsideSkill: InsideSkillBuilder;
		Holy: HolyBuilder;
		Ring: RingBuilder;
		RingPhantom: RingPhantomBuilder;
		PetInfo: PetInfoBuilder;
		ResetNtf: ResetNtfBuilder;
		FieldFightRivalUserInfo: FieldFightRivalUserInfoBuilder;
		DarkPalaceInfo: DarkPalaceInfoBuilder;
		HellBossInfo: HellBossInfoBuilder;
		FieldBossInfo: FieldBossInfoBuilder;
		AncientBossInfo: AncientBossInfoBuilder;
		TalentInfo: TalentInfoBuilder;
		TalentUnit: TalentUnitBuilder;
		Fit: FitBuilder;
		FitSkill: FitSkillBuilder;
		MonthCardUnit: MonthCardUnitBuilder;
		FirstRecharge: FirstRechargeBuilder;
		SpendRebates: SpendRebatesBuilder;
		GrowFund: GrowFundBuilder;
		WarOrderTaskUnit: WarOrderTaskUnitBuilder;
		WarOrderTaskInfo: WarOrderTaskInfoBuilder;
		WarOrderTask: WarOrderTaskBuilder;
		WarOrderReward: WarOrderRewardBuilder;
		WarOrder: WarOrderBuilder;
		Elf: ElfBuilder;
		FriendUserInfo: FriendUserInfoBuilder;
		FriendHeroInfo: FriendHeroInfoBuilder;
		FitHolyEquipUnit: FitHolyEquipUnitBuilder;
		FitHolyEquip: FitHolyEquipBuilder;
		ContRecharge: ContRechargeBuilder;
		PaoMaDengInfo: PaoMaDengInfoBuilder;
		PaoMaDengNtf: PaoMaDengNtfBuilder;
		AncientSkill: AncientSkillBuilder;
		Title: TitleBuilder;
		BriefServerInfo: BriefServerInfoBuilder;
		Label: LabelBuilder;
		AncientBossLoadReq: AncientBossLoadReqBuilder;
		AncientBossLoadAck: AncientBossLoadAckBuilder;
		AncientBossBuyNumReq: AncientBossBuyNumReqBuilder;
		AncientBossBuyNumAck: AncientBossBuyNumAckBuilder;
		EnterAncientBossFightReq: EnterAncientBossFightReqBuilder;
		EnterAncientBossFightAck: EnterAncientBossFightAckBuilder;
		AncientBossFightResultNtf: AncientBossFightResultNtfBuilder;
		AncientBossOwnerReq: AncientBossOwnerReqBuilder;
		AncientBossOwnerAck: AncientBossOwnerAckBuilder;
		AncientBossOwnerInfo: AncientBossOwnerInfoBuilder;
		AncientBossNtf: AncientBossNtfBuilder;
		AncientSkillActiveReq: AncientSkillActiveReqBuilder;
		AncientSkillActiveAck: AncientSkillActiveAckBuilder;
		AncientSkillUpLvReq: AncientSkillUpLvReqBuilder;
		AncientSkillUpLvAck: AncientSkillUpLvAckBuilder;
		AncientSkillUpGradeReq: AncientSkillUpGradeReqBuilder;
		AncientSkillUpGradeAck: AncientSkillUpGradeAckBuilder;
		AncientTreasuresLoadReq: AncientTreasuresLoadReqBuilder;
		AncientTreasuresLoadAck: AncientTreasuresLoadAckBuilder;
		AncientTreasuresInfo: AncientTreasuresInfoBuilder;
		AncientTreasuresActivateReq: AncientTreasuresActivateReqBuilder;
		AncientTreasuresActivateAck: AncientTreasuresActivateAckBuilder;
		AncientTreasuresZhuLinReq: AncientTreasuresZhuLinReqBuilder;
		AncientTreasuresZhuLinAck: AncientTreasuresZhuLinAckBuilder;
		AncientTreasuresUpStarReq: AncientTreasuresUpStarReqBuilder;
		AncientTreasuresUpStarAck: AncientTreasuresUpStarAckBuilder;
		AncientTreasuresJueXingReq: AncientTreasuresJueXingReqBuilder;
		AncientTreasuresJueXingAck: AncientTreasuresJueXingAckBuilder;
		AncientTreasuresResertReq: AncientTreasuresResertReqBuilder;
		AncientTreasuresResertAck: AncientTreasuresResertAckBuilder;
		AncientTreasuresCondotionInfosReq: AncientTreasuresCondotionInfosReqBuilder;
		AncientTreasuresCondotionInfosAck: AncientTreasuresCondotionInfosAckBuilder;
		EnterAppletsReq: EnterAppletsReqBuilder;
		AppletsEnergyNtf: AppletsEnergyNtfBuilder;
		AppletsReceiveReq: AppletsReceiveReqBuilder;
		AppletsReceiveAck: AppletsReceiveAckBuilder;
		CronGetAwardReq: CronGetAwardReqBuilder;
		CronGetAwardAck: CronGetAwardAckBuilder;
		EndResultReq: EndResultReqBuilder;
		EndResultAck: EndResultAckBuilder;
		AreaUpLvReq: AreaUpLvReqBuilder;
		AreaUpLvAck: AreaUpLvAckBuilder;
		ArenaOpenReq: ArenaOpenReqBuilder;
		ArenaOpenAck: ArenaOpenAckBuilder;
		EnterArenaFightReq: EnterArenaFightReqBuilder;
		ArenaFightNtf: ArenaFightNtfBuilder;
		BuyArenaFightNumReq: BuyArenaFightNumReqBuilder;
		BuyArenaFightNumAck: BuyArenaFightNumAckBuilder;
		RefArenaRankReq: RefArenaRankReqBuilder;
		RefArenaRankAck: RefArenaRankAckBuilder;
		ArenaRank: ArenaRankBuilder;
		AtlasActiveReq: AtlasActiveReqBuilder;
		AtlasActiveAck: AtlasActiveAckBuilder;
		AtlasUpStarReq: AtlasUpStarReqBuilder;
		AtlasUpStarAck: AtlasUpStarAckBuilder;
		AtlasGatherActiveReq: AtlasGatherActiveReqBuilder;
		AtlasGatherActiveAck: AtlasGatherActiveAckBuilder;
		AtlasGatherUpStarReq: AtlasGatherUpStarReqBuilder;
		AtlasGatherUpStarAck: AtlasGatherUpStarAckBuilder;
		AtlasWearChangeReq: AtlasWearChangeReqBuilder;
		AtlasWearChangeAck: AtlasWearChangeAckBuilder;
		AuctionInfoReq: AuctionInfoReqBuilder;
		AuctionInfoNtf: AuctionInfoNtfBuilder;
		AuctionItemInfo: AuctionItemInfoBuilder;
		BidInfoReq: BidInfoReqBuilder;
		BidInfoNtf: BidInfoNtfBuilder;
		BidReq: BidReqBuilder;
		BidNtf: BidNtfBuilder;
		MyBidReq: MyBidReqBuilder;
		MyBidNtf: MyBidNtfBuilder;
		BidItemUpdateNtf: BidItemUpdateNtfBuilder;
		AuctionPutawayItemReq: AuctionPutawayItemReqBuilder;
		AuctionPutawayItemNtf: AuctionPutawayItemNtfBuilder;
		BidSuccessInfo: BidSuccessInfoBuilder;
		BidSuccessNoticeNtf: BidSuccessNoticeNtfBuilder;
		AuctionBuyTimesReq: AuctionBuyTimesReqBuilder;
		AuctionBuyTimesAck: AuctionBuyTimesAckBuilder;
		MyPutAwayItemInfoReq: MyPutAwayItemInfoReqBuilder;
		MyPutAwayItemInfoAck: MyPutAwayItemInfoAckBuilder;
		MyBidInfoItemReq: MyBidInfoItemReqBuilder;
		MyBidInfoItemAck: MyBidInfoItemAckBuilder;
		AuctionBidInfo: AuctionBidInfoBuilder;
		RedPointStateNtf: RedPointStateNtfBuilder;
		ConversionGoldIngotReq: ConversionGoldIngotReqBuilder;
		ConversionGoldIngotAck: ConversionGoldIngotAckBuilder;
		AwakenLoadReq: AwakenLoadReqBuilder;
		AwakenLoadAck: AwakenLoadAckBuilder;
		AwakenReq: AwakenReqBuilder;
		AwakenAck: AwakenAckBuilder;
		AwakenUnit: AwakenUnitBuilder;
		BagInfoReq: BagInfoReqBuilder;
		BagInfoNtf: BagInfoNtfBuilder;
		BagSpaceAddReq: BagSpaceAddReqBuilder;
		BagSpaceAddAck: BagSpaceAddAckBuilder;
		BagSortReq: BagSortReqBuilder;
		BagSortAck: BagSortAckBuilder;
		GiftUseReq: GiftUseReqBuilder;
		GiftUseAck: GiftUseAckBuilder;
		EquipRecoverReq: EquipRecoverReqBuilder;
		EquipRecoverAck: EquipRecoverAckBuilder;
		ItemUseReq: ItemUseReqBuilder;
		ItemUseAck: ItemUseAckBuilder;
		EquipDestroyReq: EquipDestroyReqBuilder;
		EquipDestroyAck: EquipDestroyAckBuilder;
		WarehouseInfoReq: WarehouseInfoReqBuilder;
		WarehouseInfoNtf: WarehouseInfoNtfBuilder;
		WareHouseSpaceAddReq: WareHouseSpaceAddReqBuilder;
		WareHouseSpaceAddAck: WareHouseSpaceAddAckBuilder;
		WarehouseAddReq: WarehouseAddReqBuilder;
		WarehouseAddAck: WarehouseAddAckBuilder;
		WarehouseShiftOutReq: WarehouseShiftOutReqBuilder;
		WarehouseShiftOutAck: WarehouseShiftOutAckBuilder;
		WarehouseSortReq: WarehouseSortReqBuilder;
		WarehouseSortAck: WarehouseSortAckBuilder;
		GetBossFamilyInfoReq: GetBossFamilyInfoReqBuilder;
		GetBossFamilyInfoAck: GetBossFamilyInfoAckBuilder;
		EnterBossFamilyReq: EnterBossFamilyReqBuilder;
		CardActivityApplyGetReq: CardActivityApplyGetReqBuilder;
		CardActivityApplyGetAck: CardActivityApplyGetAckBuilder;
		CardActivityInfosReq: CardActivityInfosReqBuilder;
		CardActivityInfosAck: CardActivityInfosAckBuilder;
		CardInfoUnit: CardInfoUnitBuilder;
		CardInfoNtf: CardInfoNtfBuilder;
		GetIntegralAwardReq: GetIntegralAwardReqBuilder;
		GetIntegralAwardAck: GetIntegralAwardAckBuilder;
		CardCloseNtf: CardCloseNtfBuilder;
		ChallengeInfoReq: ChallengeInfoReqBuilder;
		ChallengeInfoAck: ChallengeInfoAckBuilder;
		ApplyChallengeReq: ApplyChallengeReqBuilder;
		ApplyChallengeAck: ApplyChallengeAckBuilder;
		ChallengeEachRoundPeopleReq: ChallengeEachRoundPeopleReqBuilder;
		ChallengeEachRoundPeopleAck: ChallengeEachRoundPeopleAckBuilder;
		peopleInfos: peopleInfosBuilder;
		BottomPourReq: BottomPourReqBuilder;
		BottomPourAck: BottomPourAckBuilder;
		PeopleInfo: PeopleInfoBuilder;
		ChallengeOpenNtf: ChallengeOpenNtfBuilder;
		ChallengeRoundEndNtf: ChallengeRoundEndNtfBuilder;
		ChallengeApplyUserInfoNtf: ChallengeApplyUserInfoNtfBuilder;
		ChatMessageNtf: ChatMessageNtfBuilder;
		ChatMessageListReq: ChatMessageListReqBuilder;
		ChatMessageListAck: ChatMessageListAckBuilder;
		ChatSendReq: ChatSendReqBuilder;
		ChatSendAck: ChatSendAckBuilder;
		ChatBanNtf: ChatBanNtfBuilder;
		ChatBanRemoveNtf: ChatBanRemoveNtfBuilder;
		ChuanShiWearReq: ChuanShiWearReqBuilder;
		ChuanShiWearAck: ChuanShiWearAckBuilder;
		ChuanShiRemoveReq: ChuanShiRemoveReqBuilder;
		ChuanShiRemoveAck: ChuanShiRemoveAckBuilder;
		ChuanShiDeComposeReq: ChuanShiDeComposeReqBuilder;
		ChuanShiDeComposeAck: ChuanShiDeComposeAckBuilder;
		ChuanshiStrengthenReq: ChuanshiStrengthenReqBuilder;
		ChuanshiStrengthenAck: ChuanshiStrengthenAckBuilder;
		ClearReq: ClearReqBuilder;
		ClearAck: ClearAckBuilder;
		CompetitveLoadReq: CompetitveLoadReqBuilder;
		CompetitveLoadAck: CompetitveLoadAckBuilder;
		EnterCompetitveFightReq: EnterCompetitveFightReqBuilder;
		CompetitveFightNtf: CompetitveFightNtfBuilder;
		BuyCompetitveChallengeTimesReq: BuyCompetitveChallengeTimesReqBuilder;
		BuyCompetitveChallengeTimesAck: BuyCompetitveChallengeTimesAckBuilder;
		RefCompetitveRankReq: RefCompetitveRankReqBuilder;
		RefCompetitveRankAck: RefCompetitveRankAckBuilder;
		CompetitveRankInfo: CompetitveRankInfoBuilder;
		GetCompetitveDailyRewardReq: GetCompetitveDailyRewardReqBuilder;
		GetCompetitveDailyRewardAck: GetCompetitveDailyRewardAckBuilder;
		CompetitveMultipleClaimReq: CompetitveMultipleClaimReqBuilder;
		CompetitveMultipleClaimAck: CompetitveMultipleClaimAckBuilder;
		ComposeReq: ComposeReqBuilder;
		ComposeAck: ComposeAckBuilder;
		ComposeEquipReq: ComposeEquipReqBuilder;
		ComposeEquipAck: ComposeEquipAckBuilder;
		ComposeChuanShiEquipReq: ComposeChuanShiEquipReqBuilder;
		ComposeChuanShiEquipAck: ComposeChuanShiEquipAckBuilder;
		CutTreasureUpLvReq: CutTreasureUpLvReqBuilder;
		CutTreasureUpLvAck: CutTreasureUpLvAckBuilder;
		CutTreasureUseReq: CutTreasureUseReqBuilder;
		CutTreasureUseAck: CutTreasureUseAckBuilder;
		DaBaoEquipUpReq: DaBaoEquipUpReqBuilder;
		DaBaoEquipUpAck: DaBaoEquipUpAckBuilder;
		EnterDaBaoMysteryReq: EnterDaBaoMysteryReqBuilder;
		DaBaoMysteryResultNtf: DaBaoMysteryResultNtfBuilder;
		DaBaoMysteryEnergyItemBuyReq: DaBaoMysteryEnergyItemBuyReqBuilder;
		DaBaoMysteryEnergyAddReq: DaBaoMysteryEnergyAddReqBuilder;
		DaBaoMysteryEnergyAddAck: DaBaoMysteryEnergyAddAckBuilder;
		DaBaoMysteryEnergyNtf: DaBaoMysteryEnergyNtfBuilder;
		EnterDailyActivityReq: EnterDailyActivityReqBuilder;
		DailyActivityResultNtf: DailyActivityResultNtfBuilder;
		DailyActivityListReq: DailyActivityListReqBuilder;
		DailyActivityListAck: DailyActivityListAckBuilder;
		DailyActivityInfo: DailyActivityInfoBuilder;
		DailyPackBuyReq: DailyPackBuyReqBuilder;
		DailyPackBuyAck: DailyPackBuyAckBuilder;
		DailyRankLoadReq: DailyRankLoadReqBuilder;
		DailyRankLoadAck: DailyRankLoadAckBuilder;
		DailyRankGetMarkRewardReq: DailyRankGetMarkRewardReqBuilder;
		DailyRankGetMarkRewardAck: DailyRankGetMarkRewardAckBuilder;
		DailyRankBuyGiftReq: DailyRankBuyGiftReqBuilder;
		DailyRankBuyGiftAck: DailyRankBuyGiftAckBuilder;
		DailyTaskLoadReq: DailyTaskLoadReqBuilder;
		DailyTaskLoadAck: DailyTaskLoadAckBuilder;
		BuyChallengeTimeReq: BuyChallengeTimeReqBuilder;
		BuyChallengeTimeAck: BuyChallengeTimeAckBuilder;
		GetExpReq: GetExpReqBuilder;
		GetExpAck: GetExpAckBuilder;
		GetAwardReq: GetAwardReqBuilder;
		GetAwardAck: GetAwardAckBuilder;
		ResourcesBackGetRewardReq: ResourcesBackGetRewardReqBuilder;
		ResourcesBackGetRewardAck: ResourcesBackGetRewardAckBuilder;
		ResourcesBackGetAllRewardReq: ResourcesBackGetAllRewardReqBuilder;
		ResourcesBackGetAllRewardAck: ResourcesBackGetAllRewardAckBuilder;
		HaveChallengeTime: HaveChallengeTimeBuilder;
		ResourcesBackInfo: ResourcesBackInfoBuilder;
		DarkPalaceLoadReq: DarkPalaceLoadReqBuilder;
		DarkPalaceLoadAck: DarkPalaceLoadAckBuilder;
		EnterDarkPalaceFightReq: EnterDarkPalaceFightReqBuilder;
		DarkPalaceFightResultNtf: DarkPalaceFightResultNtfBuilder;
		DarkPalaceBuyNumReq: DarkPalaceBuyNumReqBuilder;
		DarkPalaceBuyNumAck: DarkPalaceBuyNumAckBuilder;
		DarkPalaceBossNtf: DarkPalaceBossNtfBuilder;
		EnterDarkPalaceHelpFightReq: EnterDarkPalaceHelpFightReqBuilder;
		DarkPalaceHelpFightResultNtf: DarkPalaceHelpFightResultNtfBuilder;
		DarkPalaceDareNumNtf: DarkPalaceDareNumNtfBuilder;
		DictateUpReq: DictateUpReqBuilder;
		DictateUpAck: DictateUpAckBuilder;
		DragonEquipUpLvReq: DragonEquipUpLvReqBuilder;
		DragonEquipUpLvAck: DragonEquipUpLvAckBuilder;
		ElfFeedReq: ElfFeedReqBuilder;
		ElfFeedAck: ElfFeedAckBuilder;
		ElfSkillUpLvReq: ElfSkillUpLvReqBuilder;
		ElfSkillUpLvAck: ElfSkillUpLvAckBuilder;
		ElfSkillChangePosReq: ElfSkillChangePosReqBuilder;
		ElfSkillChangePosAck: ElfSkillChangePosAckBuilder;
		EquipChangeReq: EquipChangeReqBuilder;
		EquipChangeAck: EquipChangeAckBuilder;
		EquipLockReq: EquipLockReqBuilder;
		EquipLockAck: EquipLockAckBuilder;
		EquipStrengthenReq: EquipStrengthenReqBuilder;
		EquipStrengthenAck: EquipStrengthenAckBuilder;
		EquipRemoveReq: EquipRemoveReqBuilder;
		EquipRemoveAck: EquipRemoveAckBuilder;
		EquipBlessNtf: EquipBlessNtfBuilder;
		EquipStrengthenAutoReq: EquipStrengthenAutoReqBuilder;
		EquipStrengthenAutoAck: EquipStrengthenAutoAckBuilder;
		ExpPoolLoadReq: ExpPoolLoadReqBuilder;
		ExpPoolLoadAck: ExpPoolLoadAckBuilder;
		ExpPoolUpGradeReq: ExpPoolUpGradeReqBuilder;
		ExpPoolUpGradeAck: ExpPoolUpGradeAckBuilder;
		ExpStageFightReq: ExpStageFightReqBuilder;
		ExpStageDareNumNtf: ExpStageDareNumNtfBuilder;
		ExpStageFightResultNtf: ExpStageFightResultNtfBuilder;
		ExpStageDoubleReq: ExpStageDoubleReqBuilder;
		ExpStageDoubleAck: ExpStageDoubleAckBuilder;
		ExpStageRefNtf: ExpStageRefNtfBuilder;
		ExpStageBuyNumNtf: ExpStageBuyNumNtfBuilder;
		ExpStageSweepReq: ExpStageSweepReqBuilder;
		ExpStageSweepAck: ExpStageSweepAckBuilder;
		ExpStageBuyNumReq: ExpStageBuyNumReqBuilder;
		ExpStageBuyNumAck: ExpStageBuyNumAckBuilder;
		FabaoActiveReq: FabaoActiveReqBuilder;
		FabaoActiveAck: FabaoActiveAckBuilder;
		FabaoUpLevelReq: FabaoUpLevelReqBuilder;
		FabaoUpLevelAck: FabaoUpLevelAckBuilder;
		FabaoSkillActiveReq: FabaoSkillActiveReqBuilder;
		FabaoSkillActiveAck: FabaoSkillActiveAckBuilder;
		FashionUpLevelReq: FashionUpLevelReqBuilder;
		FashionUpLevelAck: FashionUpLevelAckBuilder;
		FashionWearReq: FashionWearReqBuilder;
		FashionWearAck: FashionWearAckBuilder;
		FieldBossLoadReq: FieldBossLoadReqBuilder;
		FieldBossLoadAck: FieldBossLoadAckBuilder;
		EnterFieldBossFightReq: EnterFieldBossFightReqBuilder;
		EnterFieldBossFightAck: EnterFieldBossFightAckBuilder;
		FieldBossFightResultNtf: FieldBossFightResultNtfBuilder;
		FieldBossBuyNumReq: FieldBossBuyNumReqBuilder;
		FieldBossBuyNumAck: FieldBossBuyNumAckBuilder;
		FieldBossFirstReq: FieldBossFirstReqBuilder;
		FieldBossFirstAck: FieldBossFirstAckBuilder;
		FieldBossNtf: FieldBossNtfBuilder;
		FieldFightLoadReq: FieldFightLoadReqBuilder;
		FieldFightLoadAck: FieldFightLoadAckBuilder;
		EnterFieldFightReq: EnterFieldFightReqBuilder;
		FieldFightNtf: FieldFightNtfBuilder;
		BuyFieldFightChallengeTimesReq: BuyFieldFightChallengeTimesReqBuilder;
		BuyFieldFightChallengeTimesAck: BuyFieldFightChallengeTimesAckBuilder;
		RefFieldFightRivalUserReq: RefFieldFightRivalUserReqBuilder;
		RefFieldFightRivalUserAck: RefFieldFightRivalUserAckBuilder;
		FieldFightListInfo: FieldFightListInfoBuilder;
		FieldFightBeatBackUserInfo: FieldFightBeatBackUserInfoBuilder;
		BeatBackInfoNtf: BeatBackInfoNtfBuilder;
		EnterPublicCopyReq: EnterPublicCopyReqBuilder;
		EnterPublicCopyAck: EnterPublicCopyAckBuilder;
		FightItemUseReq: FightItemUseReqBuilder;
		FightItemUseAck: FightItemUseAckBuilder;
		FightUserReliveReq: FightUserReliveReqBuilder;
		FightUserReliveAck: FightUserReliveAckBuilder;
		FightPickUpReq: FightPickUpReqBuilder;
		FightPickUpAck: FightPickUpAckBuilder;
		FightGetCheerNumReq: FightGetCheerNumReqBuilder;
		FightGetCheerNumNtf: FightGetCheerNumNtfBuilder;
		FightCheerReq: FightCheerReqBuilder;
		FightCheerAck: FightCheerAckBuilder;
		FightCheerNumChangeNtf: FightCheerNumChangeNtfBuilder;
		FightPotionReq: FightPotionReqBuilder;
		FightPotionAck: FightPotionAckBuilder;
		FightPotionCdReq: FightPotionCdReqBuilder;
		FightPotionCdAck: FightPotionCdAckBuilder;
		FightCollectionReq: FightCollectionReqBuilder;
		FightCollectionAck: FightCollectionAckBuilder;
		FightCollectionNtf: FightCollectionNtfBuilder;
		FightCollectionCancelReq: FightCollectionCancelReqBuilder;
		FightCollectionCancelAck: FightCollectionCancelAckBuilder;
		FightApplyForHelpReq: FightApplyForHelpReqBuilder;
		FightApplyForHelpAck: FightApplyForHelpAckBuilder;
		FightApplyForHelpNtf: FightApplyForHelpNtfBuilder;
		FightAskForHelpResultReq: FightAskForHelpResultReqBuilder;
		FightAskForHelpResultAck: FightAskForHelpResultAckBuilder;
		FightAskForHelpResultNtf: FightAskForHelpResultNtfBuilder;
		FightItemsAddNtf: FightItemsAddNtfBuilder;
		FirstDropLoadReq: FirstDropLoadReqBuilder;
		FirstDropLoadAck: FirstDropLoadAckBuilder;
		GetFirstDropAwardReq: GetFirstDropAwardReqBuilder;
		GetFirstDropAwardAck: GetFirstDropAwardAckBuilder;
		GetAllFirstDropAwardReq: GetAllFirstDropAwardReqBuilder;
		GetAllFirstDropAwardAck: GetAllFirstDropAwardAckBuilder;
		GetAllRedPacketReq: GetAllRedPacketReqBuilder;
		GetAllRedPacketAck: GetAllRedPacketAckBuilder;
		GetAllFirstDropAwardNtf: GetAllFirstDropAwardNtfBuilder;
		FirstDropRedPointNtf: FirstDropRedPointNtfBuilder;
		FirstRechargeRewardReq: FirstRechargeRewardReqBuilder;
		FirstRechargeRewardAck: FirstRechargeRewardAckBuilder;
		FirstRechargeNtf: FirstRechargeNtfBuilder;
		FitUpLvReq: FitUpLvReqBuilder;
		FitUpLvAck: FitUpLvAckBuilder;
		FitSkillUpLvReq: FitSkillUpLvReqBuilder;
		FitSkillUpLvAck: FitSkillUpLvAckBuilder;
		FitSkillUpStarReq: FitSkillUpStarReqBuilder;
		FitSkillUpStarAck: FitSkillUpStarAckBuilder;
		FitSkillChangeReq: FitSkillChangeReqBuilder;
		FitSkillChangeAck: FitSkillChangeAckBuilder;
		FitSkillResetReq: FitSkillResetReqBuilder;
		FitSkillResetAck: FitSkillResetAckBuilder;
		FitFashionUpLvReq: FitFashionUpLvReqBuilder;
		FitFashionUpLvAck: FitFashionUpLvAckBuilder;
		FitFashionChangeReq: FitFashionChangeReqBuilder;
		FitFashionChangeAck: FitFashionChangeAckBuilder;
		FitSkillActiveReq: FitSkillActiveReqBuilder;
		FitSkillActiveAck: FitSkillActiveAckBuilder;
		FitEnterReq: FitEnterReqBuilder;
		FitEnterAck: FitEnterAckBuilder;
		FitCancleReq: FitCancleReqBuilder;
		FitCancleAck: FitCancleAckBuilder;
		FitHolyEquipComposeReq: FitHolyEquipComposeReqBuilder;
		FitHolyEquipComposeAck: FitHolyEquipComposeAckBuilder;
		FitHolyEquipDeComposeReq: FitHolyEquipDeComposeReqBuilder;
		FitHolyEquipDeComposeAck: FitHolyEquipDeComposeAckBuilder;
		FitHolyEquipWearReq: FitHolyEquipWearReqBuilder;
		FitHolyEquipWearAck: FitHolyEquipWearAckBuilder;
		FitHolyEquipRemoveReq: FitHolyEquipRemoveReqBuilder;
		FitHolyEquipRemoveAck: FitHolyEquipRemoveAckBuilder;
		FitHolyEquipSuitSkillChangeReq: FitHolyEquipSuitSkillChangeReqBuilder;
		FitHolyEquipSuitSkillChangeAck: FitHolyEquipSuitSkillChangeAckBuilder;
		FriendListReq: FriendListReqBuilder;
		FriendListAck: FriendListAckBuilder;
		FriendAddReq: FriendAddReqBuilder;
		FriendAddAck: FriendAddAckBuilder;
		FriendDelReq: FriendDelReqBuilder;
		FriendDelAck: FriendDelAckBuilder;
		FriendBlockAddReq: FriendBlockAddReqBuilder;
		FriendBlockAddAck: FriendBlockAddAckBuilder;
		FriendSearchReq: FriendSearchReqBuilder;
		FriendSearchAck: FriendSearchAckBuilder;
		FriendBlockListReq: FriendBlockListReqBuilder;
		FriendBlockListAck: FriendBlockListAckBuilder;
		FriendBlockDelReq: FriendBlockDelReqBuilder;
		FriendBlockDelAck: FriendBlockDelAckBuilder;
		FriendMsgReadReq: FriendMsgReadReqBuilder;
		FriendMsgReadAck: FriendMsgReadAckBuilder;
		FriendUserInfoReq: FriendUserInfoReqBuilder;
		FriendUserInfoAck: FriendUserInfoAckBuilder;
		FriendMsgReq: FriendMsgReqBuilder;
		FriendMsgAck: FriendMsgAckBuilder;
		FriendApplyAddReq: FriendApplyAddReqBuilder;
		FriendApplyAddNtf: FriendApplyAddNtfBuilder;
		FriendApplyAgreeReq: FriendApplyAgreeReqBuilder;
		FriendApplyAgreeNtf: FriendApplyAgreeNtfBuilder;
		FriendApplyRefuseReq: FriendApplyRefuseReqBuilder;
		FriendApplyRefuseNtf: FriendApplyRefuseNtfBuilder;
		FriendApplyListReq: FriendApplyListReqBuilder;
		FriendApplyListAck: FriendApplyListAckBuilder;
		FriendInfo: FriendInfoBuilder;
		MsgLog: MsgLogBuilder;
		FriendApplyInfo: FriendApplyInfoBuilder;
		ReportGtNoReq: ReportGtNoReqBuilder;
		ReportGtNoAck: ReportGtNoAckBuilder;
		GsBroadCastNtf: GsBroadCastNtfBuilder;
		GsMsgNtf: GsMsgNtfBuilder;
		ReConnectReq: ReConnectReqBuilder;
		ReConnectAck: ReConnectAckBuilder;
		LogoutReq: LogoutReqBuilder;
		LogoutAck: LogoutAckBuilder;
		OfflineReq: OfflineReqBuilder;
		ChatReq: ChatReqBuilder;
		ChatRsp: ChatRspBuilder;
		OnlineNumReq: OnlineNumReqBuilder;
		OnlineNumAck: OnlineNumAckBuilder;
		MsgNtf: MsgNtfBuilder;
		PreJumpGsReq: PreJumpGsReqBuilder;
		DoJumpGsReq: DoJumpGsReqBuilder;
		JumpGsReq: JumpGsReqBuilder;
		BenchMarkReq: BenchMarkReqBuilder;
		BenchMarkAck: BenchMarkAckBuilder;
		KeepAliveRpt: KeepAliveRptBuilder;
		OpenGiftReq: OpenGiftReqBuilder;
		OpenGiftAck: OpenGiftAckBuilder;
		GiftCodeRewardReq: GiftCodeRewardReqBuilder;
		GiftCodeRewardAck: GiftCodeRewardAckBuilder;
		LimitedGiftNtf: LimitedGiftNtfBuilder;
		LimitedGiftBuyReq: LimitedGiftBuyReqBuilder;
		LimitedGiftBuyAck: LimitedGiftBuyAckBuilder;
		LimitedGiftReq: LimitedGiftReqBuilder;
		LimitedGiftInfo: LimitedGiftInfoBuilder;
		OpenGiftBuyNtf: OpenGiftBuyNtfBuilder;
		OpenGiftEndTimeReq: OpenGiftEndTimeReqBuilder;
		OpenGiftEndTimeAck: OpenGiftEndTimeAckBuilder;
		GodEquipActiveReq: GodEquipActiveReqBuilder;
		GodEquipActiveAck: GodEquipActiveAckBuilder;
		GodEquipUpLevelReq: GodEquipUpLevelReqBuilder;
		GodEquipUpLevelAck: GodEquipUpLevelAckBuilder;
		GodEquipBloodReq: GodEquipBloodReqBuilder;
		GodEquipBloodAck: GodEquipBloodAckBuilder;
		GrowFundBuyReq: GrowFundBuyReqBuilder;
		GrowFundBuyAck: GrowFundBuyAckBuilder;
		GrowFundRewardReq: GrowFundRewardReqBuilder;
		GrowFundRewardAck: GrowFundRewardAckBuilder;
		EnterGuardPillarReq: EnterGuardPillarReqBuilder;
		GuardPillarResultNtf: GuardPillarResultNtfBuilder;
		GuildLoadInfoReq: GuildLoadInfoReqBuilder;
		GuildLoadInfoAck: GuildLoadInfoAckBuilder;
		CreateGuildReq: CreateGuildReqBuilder;
		CreateGuildAck: CreateGuildAckBuilder;
		JoinGuildCombatLimitReq: JoinGuildCombatLimitReqBuilder;
		JoinGuildCombatLimitAck: JoinGuildCombatLimitAckBuilder;
		ModifyBulletinReq: ModifyBulletinReqBuilder;
		ModifyBulletinAck: ModifyBulletinAckBuilder;
		QuitGuildReq: QuitGuildReqBuilder;
		QuitGuildAck: QuitGuildAckBuilder;
		KickOutReq: KickOutReqBuilder;
		KickOutAck: KickOutAckBuilder;
		ImpeachPresidentReq: ImpeachPresidentReqBuilder;
		ImpeachPresidentAck: ImpeachPresidentAckBuilder;
		GuildCheckMemberInfoReq: GuildCheckMemberInfoReqBuilder;
		GuildCheckMemberInfoAck: GuildCheckMemberInfoAckBuilder;
		ApplyJoinGuildReq: ApplyJoinGuildReqBuilder;
		ApplyJoinGuildAck: ApplyJoinGuildAckBuilder;
		GuildAssignReq: GuildAssignReqBuilder;
		GuildAssignAck: GuildAssignAckBuilder;
		AllGuildInfosReq: AllGuildInfosReqBuilder;
		AllGuildInfosAck: AllGuildInfosAckBuilder;
		DissolveGuildReq: DissolveGuildReqBuilder;
		DissolveGuildAck: DissolveGuildAckBuilder;
		JoinGuildDisposeReq: JoinGuildDisposeReqBuilder;
		JoinGuildDisposeAck: JoinGuildDisposeAckBuilder;
		GetApplyUserListReq: GetApplyUserListReqBuilder;
		GetApplyUserListAck: GetApplyUserListAckBuilder;
		GuildInfo: GuildInfoBuilder;
		GuildMenberInfo: GuildMenberInfoBuilder;
		JoinGuildSuccessNtf: JoinGuildSuccessNtfBuilder;
		AllJoinGuildDisposeReq: AllJoinGuildDisposeReqBuilder;
		AllJoinGuildDisposeAck: AllJoinGuildDisposeAckBuilder;
		ApplyJoinGuildReDotNtf: ApplyJoinGuildReDotNtfBuilder;
		ImpeachPresidentNtf: ImpeachPresidentNtfBuilder;
		BroadcastGuildChangeNtf: BroadcastGuildChangeNtfBuilder;
		GuildActivityOpenNtf: GuildActivityOpenNtfBuilder;
		GuildActivityLoadReq: GuildActivityLoadReqBuilder;
		GuildActivityLoadAck: GuildActivityLoadAckBuilder;
		GuildBonfireLoadReq: GuildBonfireLoadReqBuilder;
		GuildBonfireLoadAck: GuildBonfireLoadAckBuilder;
		GuildBonfireAddExpReq: GuildBonfireAddExpReqBuilder;
		GuildBonfireAddExpAck: GuildBonfireAddExpAckBuilder;
		WoodPeople: WoodPeopleBuilder;
		EnterGuildBonfireFightReq: EnterGuildBonfireFightReqBuilder;
		GuildBonfireFightNtf: GuildBonfireFightNtfBuilder;
		GuildBonfireOpenStateNtf: GuildBonfireOpenStateNtfBuilder;
		HellBossLoadReq: HellBossLoadReqBuilder;
		HellBossLoadAck: HellBossLoadAckBuilder;
		HellBossBuyNumReq: HellBossBuyNumReqBuilder;
		HellBossBuyNumAck: HellBossBuyNumAckBuilder;
		HellBossDareNumNtf: HellBossDareNumNtfBuilder;
		EnterHellBossFightReq: EnterHellBossFightReqBuilder;
		HellBossFightResultNtf: HellBossFightResultNtfBuilder;
		HellBossNtf: HellBossNtfBuilder;
		HolyBeastLoadInfoReq: HolyBeastLoadInfoReqBuilder;
		HolyBeastLoadInfoAck: HolyBeastLoadInfoAckBuilder;
		HolyBeastActivateReq: HolyBeastActivateReqBuilder;
		HolyBeastActivateAck: HolyBeastActivateAckBuilder;
		HolyBeastUpStarReq: HolyBeastUpStarReqBuilder;
		HolyBeastUpStarAck: HolyBeastUpStarAckBuilder;
		HolyBeastPointAddReq: HolyBeastPointAddReqBuilder;
		HolyBeastPointAddAck: HolyBeastPointAddAckBuilder;
		HolyBeastChoosePropReq: HolyBeastChoosePropReqBuilder;
		HolyBeastChoosePropAck: HolyBeastChoosePropAckBuilder;
		HolyBeastRestReq: HolyBeastRestReqBuilder;
		HolyBeastRestAck: HolyBeastRestAckBuilder;
		HolyBeastInfos: HolyBeastInfosBuilder;
		HolyBeastInfo: HolyBeastInfoBuilder;
		HolyActiveReq: HolyActiveReqBuilder;
		HolyActiveAck: HolyActiveAckBuilder;
		HolyUpLevelReq: HolyUpLevelReqBuilder;
		HolyUpLevelAck: HolyUpLevelAckBuilder;
		HolySkillActiveReq: HolySkillActiveReqBuilder;
		HolySkillActiveAck: HolySkillActiveAckBuilder;
		HolySkillUpLvReq: HolySkillUpLvReqBuilder;
		HolySkillUpLvAck: HolySkillUpLvAckBuilder;
		InsideUpStarReq: InsideUpStarReqBuilder;
		InsideUpStarAck: InsideUpStarAckBuilder;
		InsideUpGradeReq: InsideUpGradeReqBuilder;
		InsideUpGradeAck: InsideUpGradeAckBuilder;
		InsideUpOrderReq: InsideUpOrderReqBuilder;
		InsideUpOrderAck: InsideUpOrderAckBuilder;
		InsideSkillUpLvReq: InsideSkillUpLvReqBuilder;
		InsideSkillUpLvAck: InsideSkillUpLvAckBuilder;
		InsideAutoUpReq: InsideAutoUpReqBuilder;
		InsideAutoUpAck: InsideAutoUpAckBuilder;
		JewelMakeReq: JewelMakeReqBuilder;
		JewelMakeAck: JewelMakeAckBuilder;
		JewelUpLvReq: JewelUpLvReqBuilder;
		JewelUpLvAck: JewelUpLvAckBuilder;
		JewelChangeReq: JewelChangeReqBuilder;
		JewelChangeAck: JewelChangeAckBuilder;
		JewelRemoveReq: JewelRemoveReqBuilder;
		JewelRemoveAck: JewelRemoveAckBuilder;
		JewelMakeAllReq: JewelMakeAllReqBuilder;
		JewelMakeAllAck: JewelMakeAllAckBuilder;
		JuexueUpLevelReq: JuexueUpLevelReqBuilder;
		JuexueUpLevelAck: JuexueUpLevelAckBuilder;
		KillMonsterUniLoadReq: KillMonsterUniLoadReqBuilder;
		KillMonsterUniLoadAck: KillMonsterUniLoadAckBuilder;
		KillMonsterUniFirstDrawReq: KillMonsterUniFirstDrawReqBuilder;
		KillMonsterUniFirstDrawAck: KillMonsterUniFirstDrawAckBuilder;
		KillMonsterUniDrawReq: KillMonsterUniDrawReqBuilder;
		KillMonsterUniDrawAck: KillMonsterUniDrawAckBuilder;
		KillMonsterUniKillNtf: KillMonsterUniKillNtfBuilder;
		KillMonsterPerLoadReq: KillMonsterPerLoadReqBuilder;
		KillMonsterPerLoadAck: KillMonsterPerLoadAckBuilder;
		KillMonsterPerDrawReq: KillMonsterPerDrawReqBuilder;
		KillMonsterPerDrawAck: KillMonsterPerDrawAckBuilder;
		KillMonsterPerKillNtf: KillMonsterPerKillNtfBuilder;
		KillMonsterMilLoadReq: KillMonsterMilLoadReqBuilder;
		KillMonsterMilLoadAck: KillMonsterMilLoadAckBuilder;
		KillMonsterMilDrawReq: KillMonsterMilDrawReqBuilder;
		KillMonsterMilDrawAck: KillMonsterMilDrawAckBuilder;
		KillMonsterMilKillNtf: KillMonsterMilKillNtfBuilder;
		KillMonsterUniInfo: KillMonsterUniInfoBuilder;
		KillMonsterPerInfo: KillMonsterPerInfoBuilder;
		KillMonsterMilInfo: KillMonsterMilInfoBuilder;
		LabelUpReq: LabelUpReqBuilder;
		LabelUpAck: LabelUpAckBuilder;
		LabelTransferReq: LabelTransferReqBuilder;
		LabelTransferAck: LabelTransferAckBuilder;
		LabelDayRewardReq: LabelDayRewardReqBuilder;
		LabelDayRewardAck: LabelDayRewardAckBuilder;
		LabelTaskReq: LabelTaskReqBuilder;
		LabelTaskNtf: LabelTaskNtfBuilder;
		LabelTaskUnit: LabelTaskUnitBuilder;
		LotteryInfoReq: LotteryInfoReqBuilder;
		LotteryInfoAck: LotteryInfoAckBuilder;
		GetGoodLuckReq: GetGoodLuckReqBuilder;
		GetGoodLuckAck: GetGoodLuckAckBuilder;
		SetLotteryPopUpStateReq: SetLotteryPopUpStateReqBuilder;
		SetLotteryPopUpStateAck: SetLotteryPopUpStateAckBuilder;
		LotteryBuyNumsReq: LotteryBuyNumsReqBuilder;
		LotteryBuyNumsAck: LotteryBuyNumsAckBuilder;
		BrocastBuyNumsNtf: BrocastBuyNumsNtfBuilder;
		LotteryInfo: LotteryInfoBuilder;
		LotteryEnd: LotteryEndBuilder;
		LotteryInfo1Req: LotteryInfo1ReqBuilder;
		LotteryInfo1Ack: LotteryInfo1AckBuilder;
		LotteryGetEndAwardReq: LotteryGetEndAwardReqBuilder;
		LotteryGetEndAwardAck: LotteryGetEndAwardAckBuilder;
		MagicCircleUpLvReq: MagicCircleUpLvReqBuilder;
		MagicCircleUpLvAck: MagicCircleUpLvAckBuilder;
		MagicCircleChangeWearReq: MagicCircleChangeWearReqBuilder;
		MagicCircleChangeWearAck: MagicCircleChangeWearAckBuilder;
		MagicTowerEndNtf: MagicTowerEndNtfBuilder;
		MagicTowerGetUserInfoReq: MagicTowerGetUserInfoReqBuilder;
		MagicTowerGetUserInfoAck: MagicTowerGetUserInfoAckBuilder;
		MagicTowerlayerAwardReq: MagicTowerlayerAwardReqBuilder;
		MagicTowerlayerAwardAck: MagicTowerlayerAwardAckBuilder;
		MailReadReq: MailReadReqBuilder;
		MailReadAck: MailReadAckBuilder;
		MailRedeemReq: MailRedeemReqBuilder;
		MailRedeemAck: MailRedeemAckBuilder;
		MailRedeemAllReq: MailRedeemAllReqBuilder;
		MailRedeemAllAck: MailRedeemAllAckBuilder;
		MailNtf: MailNtfBuilder;
		MailLoadReq: MailLoadReqBuilder;
		MailLoadAck: MailLoadAckBuilder;
		MailDeleteReq: MailDeleteReqBuilder;
		MailDeleteAck: MailDeleteAckBuilder;
		MailDeleteAllReq: MailDeleteAllReqBuilder;
		MailDeleteAllAck: MailDeleteAllAckBuilder;
		MaterialStageLoadReq: MaterialStageLoadReqBuilder;
		MaterialStageLoadAck: MaterialStageLoadAckBuilder;
		EnterMaterialStageFightReq: EnterMaterialStageFightReqBuilder;
		MaterialStageFightResultNtf: MaterialStageFightResultNtfBuilder;
		MaterialStageSweepReq: MaterialStageSweepReqBuilder;
		MaterialStageSweepAck: MaterialStageSweepAckBuilder;
		MaterialStageBuyNumNtf: MaterialStageBuyNumNtfBuilder;
		MaterialStageBuyNumReq: MaterialStageBuyNumReqBuilder;
		MaterialStageBuyNumAck: MaterialStageBuyNumAckBuilder;
		MiJiUpReq: MiJiUpReqBuilder;
		MiJiUpAck: MiJiUpAckBuilder;
		MiningLoadReq: MiningLoadReqBuilder;
		MiningLoadAck: MiningLoadAckBuilder;
		MiningUpMinerReq: MiningUpMinerReqBuilder;
		MiningUpMinerAck: MiningUpMinerAckBuilder;
		MiningBuyNumReq: MiningBuyNumReqBuilder;
		MiningBuyNumAck: MiningBuyNumAckBuilder;
		MiningStartReq: MiningStartReqBuilder;
		MiningStartAck: MiningStartAckBuilder;
		MiningRobReq: MiningRobReqBuilder;
		MiningRobAck: MiningRobAckBuilder;
		MiningRobFightAck: MiningRobFightAckBuilder;
		MiningRobBackReq: MiningRobBackReqBuilder;
		MiningRobBackAck: MiningRobBackAckBuilder;
		MiningRobBackFightAck: MiningRobBackFightAckBuilder;
		MiningRobListReq: MiningRobListReqBuilder;
		MiningRobListAck: MiningRobListAckBuilder;
		MiningListReq: MiningListReqBuilder;
		MiningListAck: MiningListAckBuilder;
		MiningDrawLoadReq: MiningDrawLoadReqBuilder;
		MiningDrawLoadAck: MiningDrawLoadAckBuilder;
		MiningDrawReq: MiningDrawReqBuilder;
		MiningDrawAck: MiningDrawAckBuilder;
		MiningInReq: MiningInReqBuilder;
		MiningInAck: MiningInAckBuilder;
		MiningInfo: MiningInfoBuilder;
		MiningRob: MiningRobBuilder;
		MiningListInfo: MiningListInfoBuilder;
		MonthCardBuyReq: MonthCardBuyReqBuilder;
		MonthCardBuyAck: MonthCardBuyAckBuilder;
		MonthCardDailyRewardReq: MonthCardDailyRewardReqBuilder;
		MonthCardDailyRewardAck: MonthCardDailyRewardAckBuilder;
		OfficialUpLevelReq: OfficialUpLevelReqBuilder;
		OfficialUpLevelAck: OfficialUpLevelAckBuilder;
		OfflineAwardLoadReq: OfflineAwardLoadReqBuilder;
		OfflineAwardLoadAck: OfflineAwardLoadAckBuilder;
		OfflineAwardGetReq: OfflineAwardGetReqBuilder;
		OfflineAwardGetAck: OfflineAwardGetAckBuilder;
		GetOnlineAwardInfoReq: GetOnlineAwardInfoReqBuilder;
		GetOnlineAwardInfoAck: GetOnlineAwardInfoAckBuilder;
		GetOnlineAwardReq: GetOnlineAwardReqBuilder;
		GetOnlineAwardAck: GetOnlineAwardAckBuilder;
		PanaceaUseReq: PanaceaUseReqBuilder;
		PanaceaUseAck: PanaceaUseAckBuilder;
		PersonBossLoadReq: PersonBossLoadReqBuilder;
		PersonBossLoadAck: PersonBossLoadAckBuilder;
		EnterPersonBossFightReq: EnterPersonBossFightReqBuilder;
		EnterPersonBossFightAck: EnterPersonBossFightAckBuilder;
		PersonBossFightResultNtf: PersonBossFightResultNtfBuilder;
		PersonBossSweepReq: PersonBossSweepReqBuilder;
		PersonBossSweepAck: PersonBossSweepAckBuilder;
		PersonBossDareNumNtf: PersonBossDareNumNtfBuilder;
		PetActiveReq: PetActiveReqBuilder;
		PetActiveAck: PetActiveAckBuilder;
		PetUpLvReq: PetUpLvReqBuilder;
		PetUpLvAck: PetUpLvAckBuilder;
		PetUpGradeReq: PetUpGradeReqBuilder;
		PetUpGradeAck: PetUpGradeAckBuilder;
		PetBreakReq: PetBreakReqBuilder;
		PetBreakAck: PetBreakAckBuilder;
		PetChangeWearReq: PetChangeWearReqBuilder;
		PetChangeWearAck: PetChangeWearAckBuilder;
		PetAppendageReq: PetAppendageReqBuilder;
		PetAppendageAck: PetAppendageAckBuilder;
		PreviewFunctionLoadReq: PreviewFunctionLoadReqBuilder;
		PreviewFunctionLoadAck: PreviewFunctionLoadAckBuilder;
		PreviewFunctionGetReq: PreviewFunctionGetReqBuilder;
		PreviewFunctionGetAck: PreviewFunctionGetAckBuilder;
		PreviewFunctionPointReq: PreviewFunctionPointReqBuilder;
		PreviewFunctionPointAck: PreviewFunctionPointAckBuilder;
		PrivilegeBuyReq: PrivilegeBuyReqBuilder;
		PrivilegeBuyAck: PrivilegeBuyAckBuilder;
		RankLoadReq: RankLoadReqBuilder;
		RankLoadAck: RankLoadAckBuilder;
		RankWorshipReq: RankWorshipReqBuilder;
		RankWorshipAck: RankWorshipAckBuilder;
		RechargFulfilledNtf: RechargFulfilledNtfBuilder;
		RechargeApplyPayReq: RechargeApplyPayReqBuilder;
		RechargeApplyPayAck: RechargeApplyPayAckBuilder;
		MoneyPayReq: MoneyPayReqBuilder;
		MoneyPayAck: MoneyPayAckBuilder;
		RechargeResetNtf: RechargeResetNtfBuilder;
		ContRechargeCycleNtf: ContRechargeCycleNtfBuilder;
		ContRechargeNtf: ContRechargeNtfBuilder;
		ContRechargeReceiveReq: ContRechargeReceiveReqBuilder;
		ContRechargeReceiveAck: ContRechargeReceiveAckBuilder;
		RechargeAllGetReq: RechargeAllGetReqBuilder;
		RechargeAllGetAck: RechargeAllGetAckBuilder;
		ReinActiveReq: ReinActiveReqBuilder;
		ReinActiveAck: ReinActiveAckBuilder;
		ReincarnationReq: ReincarnationReqBuilder;
		ReincarnationAck: ReincarnationAckBuilder;
		ReinCostBuyReq: ReinCostBuyReqBuilder;
		ReinCostBuyAck: ReinCostBuyAckBuilder;
		ReinCostUseReq: ReinCostUseReqBuilder;
		ReinCostUseAck: ReinCostUseAckBuilder;
		ReinCostBuyNumRefNtf: ReinCostBuyNumRefNtfBuilder;
		RingWearReq: RingWearReqBuilder;
		RingWearAck: RingWearAckBuilder;
		RingRemoveReq: RingRemoveReqBuilder;
		RingRemoveAck: RingRemoveAckBuilder;
		RingStrengthenReq: RingStrengthenReqBuilder;
		RingStrengthenAck: RingStrengthenAckBuilder;
		RingPhantomReq: RingPhantomReqBuilder;
		RingPhantomAck: RingPhantomAckBuilder;
		RingSkillUpReq: RingSkillUpReqBuilder;
		RingSkillUpAck: RingSkillUpAckBuilder;
		RingFuseReq: RingFuseReqBuilder;
		RingFuseAck: RingFuseAckBuilder;
		RingSkillResetReq: RingSkillResetReqBuilder;
		RingSkillResetAck: RingSkillResetAckBuilder;
		Point: PointBuilder;
		SceneObj: SceneObjBuilder;
		SceneUser: SceneUserBuilder;
		SceneMonster: SceneMonsterBuilder;
		ScenePet: ScenePetBuilder;
		SceneCollection: SceneCollectionBuilder;
		SceneFit: SceneFitBuilder;
		SceneSummon: SceneSummonBuilder;
		SceneItem: SceneItemBuilder;
		SceneBuff: SceneBuffBuilder;
		SceneEnterNtf: SceneEnterNtfBuilder;
		SceneEnterOverNtf: SceneEnterOverNtfBuilder;
		SceneLeaveNtf: SceneLeaveNtfBuilder;
		SceneDieNtf: SceneDieNtfBuilder;
		SceneMoveRpt: SceneMoveRptBuilder;
		SceneMoveNtf: SceneMoveNtfBuilder;
		SceneUserReliveNtf: SceneUserReliveNtfBuilder;
		SceneUserUpdateNtf: SceneUserUpdateNtfBuilder;
		SceneUserElfUpdateNtf: SceneUserElfUpdateNtfBuilder;
		AttackRpt: AttackRptBuilder;
		AttackEffectNtf: AttackEffectNtfBuilder;
		HurtEffect: HurtEffectBuilder;
		SceneObjHpNtf: SceneObjHpNtfBuilder;
		SceneObjMpNtf: SceneObjMpNtfBuilder;
		FightHurtRankReq: FightHurtRankReqBuilder;
		FightHurtRankAck: FightHurtRankAckBuilder;
		FightRankUnit: FightRankUnitBuilder;
		GetBossOwnerChangReq: GetBossOwnerChangReqBuilder;
		BossOwnerChangNtf: BossOwnerChangNtfBuilder;
		BuffChangeNtf: BuffChangeNtfBuilder;
		BuffDelNtf: BuffDelNtfBuilder;
		BuffInfo: BuffInfoBuilder;
		DelBuffInfo: DelBuffInfoBuilder;
		BuffPropChangeNtf: BuffPropChangeNtfBuilder;
		BuffHpChangeNtf: BuffHpChangeNtfBuilder;
		BuffHpChangeInfo: BuffHpChangeInfoBuilder;
		MainCityEnterRpt: MainCityEnterRptBuilder;
		MainCityMoveRpt: MainCityMoveRptBuilder;
		MainCityLeaveRpt: MainCityLeaveRptBuilder;
		MainCityUpdateRpt: MainCityUpdateRptBuilder;
		FightEnterOkReq: FightEnterOkReqBuilder;
		FightStartCountDownNtf: FightStartCountDownNtfBuilder;
		FightStartCountDownOkReq: FightStartCountDownOkReqBuilder;
		FightStartNtf: FightStartNtfBuilder;
		CollectionStatusChangeNtf: CollectionStatusChangeNtfBuilder;
		FightTeamChangeNtf: FightTeamChangeNtfBuilder;
		FightUserChangeToHelperNtf: FightUserChangeToHelperNtfBuilder;
		FightNpcEventReq: FightNpcEventReqBuilder;
		ExpStageKillInfoNtf: ExpStageKillInfoNtfBuilder;
		PaodianTopUserReq: PaodianTopUserReqBuilder;
		PaodianTopUserNtf: PaodianTopUserNtfBuilder;
		PaoDianUserNumNtf: PaoDianUserNumNtfBuilder;
		PaodianFightEnd: PaodianFightEndBuilder;
		GetShabakeScoresReq: GetShabakeScoresReqBuilder;
		ShabakeScoreRankNtf: ShabakeScoreRankNtfBuilder;
		ShabakeUserScore: ShabakeUserScoreBuilder;
		ShabakeGuildScore: ShabakeGuildScoreBuilder;
		ShabakeOccupiedNtf: ShabakeOccupiedNtfBuilder;
		GetShabakeCrossScoresReq: GetShabakeCrossScoresReqBuilder;
		ShabakeCrossScoreRankNtf: ShabakeCrossScoreRankNtfBuilder;
		ShabakeCrossServerScore: ShabakeCrossServerScoreBuilder;
		ShabakeCrossOccupiedNtf: ShabakeCrossOccupiedNtfBuilder;
		GuardPillarFightNtf: GuardPillarFightNtfBuilder;
		MagicTowerBossInfo: MagicTowerBossInfoBuilder;
		MagicTowerFightNtf: MagicTowerFightNtfBuilder;
		FightUserScoreNtf: FightUserScoreNtfBuilder;
		GetFightBossInfosReq: GetFightBossInfosReqBuilder;
		GetFightBossInfosAck: GetFightBossInfosAckBuilder;
		FightBossInfoUnit: FightBossInfoUnitBuilder;
		BossReliveNtf: BossReliveNtfBuilder;
		SevenInvestmentLoadReq: SevenInvestmentLoadReqBuilder;
		SevenInvestmentLoadAck: SevenInvestmentLoadAckBuilder;
		GetSevenInvestmentAwardReq: GetSevenInvestmentAwardReqBuilder;
		GetSevenInvestmentAwardAck: GetSevenInvestmentAwardAckBuilder;
		ShaBaKeInfoCrossReq: ShaBaKeInfoCrossReqBuilder;
		ShaBaKeInfoCrossAck: ShaBaKeInfoCrossAckBuilder;
		Info: InfoBuilder;
		EnterCrossShaBaKeFightReq: EnterCrossShaBaKeFightReqBuilder;
		EnterCrossShaBaKeFightAck: EnterCrossShaBaKeFightAckBuilder;
		CrossShaBaKeFightEndNtf: CrossShaBaKeFightEndNtfBuilder;
		CrossShabakeOpenNtf: CrossShabakeOpenNtfBuilder;
		ShabakeRankScore: ShabakeRankScoreBuilder;
		ShaBaKeInfoReq: ShaBaKeInfoReqBuilder;
		ShaBaKeInfoAck: ShaBaKeInfoAckBuilder;
		EnterShaBaKeFightReq: EnterShaBaKeFightReqBuilder;
		ShaBaKeFightResultNtf: ShaBaKeFightResultNtfBuilder;
		ShabakeIsOpenNtf: ShabakeIsOpenNtfBuilder;
		ShopListReq: ShopListReqBuilder;
		ShopListAck: ShopListAckBuilder;
		ShopBuyReq: ShopBuyReqBuilder;
		ShopBuyAck: ShopBuyAckBuilder;
		ShopWeekResetNtf: ShopWeekResetNtfBuilder;
		SignReq: SignReqBuilder;
		SignAck: SignAckBuilder;
		SignRepairReq: SignRepairReqBuilder;
		SignRepairAck: SignRepairAckBuilder;
		CumulativeSignReq: CumulativeSignReqBuilder;
		CumulativeSignAck: CumulativeSignAckBuilder;
		SignResetNtf: SignResetNtfBuilder;
		SkillUpLvReq: SkillUpLvReqBuilder;
		SkillUpLvAck: SkillUpLvAckBuilder;
		SkillChangePosReq: SkillChangePosReqBuilder;
		SkillChangePosAck: SkillChangePosAckBuilder;
		SkillChangeWearReq: SkillChangeWearReqBuilder;
		SkillChangeWearAck: SkillChangeWearAckBuilder;
		SkillResetReq: SkillResetReqBuilder;
		SkillResetAck: SkillResetAckBuilder;
		SkillUseReq: SkillUseReqBuilder;
		SkillUseNtf: SkillUseNtfBuilder;
		ClearSkillCdNtf: ClearSkillCdNtfBuilder;
		SpecialEquipChangeReq: SpecialEquipChangeReqBuilder;
		SpecialEquipChangeAck: SpecialEquipChangeAckBuilder;
		SpecialEquipRemoveReq: SpecialEquipRemoveReqBuilder;
		SpecialEquipRemoveAck: SpecialEquipRemoveAckBuilder;
		SpendRebatesRewardReq: SpendRebatesRewardReqBuilder;
		SpendRebatesRewardAck: SpendRebatesRewardAckBuilder;
		SpendRebatesNtf: SpendRebatesNtfBuilder;
		StageFightStartReq: StageFightStartReqBuilder;
		StageFightStartAck: StageFightStartAckBuilder;
		StageFightEndReq: StageFightEndReqBuilder;
		StageFightEndNtf: StageFightEndNtfBuilder;
		LeaveFightReq: LeaveFightReqBuilder;
		LeaveFightAck: LeaveFightAckBuilder;
		KillMonsterReq: KillMonsterReqBuilder;
		KillMonsterAck: KillMonsterAckBuilder;
		StartStageBossFightReq: StartStageBossFightReqBuilder;
		StageBagChangeNtf: StageBagChangeNtfBuilder;
		StageGetHookMapRewardReq: StageGetHookMapRewardReqBuilder;
		StageGetHookMapRewardAck: StageGetHookMapRewardAckBuilder;
		PingReq: PingReqBuilder;
		PingAck: PingAckBuilder;
		PreferenceSetReq: PreferenceSetReqBuilder;
		PreferenceSetAck: PreferenceSetAckBuilder;
		PreferenceLoadReq: PreferenceLoadReqBuilder;
		PreferenceLoadAck: PreferenceLoadAckBuilder;
		FuncStateCloseNtf: FuncStateCloseNtfBuilder;
		TalentUpLvReq: TalentUpLvReqBuilder;
		TalentUpLvAck: TalentUpLvAckBuilder;
		TalentResetReq: TalentResetReqBuilder;
		TalentResetAck: TalentResetAckBuilder;
		TaskDoneReq: TaskDoneReqBuilder;
		TaskDoneAck: TaskDoneAckBuilder;
		TaskNpcStateReq: TaskNpcStateReqBuilder;
		TaskNpcStateAck: TaskNpcStateAckBuilder;
		SetTaskInfoReq: SetTaskInfoReqBuilder;
		SetTaskInfoAck: SetTaskInfoAckBuilder;
		TitleActiveReq: TitleActiveReqBuilder;
		TitleActiveAck: TitleActiveAckBuilder;
		TitleWearReq: TitleWearReqBuilder;
		TitleWearAck: TitleWearAckBuilder;
		TitleRemoveReq: TitleRemoveReqBuilder;
		TitleRemoveAck: TitleRemoveAckBuilder;
		TitleLookReq: TitleLookReqBuilder;
		TitleLookAck: TitleLookAckBuilder;
		TitleAutoActiveNtf: TitleAutoActiveNtfBuilder;
		TitleExpireNtf: TitleExpireNtfBuilder;
		OpenTowerReq: OpenTowerReqBuilder;
		OpenTowerAck: OpenTowerAckBuilder;
		ToweryDayAwardReq: ToweryDayAwardReqBuilder;
		ToweryDayAwardAck: ToweryDayAwardAckBuilder;
		TowerLotteryReq: TowerLotteryReqBuilder;
		TowerLotteryAck: TowerLotteryAckBuilder;
		EnterTowerFightReq: EnterTowerFightReqBuilder;
		TowerFightResultNtf: TowerFightResultNtfBuilder;
		TowerFightContinueReq: TowerFightContinueReqBuilder;
		TowerSweepReq: TowerSweepReqBuilder;
		TowerSweepAck: TowerSweepAckBuilder;
		TowerRankRewardReq: TowerRankRewardReqBuilder;
		TowerRankRewardAck: TowerRankRewardAckBuilder;
		TowerLvNtf: TowerLvNtfBuilder;
		SetTreasurePopUpStateReq: SetTreasurePopUpStateReqBuilder;
		SetTreasurePopUpStateAck: SetTreasurePopUpStateAckBuilder;
		ChooseTreasureAwardReq: ChooseTreasureAwardReqBuilder;
		ChooseTreasureAwardAck: ChooseTreasureAwardAckBuilder;
		ChooseInfo: ChooseInfoBuilder;
		BuyTreasureItemReq: BuyTreasureItemReqBuilder;
		BuyTreasureItemAck: BuyTreasureItemAckBuilder;
		TreasureApplyGetReq: TreasureApplyGetReqBuilder;
		TreasureApplyGetAck: TreasureApplyGetAckBuilder;
		TreasureInfosReq: TreasureInfosReqBuilder;
		TreasureInfosAck: TreasureInfosAckBuilder;
		TreasureInfoUnit: TreasureInfoUnitBuilder;
		TreasureInfoNtf: TreasureInfoNtfBuilder;
		GetTreasureIntegralAwardReq: GetTreasureIntegralAwardReqBuilder;
		GetTreasureIntegralAwardAck: GetTreasureIntegralAwardAckBuilder;
		TreasureDrawInfoReq: TreasureDrawInfoReqBuilder;
		TreasureDrawInfoAck: TreasureDrawInfoAckBuilder;
		TreasureCloseNtf: TreasureCloseNtfBuilder;
		TreasureShopLoadReq: TreasureShopLoadReqBuilder;
		TreasureShopLoadAck: TreasureShopLoadAckBuilder;
		TreasureShopCarChangeReq: TreasureShopCarChangeReqBuilder;
		TreasureShopCarChangeAck: TreasureShopCarChangeAckBuilder;
		TreasureShopBuyReq: TreasureShopBuyReqBuilder;
		TreasureShopBuyAck: TreasureShopBuyAckBuilder;
		TreasureShopRefreshReq: TreasureShopRefreshReqBuilder;
		TreasureShopRefreshNtf: TreasureShopRefreshNtfBuilder;
		TrialTaskInfoReq: TrialTaskInfoReqBuilder;
		TrialTaskInfoAck: TrialTaskInfoAckBuilder;
		TrialTaskInfo: TrialTaskInfoBuilder;
		TrialTaskGetAwardReq: TrialTaskGetAwardReqBuilder;
		TrialTaskGetAwardAck: TrialTaskGetAwardAckBuilder;
		TrialTaskGetStageAwardReq: TrialTaskGetStageAwardReqBuilder;
		TrialTaskGetStageAwardAck: TrialTaskGetStageAwardAckBuilder;
		TrialTaskInfoNtf: TrialTaskInfoNtfBuilder;
		EnterGameReq: EnterGameReqBuilder;
		EnterGameAck: EnterGameAckBuilder;
		CreateUserReq: CreateUserReqBuilder;
		CreateUserAck: CreateUserAckBuilder;
		RandNameReq: RandNameReqBuilder;
		RandNameAck: RandNameAckBuilder;
		CreateHeroReq: CreateHeroReqBuilder;
		CreateHeroAck: CreateHeroAckBuilder;
		KickUserNtf: KickUserNtfBuilder;
		UserPropertyNtf: UserPropertyNtfBuilder;
		DebugAddGoodsReq: DebugAddGoodsReqBuilder;
		DebugAddGoodsAck: DebugAddGoodsAckBuilder;
		ChangeFightModelReq: ChangeFightModelReqBuilder;
		ChangeFightModelAck: ChangeFightModelAckBuilder;
		ChangeHeroNameReq: ChangeHeroNameReqBuilder;
		ChangeHeroNameAck: ChangeHeroNameAckBuilder;
		UserRechargeNumNtf: UserRechargeNumNtfBuilder;
		UserRedPacketGetNumNtf: UserRedPacketGetNumNtfBuilder;
		UserOnlineNtf: UserOnlineNtfBuilder;
		UserOffLineNtf: UserOffLineNtfBuilder;
		VipCustomerReq: VipCustomerReqBuilder;
		VipCustomerAck: VipCustomerAckBuilder;
		UserInGameOkReq: UserInGameOkReqBuilder;
		CrossFightOpenNtf: CrossFightOpenNtfBuilder;
		UserSubscribeReq: UserSubscribeReqBuilder;
		UserSubscribeAck: UserSubscribeAckBuilder;
		VipGiftGetReq: VipGiftGetReqBuilder;
		VipGiftGetAck: VipGiftGetAckBuilder;
		VipBossLoadReq: VipBossLoadReqBuilder;
		VipBossLoadAck: VipBossLoadAckBuilder;
		EnterVipBossFightReq: EnterVipBossFightReqBuilder;
		EnterVipBossFightAck: EnterVipBossFightAckBuilder;
		VipBossFightResultNtf: VipBossFightResultNtfBuilder;
		VipBossSweepReq: VipBossSweepReqBuilder;
		VipBossSweepAck: VipBossSweepAckBuilder;
		VipBossDareNumNtf: VipBossDareNumNtfBuilder;
		WarOrderTaskNtf: WarOrderTaskNtfBuilder;
		WarOrderOpenReq: WarOrderOpenReqBuilder;
		WarOrderOpenAck: WarOrderOpenAckBuilder;
		WarOrderTaskFinishReq: WarOrderTaskFinishReqBuilder;
		WarOrderTaskFinishAck: WarOrderTaskFinishAckBuilder;
		WarOrderTaskRewardReq: WarOrderTaskRewardReqBuilder;
		WarOrderTaskRewardAck: WarOrderTaskRewardAckBuilder;
		WarOrderBuyLuxuryReq: WarOrderBuyLuxuryReqBuilder;
		WarOrderBuyLuxuryAck: WarOrderBuyLuxuryAckBuilder;
		WarOrderBuyExpReq: WarOrderBuyExpReqBuilder;
		WarOrderBuyExpAck: WarOrderBuyExpAckBuilder;
		WarOrderLvRewardReq: WarOrderLvRewardReqBuilder;
		WarOrderLvRewardAck: WarOrderLvRewardAckBuilder;
		WarOrderExchangeReq: WarOrderExchangeReqBuilder;
		WarOrderExchangeAck: WarOrderExchangeAckBuilder;
		WarOrderLvNtf: WarOrderLvNtfBuilder;
		WarOrderResetNtf: WarOrderResetNtfBuilder;
		WingUpLevelReq: WingUpLevelReqBuilder;
		WingUpLevelAck: WingUpLevelAckBuilder;
		WingUseMaterialReq: WingUseMaterialReqBuilder;
		WingUseMaterialAck: WingUseMaterialAckBuilder;
		WingSpecialUpReq: WingSpecialUpReqBuilder;
		WingSpecialUpAck: WingSpecialUpAckBuilder;
		WingWearReq: WingWearReqBuilder;
		WingWearAck: WingWearAckBuilder;
		EnterWorldBossFightReq: EnterWorldBossFightReqBuilder;
		WorldBossFightResultNtf: WorldBossFightResultNtfBuilder;
		LoadWorldLeaderReq: LoadWorldLeaderReqBuilder;
		LoadWorldLeaderAck: LoadWorldLeaderAckBuilder;
		WorldLeaderInfo: WorldLeaderInfoBuilder;
		GetWorldLeaderRankInfoReq: GetWorldLeaderRankInfoReqBuilder;
		GetWorldLeaderRankInfoAck: GetWorldLeaderRankInfoAckBuilder;
		WorldLeaderStartNtf: WorldLeaderStartNtfBuilder;
		WorldLeaderEnterReq: WorldLeaderEnterReqBuilder;
		WorldLeaderEnterAck: WorldLeaderEnterAckBuilder;
		WorldLeaderEndRewardNtf: WorldLeaderEndRewardNtfBuilder;
		WorldLeaderRankUnit: WorldLeaderRankUnitBuilder;
		WorldLeaderBossHpNtf: WorldLeaderBossHpNtfBuilder;
		
	}
	export var idMap: any;
	export var nameMap: any;
}

declare module pb {

	var AchievementLoadReq: AchievementLoadReq;
	export interface AchievementLoadReq extends ProtoBufModel {
		new(obj?: any): AchievementLoadReq;
		
	}

	export interface AchievementLoadReqBuilder {
		new(): AchievementLoadReq;
		decode(buffer: ArrayBuffer) : AchievementLoadReq;
		//decode(buffer: NodeBuffer) : AchievementLoadReq;
		//decode(buffer: ByteArrayBuffer) : AchievementLoadReq;
		decode64(buffer: string) : AchievementLoadReq;
		
	}
}


declare module pb {

	var AchievementLoadAck: AchievementLoadAck;
	export interface AchievementLoadAck extends ProtoBufModel {
		new(obj?: any): AchievementLoadAck;
		achievementInfo: AchievementInfo[];
		allPoint?: number;
		Medal: number[];
		
	}

	export interface AchievementLoadAckBuilder {
		new(): AchievementLoadAck;
		decode(buffer: ArrayBuffer) : AchievementLoadAck;
		//decode(buffer: NodeBuffer) : AchievementLoadAck;
		//decode(buffer: ByteArrayBuffer) : AchievementLoadAck;
		decode64(buffer: string) : AchievementLoadAck;
		
	}
}


declare module pb {

	var AchievementGetAwardReq: AchievementGetAwardReq;
	export interface AchievementGetAwardReq extends ProtoBufModel {
		new(obj?: any): AchievementGetAwardReq;
		id: number[];
		
	}

	export interface AchievementGetAwardReqBuilder {
		new(): AchievementGetAwardReq;
		decode(buffer: ArrayBuffer) : AchievementGetAwardReq;
		//decode(buffer: NodeBuffer) : AchievementGetAwardReq;
		//decode(buffer: ByteArrayBuffer) : AchievementGetAwardReq;
		decode64(buffer: string) : AchievementGetAwardReq;
		
	}
}


declare module pb {

	var AchievementGetAwardAck: AchievementGetAwardAck;
	export interface AchievementGetAwardAck extends ProtoBufModel {
		new(obj?: any): AchievementGetAwardAck;
		achievementInfo: AchievementInfo[];
		allPoint?: number;
		
	}

	export interface AchievementGetAwardAckBuilder {
		new(): AchievementGetAwardAck;
		decode(buffer: ArrayBuffer) : AchievementGetAwardAck;
		//decode(buffer: NodeBuffer) : AchievementGetAwardAck;
		//decode(buffer: ByteArrayBuffer) : AchievementGetAwardAck;
		decode64(buffer: string) : AchievementGetAwardAck;
		
	}
}


declare module pb {

	var ActiveMedalReq: ActiveMedalReq;
	export interface ActiveMedalReq extends ProtoBufModel {
		new(obj?: any): ActiveMedalReq;
		id?: number;
		
	}

	export interface ActiveMedalReqBuilder {
		new(): ActiveMedalReq;
		decode(buffer: ArrayBuffer) : ActiveMedalReq;
		//decode(buffer: NodeBuffer) : ActiveMedalReq;
		//decode(buffer: ByteArrayBuffer) : ActiveMedalReq;
		decode64(buffer: string) : ActiveMedalReq;
		
	}
}


declare module pb {

	var ActiveMedalAck: ActiveMedalAck;
	export interface ActiveMedalAck extends ProtoBufModel {
		new(obj?: any): ActiveMedalAck;
		allPoint?: number;
		Medal: number[];
		
	}

	export interface ActiveMedalAckBuilder {
		new(): ActiveMedalAck;
		decode(buffer: ArrayBuffer) : ActiveMedalAck;
		//decode(buffer: NodeBuffer) : ActiveMedalAck;
		//decode(buffer: ByteArrayBuffer) : ActiveMedalAck;
		decode64(buffer: string) : ActiveMedalAck;
		
	}
}


declare module pb {

	var AchievementInfo: AchievementInfo;
	export interface AchievementInfo extends ProtoBufModel {
		new(obj?: any): AchievementInfo;
		conditionType?: number;
		canGetId?: number;
		process?: number;
		isGetAllAward?: number;
		
	}

	export interface AchievementInfoBuilder {
		new(): AchievementInfo;
		decode(buffer: ArrayBuffer) : AchievementInfo;
		//decode(buffer: NodeBuffer) : AchievementInfo;
		//decode(buffer: ByteArrayBuffer) : AchievementInfo;
		decode64(buffer: string) : AchievementInfo;
		
	}
}


declare module pb {

	var AchievementTaskInfoNtf: AchievementTaskInfoNtf;
	export interface AchievementTaskInfoNtf extends ProtoBufModel {
		new(obj?: any): AchievementTaskInfoNtf;
		taskId?: number;
		process?: number;
		conditionType?: number;
		
	}

	export interface AchievementTaskInfoNtfBuilder {
		new(): AchievementTaskInfoNtf;
		decode(buffer: ArrayBuffer) : AchievementTaskInfoNtf;
		//decode(buffer: NodeBuffer) : AchievementTaskInfoNtf;
		//decode(buffer: ByteArrayBuffer) : AchievementTaskInfoNtf;
		decode64(buffer: string) : AchievementTaskInfoNtf;
		
	}
}


declare module pb {

	var ErrorAck: ErrorAck;
	export interface ErrorAck extends ProtoBufModel {
		new(obj?: any): ErrorAck;
		code?: number;
		message?: string;
		
	}

	export interface ErrorAckBuilder {
		new(): ErrorAck;
		decode(buffer: ArrayBuffer) : ErrorAck;
		//decode(buffer: NodeBuffer) : ErrorAck;
		//decode(buffer: ByteArrayBuffer) : ErrorAck;
		decode64(buffer: string) : ErrorAck;
		
	}
}


declare module pb {

	var UserLoginInfo: UserLoginInfo;
	export interface UserLoginInfo extends ProtoBufModel {
		new(obj?: any): UserLoginInfo;
		userid?: number;
		nickName?: string;
		avatar?: string;
		vipLevel?: number;
		vipScore?: number;
		level?: number;
		exp?: number;
		gold?: number;
		ingot?: number;
		createTime?: number;
		stageId?: number;
		stageWave?: number;
		combat?: number;
		heros: HeroInfo[];
		rein?: Rein;
		reinCost: ReinCost[];
		fabao: Fabao[];
		fieldBossInfo?: FieldBossInfo;
		worldBossInfo?: WorldBossInfoNtf;
		ArenaFightNum?: number;
		fightModel?: number;
		task?: TaskInfoNtf;
		shopInfo: dcodeIO.ProtoBuf.Map<number,ShopInfo>;
		chuanqiBi?: number;
		materialStage: dcodeIO.ProtoBuf.Map<number,MaterialStage>;
		panaceas: dcodeIO.ProtoBuf.Map<number,PanaceaInfo>;
		signInfo?: SignInfo;
		dayStateInfo?: DayStateInfo;
		official?: number;
		holy: Holy[];
		atlases: Atlas[];
		atlasGathers: AtlasGather[];
		miningWorkTime?: number;
		miner?: number;
		expStage?: ExpStage;
		pets: dcodeIO.ProtoBuf.Map<number,PetInfo>;
		juexues: Juexue[];
		userWear?: UserWear;
		isHaveGetDailyCompetitveReward?: number;
		honour?: number;
		darkPalaceInfo?: DarkPalaceInfo;
		personBoss: dcodeIO.ProtoBuf.Map<number,number>;
		vipBoss: dcodeIO.ProtoBuf.Map<number,number>;
		vipGift: number[];
		fit?: Fit;
		rechargeAll?: number;
		accumulativeAllGetIds: number[];
		monthCard: dcodeIO.ProtoBuf.Map<number,MonthCardUnit>;
		firstRecharge?: FirstRecharge;
		spendRebates?: SpendRebates;
		dailyPack: dcodeIO.ProtoBuf.Map<number,number>;
		growFund?: GrowFund;
		warOrder?: WarOrder;
		redPacketGetNum?: number;
		elf?: Elf;
		cutTreasureLv?: number;
		fitHolyEquip?: FitHolyEquip;
		recharge: number[];
		shaBakeIsEnd?: number;
		crossShabakeIsEnd?: number;
		isFriendApply?: boolean;
		bindingIngot?: number;
		hookupTime?: number;
		hookupBag: itemUnit[];
		contRecharge?: ContRecharge;
		openGift: dcodeIO.ProtoBuf.Map<number,number>;
		crossChallengeIsApply?: number;
		AnnouncementInfos: AnnouncementInfo[];
		vipCustomer?: boolean;
		chatBanTime?: number;
		haveUseRecharge?: number;
		goldIngot?: number;
		ancientBossInfo?: AncientBossInfo;
		titleList: Title[];
		miJiInfos: MiJiInfo[];
		ancientTreasureInfo: dcodeIO.ProtoBuf.Map<number,AncientTreasureInfo>;
		petAppendage: dcodeIO.ProtoBuf.Map<number,number>;
		hellBossInfo?: HellBossInfo;
		redPacketNum?: number;
		daBaoEquip: dcodeIO.ProtoBuf.Map<number,number>;
		daBaoMysteryEnergy?: number;
		appletsEnergy?: number;
		appletsResumeTime?: number;
		appletsInfos: dcodeIO.ProtoBuf.Map<number,appletsInfo>;
		label?: Label;
		subscribe: number[];
		privilege: number[];
		useRedPacketNum?: number;
		dailyRecharge?: number;
		
	}

	export interface UserLoginInfoBuilder {
		new(): UserLoginInfo;
		decode(buffer: ArrayBuffer) : UserLoginInfo;
		//decode(buffer: NodeBuffer) : UserLoginInfo;
		//decode(buffer: ByteArrayBuffer) : UserLoginInfo;
		decode64(buffer: string) : UserLoginInfo;
		
	}
}


declare module pb {

	var appletsInfo: appletsInfo;
	export interface appletsInfo extends ProtoBufModel {
		new(obj?: any): appletsInfo;
		stageId?: number;
		
	}

	export interface appletsInfoBuilder {
		new(): appletsInfo;
		decode(buffer: ArrayBuffer) : appletsInfo;
		//decode(buffer: NodeBuffer) : appletsInfo;
		//decode(buffer: ByteArrayBuffer) : appletsInfo;
		decode64(buffer: string) : appletsInfo;
		
	}
}


declare module pb {

	var AncientTreasureInfo: AncientTreasureInfo;
	export interface AncientTreasureInfo extends ProtoBufModel {
		new(obj?: any): AncientTreasureInfo;
		zhuLinLv?: number;
		starLv?: number;
		jueXinLv?: number;
		types?: number;
		
	}

	export interface AncientTreasureInfoBuilder {
		new(): AncientTreasureInfo;
		decode(buffer: ArrayBuffer) : AncientTreasureInfo;
		//decode(buffer: NodeBuffer) : AncientTreasureInfo;
		//decode(buffer: ByteArrayBuffer) : AncientTreasureInfo;
		decode64(buffer: string) : AncientTreasureInfo;
		
	}
}


declare module pb {

	var MiJiInfo: MiJiInfo;
	export interface MiJiInfo extends ProtoBufModel {
		new(obj?: any): MiJiInfo;
		id?: number;
		lv?: number;
		
	}

	export interface MiJiInfoBuilder {
		new(): MiJiInfo;
		decode(buffer: ArrayBuffer) : MiJiInfo;
		//decode(buffer: NodeBuffer) : MiJiInfo;
		//decode(buffer: ByteArrayBuffer) : MiJiInfo;
		decode64(buffer: string) : MiJiInfo;
		
	}
}


declare module pb {

	var AnnouncementInfo: AnnouncementInfo;
	export interface AnnouncementInfo extends ProtoBufModel {
		new(obj?: any): AnnouncementInfo;
		id?: number;
		title?: string;
		announcement?: string;
		
	}

	export interface AnnouncementInfoBuilder {
		new(): AnnouncementInfo;
		decode(buffer: ArrayBuffer) : AnnouncementInfo;
		//decode(buffer: NodeBuffer) : AnnouncementInfo;
		//decode(buffer: ByteArrayBuffer) : AnnouncementInfo;
		decode64(buffer: string) : AnnouncementInfo;
		
	}
}


declare module pb {

	var HeroInfo: HeroInfo;
	export interface HeroInfo extends ProtoBufModel {
		new(obj?: any): HeroInfo;
		index?: number;
		job?: number;
		sex?: number;
		equips: dcodeIO.ProtoBuf.Map<number,EquipUnit>;
		equipGrids: EquipGrid[];
		heroProp?: HeroProp;
		wing: Wing[];
		zodiacs: dcodeIO.ProtoBuf.Map<number,SpecialEquipUnit>;
		kingarms: dcodeIO.ProtoBuf.Map<number,SpecialEquipUnit>;
		dictates: DictateInfo[];
		wingSpecial: WingSpecialNtf[];
		jewels: dcodeIO.ProtoBuf.Map<number,JewelInfo>;
		name?: string;
		insideInfo?: InsideInfo;
		Fashions: dcodeIO.ProtoBuf.Map<number,Fashion>;
		wears?: Wears;
		rings: dcodeIO.ProtoBuf.Map<number,Ring>;
		skills: SkillUnit[];
		skillBag: dcodeIO.ProtoBuf.Map<number,number>;
		uniqueSkills: SkillUnit[];
		uniqueSkillBag: dcodeIO.ProtoBuf.Map<number,number>;
		godEquips: dcodeIO.ProtoBuf.Map<number,GodEquip>;
		area: dcodeIO.ProtoBuf.Map<number,number>;
		equipClears: dcodeIO.ProtoBuf.Map<number,EquipClearArr>;
		expLvl?: number;
		dragonEquip: dcodeIO.ProtoBuf.Map<number,number>;
		MagicCircle: dcodeIO.ProtoBuf.Map<number,number>;
		talents?: TalentInfo;
		chuanShiEquip: dcodeIO.ProtoBuf.Map<number,number>;
		ancientSkill?: AncientSkill;
		chuanShiStrengthen: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface HeroInfoBuilder {
		new(): HeroInfo;
		decode(buffer: ArrayBuffer) : HeroInfo;
		//decode(buffer: NodeBuffer) : HeroInfo;
		//decode(buffer: ByteArrayBuffer) : HeroInfo;
		decode64(buffer: string) : HeroInfo;
		
	}
}


declare module pb {

	var UserWear: UserWear;
	export interface UserWear extends ProtoBufModel {
		new(obj?: any): UserWear;
		petid?: number;
		fitFashionId?: number;
		
	}

	export interface UserWearBuilder {
		new(): UserWear;
		decode(buffer: ArrayBuffer) : UserWear;
		//decode(buffer: NodeBuffer) : UserWear;
		//decode(buffer: ByteArrayBuffer) : UserWear;
		decode64(buffer: string) : UserWear;
		
	}
}


declare module pb {

	var Wears: Wears;
	export interface Wears extends ProtoBufModel {
		new(obj?: any): Wears;
		FashionWeaponId?: number;
		FashionClothId?: number;
		atlasWear: number[];
		wingId?: number;
		magicCircleLvId?: number;
		titleId?: number;
		
	}

	export interface WearsBuilder {
		new(): Wears;
		decode(buffer: ArrayBuffer) : Wears;
		//decode(buffer: NodeBuffer) : Wears;
		//decode(buffer: ByteArrayBuffer) : Wears;
		decode64(buffer: string) : Wears;
		
	}
}


declare module pb {

	var BriefUserInfo: BriefUserInfo;
	export interface BriefUserInfo extends ProtoBufModel {
		new(obj?: any): BriefUserInfo;
		id?: number;
		name?: string;
		sex?: number;
		lvl?: number;
		vip?: number;
		combat?: number;
		avatar?: string;
		job?: number;
		maxLv?: number;
		serverId?: number;
		display: dcodeIO.ProtoBuf.Map<number,Display>;
		
	}

	export interface BriefUserInfoBuilder {
		new(): BriefUserInfo;
		decode(buffer: ArrayBuffer) : BriefUserInfo;
		//decode(buffer: NodeBuffer) : BriefUserInfo;
		//decode(buffer: ByteArrayBuffer) : BriefUserInfo;
		decode64(buffer: string) : BriefUserInfo;
		
	}
}


declare module pb {

	var BriefUserInfoWithDisplay: BriefUserInfoWithDisplay;
	export interface BriefUserInfoWithDisplay extends ProtoBufModel {
		new(obj?: any): BriefUserInfoWithDisplay;
		userInfo?: BriefUserInfo;
		display?: DisplayNtf;
		
	}

	export interface BriefUserInfoWithDisplayBuilder {
		new(): BriefUserInfoWithDisplay;
		decode(buffer: ArrayBuffer) : BriefUserInfoWithDisplay;
		//decode(buffer: NodeBuffer) : BriefUserInfoWithDisplay;
		//decode(buffer: ByteArrayBuffer) : BriefUserInfoWithDisplay;
		decode64(buffer: string) : BriefUserInfoWithDisplay;
		
	}
}


declare module pb {

	var TopDataChangeNtf: TopDataChangeNtf;
	export interface TopDataChangeNtf extends ProtoBufModel {
		new(obj?: any): TopDataChangeNtf;
		changeInfos: TopDataChange[];
		type?: number;
		
	}

	export interface TopDataChangeNtfBuilder {
		new(): TopDataChangeNtf;
		decode(buffer: ArrayBuffer) : TopDataChangeNtf;
		//decode(buffer: NodeBuffer) : TopDataChangeNtf;
		//decode(buffer: ByteArrayBuffer) : TopDataChangeNtf;
		decode64(buffer: string) : TopDataChangeNtf;
		
	}
}


declare module pb {

	var TopDataChange: TopDataChange;
	export interface TopDataChange extends ProtoBufModel {
		new(obj?: any): TopDataChange;
		id?: number;
		change?: number;
		nowNum?: number;
		
	}

	export interface TopDataChangeBuilder {
		new(): TopDataChange;
		decode(buffer: ArrayBuffer) : TopDataChange;
		//decode(buffer: NodeBuffer) : TopDataChange;
		//decode(buffer: ByteArrayBuffer) : TopDataChange;
		decode64(buffer: string) : TopDataChange;
		
	}
}


declare module pb {

	var BagDataChangeNtf: BagDataChangeNtf;
	export interface BagDataChangeNtf extends ProtoBufModel {
		new(obj?: any): BagDataChangeNtf;
		changeInfos: ItemChange[];
		type?: number;
		
	}

	export interface BagDataChangeNtfBuilder {
		new(): BagDataChangeNtf;
		decode(buffer: ArrayBuffer) : BagDataChangeNtf;
		//decode(buffer: NodeBuffer) : BagDataChangeNtf;
		//decode(buffer: ByteArrayBuffer) : BagDataChangeNtf;
		decode64(buffer: string) : BagDataChangeNtf;
		
	}
}


declare module pb {

	var ItemChange: ItemChange;
	export interface ItemChange extends ProtoBufModel {
		new(obj?: any): ItemChange;
		position?: number;
		itemId?: number;
		change?: number;
		nowNum?: number;
		getSource?: GetSource;
		
	}

	export interface ItemChangeBuilder {
		new(): ItemChange;
		decode(buffer: ArrayBuffer) : ItemChange;
		//decode(buffer: NodeBuffer) : ItemChange;
		//decode(buffer: ByteArrayBuffer) : ItemChange;
		decode64(buffer: string) : ItemChange;
		
	}
}


declare module pb {

	var BagEquipDataChangeNtf: BagEquipDataChangeNtf;
	export interface BagEquipDataChangeNtf extends ProtoBufModel {
		new(obj?: any): BagEquipDataChangeNtf;
		changeInfos: EquipChange[];
		type?: number;
		
	}

	export interface BagEquipDataChangeNtfBuilder {
		new(): BagEquipDataChangeNtf;
		decode(buffer: ArrayBuffer) : BagEquipDataChangeNtf;
		//decode(buffer: NodeBuffer) : BagEquipDataChangeNtf;
		//decode(buffer: ByteArrayBuffer) : BagEquipDataChangeNtf;
		decode64(buffer: string) : BagEquipDataChangeNtf;
		
	}
}


declare module pb {

	var EquipChange: EquipChange;
	export interface EquipChange extends ProtoBufModel {
		new(obj?: any): EquipChange;
		position?: number;
		itemId?: number;
		change?: number;
		nowNum?: number;
		equip?: EquipUnit;
		getSource?: GetSource;
		
	}

	export interface EquipChangeBuilder {
		new(): EquipChange;
		decode(buffer: ArrayBuffer) : EquipChange;
		//decode(buffer: NodeBuffer) : EquipChange;
		//decode(buffer: ByteArrayBuffer) : EquipChange;
		decode64(buffer: string) : EquipChange;
		
	}
}


declare module pb {

	var Item: Item;
	export interface Item extends ProtoBufModel {
		new(obj?: any): Item;
		itemId?: number;
		count?: number;
		position?: number;
		equip?: EquipUnit;
		getSource?: GetSource;
		
	}

	export interface ItemBuilder {
		new(): Item;
		decode(buffer: ArrayBuffer) : Item;
		//decode(buffer: NodeBuffer) : Item;
		//decode(buffer: ByteArrayBuffer) : Item;
		decode64(buffer: string) : Item;
		
	}
}


declare module pb {

	var GoodsChangeNtf: GoodsChangeNtf;
	export interface GoodsChangeNtf extends ProtoBufModel {
		new(obj?: any): GoodsChangeNtf;
		items: itemUnit[];
		
	}

	export interface GoodsChangeNtfBuilder {
		new(): GoodsChangeNtf;
		decode(buffer: ArrayBuffer) : GoodsChangeNtf;
		//decode(buffer: NodeBuffer) : GoodsChangeNtf;
		//decode(buffer: ByteArrayBuffer) : GoodsChangeNtf;
		decode64(buffer: string) : GoodsChangeNtf;
		
	}
}


declare module pb {

	var itemUnit: itemUnit;
	export interface itemUnit extends ProtoBufModel {
		new(obj?: any): itemUnit;
		itemId?: number;
		count?: number;
		
	}

	export interface itemUnitBuilder {
		new(): itemUnit;
		decode(buffer: ArrayBuffer) : itemUnit;
		//decode(buffer: NodeBuffer) : itemUnit;
		//decode(buffer: ByteArrayBuffer) : itemUnit;
		decode64(buffer: string) : itemUnit;
		
	}
}


declare module pb {

	var EquipUnit: EquipUnit;
	export interface EquipUnit extends ProtoBufModel {
		new(obj?: any): EquipUnit;
		itemId?: number;
		randProps: EquipRandProp[];
		lock?: boolean;
		equipIndex?: number;
		lucky?: number;
		
	}

	export interface EquipUnitBuilder {
		new(): EquipUnit;
		decode(buffer: ArrayBuffer) : EquipUnit;
		//decode(buffer: NodeBuffer) : EquipUnit;
		//decode(buffer: ByteArrayBuffer) : EquipUnit;
		decode64(buffer: string) : EquipUnit;
		
	}
}


declare module pb {

	var EquipRandProp: EquipRandProp;
	export interface EquipRandProp extends ProtoBufModel {
		new(obj?: any): EquipRandProp;
		propId?: number;
		color?: number;
		value?: number;
		
	}

	export interface EquipRandPropBuilder {
		new(): EquipRandProp;
		decode(buffer: ArrayBuffer) : EquipRandProp;
		//decode(buffer: NodeBuffer) : EquipRandProp;
		//decode(buffer: ByteArrayBuffer) : EquipRandProp;
		decode64(buffer: string) : EquipRandProp;
		
	}
}


declare module pb {

	var EquipClearArr: EquipClearArr;
	export interface EquipClearArr extends ProtoBufModel {
		new(obj?: any): EquipClearArr;
		equipClearInfo: EquipClearInfo[];
		
	}

	export interface EquipClearArrBuilder {
		new(): EquipClearArr;
		decode(buffer: ArrayBuffer) : EquipClearArr;
		//decode(buffer: NodeBuffer) : EquipClearArr;
		//decode(buffer: ByteArrayBuffer) : EquipClearArr;
		decode64(buffer: string) : EquipClearArr;
		
	}
}


declare module pb {

	var EquipClearInfo: EquipClearInfo;
	export interface EquipClearInfo extends ProtoBufModel {
		new(obj?: any): EquipClearInfo;
		grade?: number;
		color?: number;
		propId?: number;
		value?: number;
		
	}

	export interface EquipClearInfoBuilder {
		new(): EquipClearInfo;
		decode(buffer: ArrayBuffer) : EquipClearInfo;
		//decode(buffer: NodeBuffer) : EquipClearInfo;
		//decode(buffer: ByteArrayBuffer) : EquipClearInfo;
		decode64(buffer: string) : EquipClearInfo;
		
	}
}


declare module pb {

	var HeroProp: HeroProp;
	export interface HeroProp extends ProtoBufModel {
		new(obj?: any): HeroProp;
		props: dcodeIO.ProtoBuf.Map<number,number>;
		modulesCombat: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface HeroPropBuilder {
		new(): HeroProp;
		decode(buffer: ArrayBuffer) : HeroProp;
		//decode(buffer: NodeBuffer) : HeroProp;
		//decode(buffer: ByteArrayBuffer) : HeroProp;
		decode64(buffer: string) : HeroProp;
		
	}
}


declare module pb {

	var TaskInfoNtf: TaskInfoNtf;
	export interface TaskInfoNtf extends ProtoBufModel {
		new(obj?: any): TaskInfoNtf;
		taskId?: number;
		process?: number;
		markProcess?: number;
		
	}

	export interface TaskInfoNtfBuilder {
		new(): TaskInfoNtf;
		decode(buffer: ArrayBuffer) : TaskInfoNtf;
		//decode(buffer: NodeBuffer) : TaskInfoNtf;
		//decode(buffer: ByteArrayBuffer) : TaskInfoNtf;
		decode64(buffer: string) : TaskInfoNtf;
		
	}
}


declare module pb {

	var DisplayNtf: DisplayNtf;
	export interface DisplayNtf extends ProtoBufModel {
		new(obj?: any): DisplayNtf;
		display: dcodeIO.ProtoBuf.Map<number,Display>;
		
	}

	export interface DisplayNtfBuilder {
		new(): DisplayNtf;
		decode(buffer: ArrayBuffer) : DisplayNtf;
		//decode(buffer: NodeBuffer) : DisplayNtf;
		//decode(buffer: ByteArrayBuffer) : DisplayNtf;
		decode64(buffer: string) : DisplayNtf;
		
	}
}


declare module pb {

	var EventNtf: EventNtf;
	export interface EventNtf extends ProtoBufModel {
		new(obj?: any): EventNtf;
		id?: number;
		ts?: number;
		args: string[];
		sourceId?: number;
		
	}

	export interface EventNtfBuilder {
		new(): EventNtf;
		decode(buffer: ArrayBuffer) : EventNtf;
		//decode(buffer: NodeBuffer) : EventNtf;
		//decode(buffer: ByteArrayBuffer) : EventNtf;
		decode64(buffer: string) : EventNtf;
		
	}
}


declare module pb {

	var DailyConditionNtf: DailyConditionNtf;
	export interface DailyConditionNtf extends ProtoBufModel {
		new(obj?: any): DailyConditionNtf;
		dailyConditions: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface DailyConditionNtfBuilder {
		new(): DailyConditionNtf;
		decode(buffer: ArrayBuffer) : DailyConditionNtf;
		//decode(buffer: NodeBuffer) : DailyConditionNtf;
		//decode(buffer: ByteArrayBuffer) : DailyConditionNtf;
		decode64(buffer: string) : DailyConditionNtf;
		
	}
}


declare module pb {

	var PropInfo: PropInfo;
	export interface PropInfo extends ProtoBufModel {
		new(obj?: any): PropInfo;
		key?: number;
		value?: number;
		
	}

	export interface PropInfoBuilder {
		new(): PropInfo;
		decode(buffer: ArrayBuffer) : PropInfo;
		//decode(buffer: NodeBuffer) : PropInfo;
		//decode(buffer: ByteArrayBuffer) : PropInfo;
		decode64(buffer: string) : PropInfo;
		
	}
}


declare module pb {

	var EquipGrid: EquipGrid;
	export interface EquipGrid extends ProtoBufModel {
		new(obj?: any): EquipGrid;
		pos?: number;
		strength?: number;
		
	}

	export interface EquipGridBuilder {
		new(): EquipGrid;
		decode(buffer: ArrayBuffer) : EquipGrid;
		//decode(buffer: NodeBuffer) : EquipGrid;
		//decode(buffer: ByteArrayBuffer) : EquipGrid;
		decode64(buffer: string) : EquipGrid;
		
	}
}


declare module pb {

	var Fabao: Fabao;
	export interface Fabao extends ProtoBufModel {
		new(obj?: any): Fabao;
		id?: number;
		level?: number;
		exp?: number;
		skills: number[];
		
	}

	export interface FabaoBuilder {
		new(): Fabao;
		decode(buffer: ArrayBuffer) : Fabao;
		//decode(buffer: NodeBuffer) : Fabao;
		//decode(buffer: ByteArrayBuffer) : Fabao;
		decode64(buffer: string) : Fabao;
		
	}
}


declare module pb {

	var GodEquip: GodEquip;
	export interface GodEquip extends ProtoBufModel {
		new(obj?: any): GodEquip;
		id?: number;
		level?: number;
		blood?: number;
		
	}

	export interface GodEquipBuilder {
		new(): GodEquip;
		decode(buffer: ArrayBuffer) : GodEquip;
		//decode(buffer: NodeBuffer) : GodEquip;
		//decode(buffer: ByteArrayBuffer) : GodEquip;
		decode64(buffer: string) : GodEquip;
		
	}
}


declare module pb {

	var Juexue: Juexue;
	export interface Juexue extends ProtoBufModel {
		new(obj?: any): Juexue;
		id?: number;
		level?: number;
		
	}

	export interface JuexueBuilder {
		new(): Juexue;
		decode(buffer: ArrayBuffer) : Juexue;
		//decode(buffer: NodeBuffer) : Juexue;
		//decode(buffer: ByteArrayBuffer) : Juexue;
		decode64(buffer: string) : Juexue;
		
	}
}


declare module pb {

	var Fashion: Fashion;
	export interface Fashion extends ProtoBufModel {
		new(obj?: any): Fashion;
		id?: number;
		level?: number;
		
	}

	export interface FashionBuilder {
		new(): Fashion;
		decode(buffer: ArrayBuffer) : Fashion;
		//decode(buffer: NodeBuffer) : Fashion;
		//decode(buffer: ByteArrayBuffer) : Fashion;
		decode64(buffer: string) : Fashion;
		
	}
}


declare module pb {

	var Wing: Wing;
	export interface Wing extends ProtoBufModel {
		new(obj?: any): Wing;
		id?: number;
		exp?: number;
		
	}

	export interface WingBuilder {
		new(): Wing;
		decode(buffer: ArrayBuffer) : Wing;
		//decode(buffer: NodeBuffer) : Wing;
		//decode(buffer: ByteArrayBuffer) : Wing;
		decode64(buffer: string) : Wing;
		
	}
}


declare module pb {

	var WingSpecialNtf: WingSpecialNtf;
	export interface WingSpecialNtf extends ProtoBufModel {
		new(obj?: any): WingSpecialNtf;
		specialType?: number;
		level?: number;
		
	}

	export interface WingSpecialNtfBuilder {
		new(): WingSpecialNtf;
		decode(buffer: ArrayBuffer) : WingSpecialNtf;
		//decode(buffer: NodeBuffer) : WingSpecialNtf;
		//decode(buffer: ByteArrayBuffer) : WingSpecialNtf;
		decode64(buffer: string) : WingSpecialNtf;
		
	}
}


declare module pb {

	var Rein: Rein;
	export interface Rein extends ProtoBufModel {
		new(obj?: any): Rein;
		id?: number;
		exp?: number;
		
	}

	export interface ReinBuilder {
		new(): Rein;
		decode(buffer: ArrayBuffer) : Rein;
		//decode(buffer: NodeBuffer) : Rein;
		//decode(buffer: ByteArrayBuffer) : Rein;
		decode64(buffer: string) : Rein;
		
	}
}


declare module pb {

	var ReinCost: ReinCost;
	export interface ReinCost extends ProtoBufModel {
		new(obj?: any): ReinCost;
		id?: number;
		num?: number;
		
	}

	export interface ReinCostBuilder {
		new(): ReinCost;
		decode(buffer: ArrayBuffer) : ReinCost;
		//decode(buffer: NodeBuffer) : ReinCost;
		//decode(buffer: ByteArrayBuffer) : ReinCost;
		decode64(buffer: string) : ReinCost;
		
	}
}


declare module pb {

	var Atlas: Atlas;
	export interface Atlas extends ProtoBufModel {
		new(obj?: any): Atlas;
		id?: number;
		star?: number;
		isActive?: boolean;
		
	}

	export interface AtlasBuilder {
		new(): Atlas;
		decode(buffer: ArrayBuffer) : Atlas;
		//decode(buffer: NodeBuffer) : Atlas;
		//decode(buffer: ByteArrayBuffer) : Atlas;
		decode64(buffer: string) : Atlas;
		
	}
}


declare module pb {

	var AtlasGather: AtlasGather;
	export interface AtlasGather extends ProtoBufModel {
		new(obj?: any): AtlasGather;
		id?: number;
		star?: number;
		isActive?: boolean;
		
	}

	export interface AtlasGatherBuilder {
		new(): AtlasGather;
		decode(buffer: ArrayBuffer) : AtlasGather;
		//decode(buffer: NodeBuffer) : AtlasGather;
		//decode(buffer: ByteArrayBuffer) : AtlasGather;
		decode64(buffer: string) : AtlasGather;
		
	}
}


declare module pb {

	var Preference: Preference;
	export interface Preference extends ProtoBufModel {
		new(obj?: any): Preference;
		key?: number;
		value?: string;
		
	}

	export interface PreferenceBuilder {
		new(): Preference;
		decode(buffer: ArrayBuffer) : Preference;
		//decode(buffer: NodeBuffer) : Preference;
		//decode(buffer: ByteArrayBuffer) : Preference;
		decode64(buffer: string) : Preference;
		
	}
}


declare module pb {

	var WorldBossInfoNtf: WorldBossInfoNtf;
	export interface WorldBossInfoNtf extends ProtoBufModel {
		new(obj?: any): WorldBossInfoNtf;
		id?: number;
		prepareTime?: number;
		openTime?: number;
		closeTime?: number;
		
	}

	export interface WorldBossInfoNtfBuilder {
		new(): WorldBossInfoNtf;
		decode(buffer: ArrayBuffer) : WorldBossInfoNtf;
		//decode(buffer: NodeBuffer) : WorldBossInfoNtf;
		//decode(buffer: ByteArrayBuffer) : WorldBossInfoNtf;
		decode64(buffer: string) : WorldBossInfoNtf;
		
	}
}


declare module pb {

	var VipBoss: VipBoss;
	export interface VipBoss extends ProtoBufModel {
		new(obj?: any): VipBoss;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface VipBossBuilder {
		new(): VipBoss;
		decode(buffer: ArrayBuffer) : VipBoss;
		//decode(buffer: NodeBuffer) : VipBoss;
		//decode(buffer: ByteArrayBuffer) : VipBoss;
		decode64(buffer: string) : VipBoss;
		
	}
}


declare module pb {

	var ExpStage: ExpStage;
	export interface ExpStage extends ProtoBufModel {
		new(obj?: any): ExpStage;
		dareNum?: number;
		buyNum?: number;
		expStages: dcodeIO.ProtoBuf.Map<number,number>;
		appraise: dcodeIO.ProtoBuf.Map<number,number>;
		layer?: number;
		
	}

	export interface ExpStageBuilder {
		new(): ExpStage;
		decode(buffer: ArrayBuffer) : ExpStage;
		//decode(buffer: NodeBuffer) : ExpStage;
		//decode(buffer: ByteArrayBuffer) : ExpStage;
		decode64(buffer: string) : ExpStage;
		
	}
}


declare module pb {

	var MaterialStage: MaterialStage;
	export interface MaterialStage extends ProtoBufModel {
		new(obj?: any): MaterialStage;
		dareNum?: number;
		buyNum?: number;
		nowLayer?: number;
		lastLayer?: number;
		
	}

	export interface MaterialStageBuilder {
		new(): MaterialStage;
		decode(buffer: ArrayBuffer) : MaterialStage;
		//decode(buffer: NodeBuffer) : MaterialStage;
		//decode(buffer: ByteArrayBuffer) : MaterialStage;
		decode64(buffer: string) : MaterialStage;
		
	}
}


declare module pb {

	var Display: Display;
	export interface Display extends ProtoBufModel {
		new(obj?: any): Display;
		clothItemId?: number;
		clothType?: number;
		weaponItemId?: number;
		weaponType?: number;
		wingId?: number;
		magicCircleLvId?: number;
		titleId?: number;
		labelId?: number;
		labelJob?: number;
		
	}

	export interface DisplayBuilder {
		new(): Display;
		decode(buffer: ArrayBuffer) : Display;
		//decode(buffer: NodeBuffer) : Display;
		//decode(buffer: ByteArrayBuffer) : Display;
		decode64(buffer: string) : Display;
		
	}
}


declare module pb {

	var SpecialEquipUnit: SpecialEquipUnit;
	export interface SpecialEquipUnit extends ProtoBufModel {
		new(obj?: any): SpecialEquipUnit;
		itemId?: number;
		getSource?: GetSource;
		
	}

	export interface SpecialEquipUnitBuilder {
		new(): SpecialEquipUnit;
		decode(buffer: ArrayBuffer) : SpecialEquipUnit;
		//decode(buffer: NodeBuffer) : SpecialEquipUnit;
		//decode(buffer: ByteArrayBuffer) : SpecialEquipUnit;
		decode64(buffer: string) : SpecialEquipUnit;
		
	}
}


declare module pb {

	var GetSource: GetSource;
	export interface GetSource extends ProtoBufModel {
		new(obj?: any): GetSource;
		map?: string;
		monster?: string;
		skillUser?: string;
		skillDate?: string;
		
	}

	export interface GetSourceBuilder {
		new(): GetSource;
		decode(buffer: ArrayBuffer) : GetSource;
		//decode(buffer: NodeBuffer) : GetSource;
		//decode(buffer: ByteArrayBuffer) : GetSource;
		decode64(buffer: string) : GetSource;
		
	}
}


declare module pb {

	var RankInfo: RankInfo;
	export interface RankInfo extends ProtoBufModel {
		new(obj?: any): RankInfo;
		rank?: number;
		score?: number;
		userInfo?: BriefUserInfo;
		display?: Display;
		
	}

	export interface RankInfoBuilder {
		new(): RankInfo;
		decode(buffer: ArrayBuffer) : RankInfo;
		//decode(buffer: NodeBuffer) : RankInfo;
		//decode(buffer: ByteArrayBuffer) : RankInfo;
		decode64(buffer: string) : RankInfo;
		
	}
}


declare module pb {

	var SkillUnit: SkillUnit;
	export interface SkillUnit extends ProtoBufModel {
		new(obj?: any): SkillUnit;
		skillId?: number;
		level?: number;
		startTime?: number;
		endTime?: number;
		
	}

	export interface SkillUnitBuilder {
		new(): SkillUnit;
		decode(buffer: ArrayBuffer) : SkillUnit;
		//decode(buffer: NodeBuffer) : SkillUnit;
		//decode(buffer: ByteArrayBuffer) : SkillUnit;
		decode64(buffer: string) : SkillUnit;
		
	}
}


declare module pb {

	var ShopInfo: ShopInfo;
	export interface ShopInfo extends ProtoBufModel {
		new(obj?: any): ShopInfo;
		shopItem: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ShopInfoBuilder {
		new(): ShopInfo;
		decode(buffer: ArrayBuffer) : ShopInfo;
		//decode(buffer: NodeBuffer) : ShopInfo;
		//decode(buffer: ByteArrayBuffer) : ShopInfo;
		decode64(buffer: string) : ShopInfo;
		
	}
}


declare module pb {

	var DictateInfo: DictateInfo;
	export interface DictateInfo extends ProtoBufModel {
		new(obj?: any): DictateInfo;
		type?: number;
		level?: number;
		
	}

	export interface DictateInfoBuilder {
		new(): DictateInfo;
		decode(buffer: ArrayBuffer) : DictateInfo;
		//decode(buffer: NodeBuffer) : DictateInfo;
		//decode(buffer: ByteArrayBuffer) : DictateInfo;
		decode64(buffer: string) : DictateInfo;
		
	}
}


declare module pb {

	var PanaceaInfo: PanaceaInfo;
	export interface PanaceaInfo extends ProtoBufModel {
		new(obj?: any): PanaceaInfo;
		numbers?: number;
		number?: number;
		
	}

	export interface PanaceaInfoBuilder {
		new(): PanaceaInfo;
		decode(buffer: ArrayBuffer) : PanaceaInfo;
		//decode(buffer: NodeBuffer) : PanaceaInfo;
		//decode(buffer: ByteArrayBuffer) : PanaceaInfo;
		decode64(buffer: string) : PanaceaInfo;
		
	}
}


declare module pb {

	var JewelInfo: JewelInfo;
	export interface JewelInfo extends ProtoBufModel {
		new(obj?: any): JewelInfo;
		left?: number;
		right?: number;
		down?: number;
		
	}

	export interface JewelInfoBuilder {
		new(): JewelInfo;
		decode(buffer: ArrayBuffer) : JewelInfo;
		//decode(buffer: NodeBuffer) : JewelInfo;
		//decode(buffer: ByteArrayBuffer) : JewelInfo;
		decode64(buffer: string) : JewelInfo;
		
	}
}


declare module pb {

	var DayStateInfo: DayStateInfo;
	export interface DayStateInfo extends ProtoBufModel {
		new(obj?: any): DayStateInfo;
		rankWorship?: number;
		monthCardReceive: number[];
		
	}

	export interface DayStateInfoBuilder {
		new(): DayStateInfo;
		decode(buffer: ArrayBuffer) : DayStateInfo;
		//decode(buffer: NodeBuffer) : DayStateInfo;
		//decode(buffer: ByteArrayBuffer) : DayStateInfo;
		decode64(buffer: string) : DayStateInfo;
		
	}
}


declare module pb {

	var SignInfo: SignInfo;
	export interface SignInfo extends ProtoBufModel {
		new(obj?: any): SignInfo;
		signCount?: number;
		signDay: dcodeIO.ProtoBuf.Map<number,number>;
		cumulativeDay: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface SignInfoBuilder {
		new(): SignInfo;
		decode(buffer: ArrayBuffer) : SignInfo;
		//decode(buffer: NodeBuffer) : SignInfo;
		//decode(buffer: ByteArrayBuffer) : SignInfo;
		decode64(buffer: string) : SignInfo;
		
	}
}


declare module pb {

	var InsideInfo: InsideInfo;
	export interface InsideInfo extends ProtoBufModel {
		new(obj?: any): InsideInfo;
		acupoint: dcodeIO.ProtoBuf.Map<number,number>;
		insideSkill: dcodeIO.ProtoBuf.Map<number,InsideSkill>;
		
	}

	export interface InsideInfoBuilder {
		new(): InsideInfo;
		decode(buffer: ArrayBuffer) : InsideInfo;
		//decode(buffer: NodeBuffer) : InsideInfo;
		//decode(buffer: ByteArrayBuffer) : InsideInfo;
		decode64(buffer: string) : InsideInfo;
		
	}
}


declare module pb {

	var InsideSkill: InsideSkill;
	export interface InsideSkill extends ProtoBufModel {
		new(obj?: any): InsideSkill;
		level?: number;
		exp?: number;
		
	}

	export interface InsideSkillBuilder {
		new(): InsideSkill;
		decode(buffer: ArrayBuffer) : InsideSkill;
		//decode(buffer: NodeBuffer) : InsideSkill;
		//decode(buffer: ByteArrayBuffer) : InsideSkill;
		decode64(buffer: string) : InsideSkill;
		
	}
}


declare module pb {

	var Holy: Holy;
	export interface Holy extends ProtoBufModel {
		new(obj?: any): Holy;
		id?: number;
		level?: number;
		exp?: number;
		skills: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface HolyBuilder {
		new(): Holy;
		decode(buffer: ArrayBuffer) : Holy;
		//decode(buffer: NodeBuffer) : Holy;
		//decode(buffer: ByteArrayBuffer) : Holy;
		decode64(buffer: string) : Holy;
		
	}
}


declare module pb {

	var Ring: Ring;
	export interface Ring extends ProtoBufModel {
		new(obj?: any): Ring;
		rid?: number;
		strengthen?: number;
		pid?: number;
		talent?: number;
		phantom: dcodeIO.ProtoBuf.Map<number,RingPhantom>;
		
	}

	export interface RingBuilder {
		new(): Ring;
		decode(buffer: ArrayBuffer) : Ring;
		//decode(buffer: NodeBuffer) : Ring;
		//decode(buffer: ByteArrayBuffer) : Ring;
		decode64(buffer: string) : Ring;
		
	}
}


declare module pb {

	var RingPhantom: RingPhantom;
	export interface RingPhantom extends ProtoBufModel {
		new(obj?: any): RingPhantom;
		talent?: number;
		phantom?: number;
		skill: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface RingPhantomBuilder {
		new(): RingPhantom;
		decode(buffer: ArrayBuffer) : RingPhantom;
		//decode(buffer: NodeBuffer) : RingPhantom;
		//decode(buffer: ByteArrayBuffer) : RingPhantom;
		decode64(buffer: string) : RingPhantom;
		
	}
}


declare module pb {

	var PetInfo: PetInfo;
	export interface PetInfo extends ProtoBufModel {
		new(obj?: any): PetInfo;
		lv?: number;
		exp?: number;
		grade?: number;
		break?: number;
		skill: number[];
		
	}

	export interface PetInfoBuilder {
		new(): PetInfo;
		decode(buffer: ArrayBuffer) : PetInfo;
		//decode(buffer: NodeBuffer) : PetInfo;
		//decode(buffer: ByteArrayBuffer) : PetInfo;
		decode64(buffer: string) : PetInfo;
		
	}
}


declare module pb {

	var ResetNtf: ResetNtf;
	export interface ResetNtf extends ProtoBufModel {
		new(obj?: any): ResetNtf;
		type: dcodeIO.ProtoBuf.Map<number,number>;
		newDayTime?: number;
		
	}

	export interface ResetNtfBuilder {
		new(): ResetNtf;
		decode(buffer: ArrayBuffer) : ResetNtf;
		//decode(buffer: NodeBuffer) : ResetNtf;
		//decode(buffer: ByteArrayBuffer) : ResetNtf;
		decode64(buffer: string) : ResetNtf;
		
	}
}


declare module pb {

	var FieldFightRivalUserInfo: FieldFightRivalUserInfo;
	export interface FieldFightRivalUserInfo extends ProtoBufModel {
		new(obj?: any): FieldFightRivalUserInfo;
		rivalUserId?: number;
		rivalDifficult?: number;
		
	}

	export interface FieldFightRivalUserInfoBuilder {
		new(): FieldFightRivalUserInfo;
		decode(buffer: ArrayBuffer) : FieldFightRivalUserInfo;
		//decode(buffer: NodeBuffer) : FieldFightRivalUserInfo;
		//decode(buffer: ByteArrayBuffer) : FieldFightRivalUserInfo;
		decode64(buffer: string) : FieldFightRivalUserInfo;
		
	}
}


declare module pb {

	var DarkPalaceInfo: DarkPalaceInfo;
	export interface DarkPalaceInfo extends ProtoBufModel {
		new(obj?: any): DarkPalaceInfo;
		dareNum?: number;
		buyNum?: number;
		helpNum?: number;
		
	}

	export interface DarkPalaceInfoBuilder {
		new(): DarkPalaceInfo;
		decode(buffer: ArrayBuffer) : DarkPalaceInfo;
		//decode(buffer: NodeBuffer) : DarkPalaceInfo;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceInfo;
		decode64(buffer: string) : DarkPalaceInfo;
		
	}
}


declare module pb {

	var HellBossInfo: HellBossInfo;
	export interface HellBossInfo extends ProtoBufModel {
		new(obj?: any): HellBossInfo;
		dareNum?: number;
		buyNum?: number;
		helpNum?: number;
		
	}

	export interface HellBossInfoBuilder {
		new(): HellBossInfo;
		decode(buffer: ArrayBuffer) : HellBossInfo;
		//decode(buffer: NodeBuffer) : HellBossInfo;
		//decode(buffer: ByteArrayBuffer) : HellBossInfo;
		decode64(buffer: string) : HellBossInfo;
		
	}
}


declare module pb {

	var FieldBossInfo: FieldBossInfo;
	export interface FieldBossInfo extends ProtoBufModel {
		new(obj?: any): FieldBossInfo;
		dareNum?: number;
		buyNum?: number;
		firstReceive?: boolean;
		
	}

	export interface FieldBossInfoBuilder {
		new(): FieldBossInfo;
		decode(buffer: ArrayBuffer) : FieldBossInfo;
		//decode(buffer: NodeBuffer) : FieldBossInfo;
		//decode(buffer: ByteArrayBuffer) : FieldBossInfo;
		decode64(buffer: string) : FieldBossInfo;
		
	}
}


declare module pb {

	var AncientBossInfo: AncientBossInfo;
	export interface AncientBossInfo extends ProtoBufModel {
		new(obj?: any): AncientBossInfo;
		dareNum?: number;
		buyNum?: number;
		
	}

	export interface AncientBossInfoBuilder {
		new(): AncientBossInfo;
		decode(buffer: ArrayBuffer) : AncientBossInfo;
		//decode(buffer: NodeBuffer) : AncientBossInfo;
		//decode(buffer: ByteArrayBuffer) : AncientBossInfo;
		decode64(buffer: string) : AncientBossInfo;
		
	}
}


declare module pb {

	var TalentInfo: TalentInfo;
	export interface TalentInfo extends ProtoBufModel {
		new(obj?: any): TalentInfo;
		getPoints?: number;
		surplusPoints?: number;
		talents: dcodeIO.ProtoBuf.Map<number,TalentUnit>;
		
	}

	export interface TalentInfoBuilder {
		new(): TalentInfo;
		decode(buffer: ArrayBuffer) : TalentInfo;
		//decode(buffer: NodeBuffer) : TalentInfo;
		//decode(buffer: ByteArrayBuffer) : TalentInfo;
		decode64(buffer: string) : TalentInfo;
		
	}
}


declare module pb {

	var TalentUnit: TalentUnit;
	export interface TalentUnit extends ProtoBufModel {
		new(obj?: any): TalentUnit;
		usePoints?: number;
		talents: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface TalentUnitBuilder {
		new(): TalentUnit;
		decode(buffer: ArrayBuffer) : TalentUnit;
		//decode(buffer: NodeBuffer) : TalentUnit;
		//decode(buffer: ByteArrayBuffer) : TalentUnit;
		decode64(buffer: string) : TalentUnit;
		
	}
}


declare module pb {

	var Fit: Fit;
	export interface Fit extends ProtoBufModel {
		new(obj?: any): Fit;
		cdStart?: number;
		cdEnd?: number;
		fashion: dcodeIO.ProtoBuf.Map<number,number>;
		skillBag: dcodeIO.ProtoBuf.Map<number,number>;
		lv: dcodeIO.ProtoBuf.Map<number,number>;
		skills: dcodeIO.ProtoBuf.Map<number,FitSkill>;
		
	}

	export interface FitBuilder {
		new(): Fit;
		decode(buffer: ArrayBuffer) : Fit;
		//decode(buffer: NodeBuffer) : Fit;
		//decode(buffer: ByteArrayBuffer) : Fit;
		decode64(buffer: string) : Fit;
		
	}
}


declare module pb {

	var FitSkill: FitSkill;
	export interface FitSkill extends ProtoBufModel {
		new(obj?: any): FitSkill;
		lv?: number;
		star?: number;
		
	}

	export interface FitSkillBuilder {
		new(): FitSkill;
		decode(buffer: ArrayBuffer) : FitSkill;
		//decode(buffer: NodeBuffer) : FitSkill;
		//decode(buffer: ByteArrayBuffer) : FitSkill;
		decode64(buffer: string) : FitSkill;
		
	}
}


declare module pb {

	var MonthCardUnit: MonthCardUnit;
	export interface MonthCardUnit extends ProtoBufModel {
		new(obj?: any): MonthCardUnit;
		startTime?: number;
		endTime?: number;
		isExpire?: boolean;
		
	}

	export interface MonthCardUnitBuilder {
		new(): MonthCardUnit;
		decode(buffer: ArrayBuffer) : MonthCardUnit;
		//decode(buffer: NodeBuffer) : MonthCardUnit;
		//decode(buffer: ByteArrayBuffer) : MonthCardUnit;
		decode64(buffer: string) : MonthCardUnit;
		
	}
}


declare module pb {

	var FirstRecharge: FirstRecharge;
	export interface FirstRecharge extends ProtoBufModel {
		new(obj?: any): FirstRecharge;
		isRecharge?: boolean;
		days: number[];
		openDay?: number;
		
	}

	export interface FirstRechargeBuilder {
		new(): FirstRecharge;
		decode(buffer: ArrayBuffer) : FirstRecharge;
		//decode(buffer: NodeBuffer) : FirstRecharge;
		//decode(buffer: ByteArrayBuffer) : FirstRecharge;
		decode64(buffer: string) : FirstRecharge;
		
	}
}


declare module pb {

	var SpendRebates: SpendRebates;
	export interface SpendRebates extends ProtoBufModel {
		new(obj?: any): SpendRebates;
		countIngot?: number;
		ingot?: number;
		reward: number[];
		cycle?: number;
		
	}

	export interface SpendRebatesBuilder {
		new(): SpendRebates;
		decode(buffer: ArrayBuffer) : SpendRebates;
		//decode(buffer: NodeBuffer) : SpendRebates;
		//decode(buffer: ByteArrayBuffer) : SpendRebates;
		decode64(buffer: string) : SpendRebates;
		
	}
}


declare module pb {

	var GrowFund: GrowFund;
	export interface GrowFund extends ProtoBufModel {
		new(obj?: any): GrowFund;
		isBuy?: boolean;
		ids: number[];
		
	}

	export interface GrowFundBuilder {
		new(): GrowFund;
		decode(buffer: ArrayBuffer) : GrowFund;
		//decode(buffer: NodeBuffer) : GrowFund;
		//decode(buffer: ByteArrayBuffer) : GrowFund;
		decode64(buffer: string) : GrowFund;
		
	}
}


declare module pb {

	var WarOrderTaskUnit: WarOrderTaskUnit;
	export interface WarOrderTaskUnit extends ProtoBufModel {
		new(obj?: any): WarOrderTaskUnit;
		one?: number;
		two: dcodeIO.ProtoBuf.Map<number,number>;
		three: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface WarOrderTaskUnitBuilder {
		new(): WarOrderTaskUnit;
		decode(buffer: ArrayBuffer) : WarOrderTaskUnit;
		//decode(buffer: NodeBuffer) : WarOrderTaskUnit;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskUnit;
		decode64(buffer: string) : WarOrderTaskUnit;
		
	}
}


declare module pb {

	var WarOrderTaskInfo: WarOrderTaskInfo;
	export interface WarOrderTaskInfo extends ProtoBufModel {
		new(obj?: any): WarOrderTaskInfo;
		val?: WarOrderTaskUnit;
		finish?: boolean;
		reward?: boolean;
		
	}

	export interface WarOrderTaskInfoBuilder {
		new(): WarOrderTaskInfo;
		decode(buffer: ArrayBuffer) : WarOrderTaskInfo;
		//decode(buffer: NodeBuffer) : WarOrderTaskInfo;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskInfo;
		decode64(buffer: string) : WarOrderTaskInfo;
		
	}
}


declare module pb {

	var WarOrderTask: WarOrderTask;
	export interface WarOrderTask extends ProtoBufModel {
		new(obj?: any): WarOrderTask;
		task: dcodeIO.ProtoBuf.Map<number,WarOrderTaskInfo>;
		
	}

	export interface WarOrderTaskBuilder {
		new(): WarOrderTask;
		decode(buffer: ArrayBuffer) : WarOrderTask;
		//decode(buffer: NodeBuffer) : WarOrderTask;
		//decode(buffer: ByteArrayBuffer) : WarOrderTask;
		decode64(buffer: string) : WarOrderTask;
		
	}
}


declare module pb {

	var WarOrderReward: WarOrderReward;
	export interface WarOrderReward extends ProtoBufModel {
		new(obj?: any): WarOrderReward;
		elite?: boolean;
		luxury?: boolean;
		
	}

	export interface WarOrderRewardBuilder {
		new(): WarOrderReward;
		decode(buffer: ArrayBuffer) : WarOrderReward;
		//decode(buffer: NodeBuffer) : WarOrderReward;
		//decode(buffer: ByteArrayBuffer) : WarOrderReward;
		decode64(buffer: string) : WarOrderReward;
		
	}
}


declare module pb {

	var WarOrder: WarOrder;
	export interface WarOrder extends ProtoBufModel {
		new(obj?: any): WarOrder;
		lv?: number;
		exp?: number;
		season?: number;
		startTime?: number;
		endTime?: number;
		isLuxury?: boolean;
		task?: WarOrderTask;
		exchange: dcodeIO.ProtoBuf.Map<number,number>;
		weekTask: dcodeIO.ProtoBuf.Map<number,WarOrderTask>;
		reward: dcodeIO.ProtoBuf.Map<number,WarOrderReward>;
		
	}

	export interface WarOrderBuilder {
		new(): WarOrder;
		decode(buffer: ArrayBuffer) : WarOrder;
		//decode(buffer: NodeBuffer) : WarOrder;
		//decode(buffer: ByteArrayBuffer) : WarOrder;
		decode64(buffer: string) : WarOrder;
		
	}
}


declare module pb {

	var Elf: Elf;
	export interface Elf extends ProtoBufModel {
		new(obj?: any): Elf;
		lv?: number;
		exp?: number;
		skills: dcodeIO.ProtoBuf.Map<number,number>;
		skillBag: dcodeIO.ProtoBuf.Map<number,number>;
		receiveLimit: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ElfBuilder {
		new(): Elf;
		decode(buffer: ArrayBuffer) : Elf;
		//decode(buffer: NodeBuffer) : Elf;
		//decode(buffer: ByteArrayBuffer) : Elf;
		decode64(buffer: string) : Elf;
		
	}
}


declare module pb {

	var FriendUserInfo: FriendUserInfo;
	export interface FriendUserInfo extends ProtoBufModel {
		new(obj?: any): FriendUserInfo;
		UserId?: number;
		combat?: number;
		friendHeroInfo: dcodeIO.ProtoBuf.Map<number,FriendHeroInfo>;
		
	}

	export interface FriendUserInfoBuilder {
		new(): FriendUserInfo;
		decode(buffer: ArrayBuffer) : FriendUserInfo;
		//decode(buffer: NodeBuffer) : FriendUserInfo;
		//decode(buffer: ByteArrayBuffer) : FriendUserInfo;
		decode64(buffer: string) : FriendUserInfo;
		
	}
}


declare module pb {

	var FriendHeroInfo: FriendHeroInfo;
	export interface FriendHeroInfo extends ProtoBufModel {
		new(obj?: any): FriendHeroInfo;
		equips: dcodeIO.ProtoBuf.Map<number,EquipUnit>;
		props: dcodeIO.ProtoBuf.Map<number,number>;
		job?: number;
		sex?: number;
		lv?: number;
		display?: Display;
		name?: string;
		combat?: number;
		
	}

	export interface FriendHeroInfoBuilder {
		new(): FriendHeroInfo;
		decode(buffer: ArrayBuffer) : FriendHeroInfo;
		//decode(buffer: NodeBuffer) : FriendHeroInfo;
		//decode(buffer: ByteArrayBuffer) : FriendHeroInfo;
		decode64(buffer: string) : FriendHeroInfo;
		
	}
}


declare module pb {

	var FitHolyEquipUnit: FitHolyEquipUnit;
	export interface FitHolyEquipUnit extends ProtoBufModel {
		new(obj?: any): FitHolyEquipUnit;
		equip: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface FitHolyEquipUnitBuilder {
		new(): FitHolyEquipUnit;
		decode(buffer: ArrayBuffer) : FitHolyEquipUnit;
		//decode(buffer: NodeBuffer) : FitHolyEquipUnit;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipUnit;
		decode64(buffer: string) : FitHolyEquipUnit;
		
	}
}


declare module pb {

	var FitHolyEquip: FitHolyEquip;
	export interface FitHolyEquip extends ProtoBufModel {
		new(obj?: any): FitHolyEquip;
		suitId?: number;
		equips: dcodeIO.ProtoBuf.Map<number,FitHolyEquipUnit>;
		
	}

	export interface FitHolyEquipBuilder {
		new(): FitHolyEquip;
		decode(buffer: ArrayBuffer) : FitHolyEquip;
		//decode(buffer: NodeBuffer) : FitHolyEquip;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquip;
		decode64(buffer: string) : FitHolyEquip;
		
	}
}


declare module pb {

	var ContRecharge: ContRecharge;
	export interface ContRecharge extends ProtoBufModel {
		new(obj?: any): ContRecharge;
		cycle?: number;
		recharge: dcodeIO.ProtoBuf.Map<number,number>;
		receive: number[];
		todayPay?: number;
		
	}

	export interface ContRechargeBuilder {
		new(): ContRecharge;
		decode(buffer: ArrayBuffer) : ContRecharge;
		//decode(buffer: NodeBuffer) : ContRecharge;
		//decode(buffer: ByteArrayBuffer) : ContRecharge;
		decode64(buffer: string) : ContRecharge;
		
	}
}


declare module pb {

	var PaoMaDengInfo: PaoMaDengInfo;
	export interface PaoMaDengInfo extends ProtoBufModel {
		new(obj?: any): PaoMaDengInfo;
		type?: number;
		cycleTimes?: number;
		content?: string;
		
	}

	export interface PaoMaDengInfoBuilder {
		new(): PaoMaDengInfo;
		decode(buffer: ArrayBuffer) : PaoMaDengInfo;
		//decode(buffer: NodeBuffer) : PaoMaDengInfo;
		//decode(buffer: ByteArrayBuffer) : PaoMaDengInfo;
		decode64(buffer: string) : PaoMaDengInfo;
		
	}
}


declare module pb {

	var PaoMaDengNtf: PaoMaDengNtf;
	export interface PaoMaDengNtf extends ProtoBufModel {
		new(obj?: any): PaoMaDengNtf;
		PaoMaDengInfos: PaoMaDengInfo[];
		
	}

	export interface PaoMaDengNtfBuilder {
		new(): PaoMaDengNtf;
		decode(buffer: ArrayBuffer) : PaoMaDengNtf;
		//decode(buffer: NodeBuffer) : PaoMaDengNtf;
		//decode(buffer: ByteArrayBuffer) : PaoMaDengNtf;
		decode64(buffer: string) : PaoMaDengNtf;
		
	}
}


declare module pb {

	var AncientSkill: AncientSkill;
	export interface AncientSkill extends ProtoBufModel {
		new(obj?: any): AncientSkill;
		skillId?: number;
		level?: number;
		grade?: number;
		
	}

	export interface AncientSkillBuilder {
		new(): AncientSkill;
		decode(buffer: ArrayBuffer) : AncientSkill;
		//decode(buffer: NodeBuffer) : AncientSkill;
		//decode(buffer: ByteArrayBuffer) : AncientSkill;
		decode64(buffer: string) : AncientSkill;
		
	}
}


declare module pb {

	var Title: Title;
	export interface Title extends ProtoBufModel {
		new(obj?: any): Title;
		titleId?: number;
		startTime?: number;
		endTime?: number;
		isLook?: boolean;
		
	}

	export interface TitleBuilder {
		new(): Title;
		decode(buffer: ArrayBuffer) : Title;
		//decode(buffer: NodeBuffer) : Title;
		//decode(buffer: ByteArrayBuffer) : Title;
		decode64(buffer: string) : Title;
		
	}
}


declare module pb {

	var BriefServerInfo: BriefServerInfo;
	export interface BriefServerInfo extends ProtoBufModel {
		new(obj?: any): BriefServerInfo;
		serverId?: number;
		serverName?: string;
		crossFsId?: number;
		
	}

	export interface BriefServerInfoBuilder {
		new(): BriefServerInfo;
		decode(buffer: ArrayBuffer) : BriefServerInfo;
		//decode(buffer: NodeBuffer) : BriefServerInfo;
		//decode(buffer: ByteArrayBuffer) : BriefServerInfo;
		decode64(buffer: string) : BriefServerInfo;
		
	}
}


declare module pb {

	var Label: Label;
	export interface Label extends ProtoBufModel {
		new(obj?: any): Label;
		labelId?: number;
		job?: number;
		transfer?: number;
		dayReward?: boolean;
		
	}

	export interface LabelBuilder {
		new(): Label;
		decode(buffer: ArrayBuffer) : Label;
		//decode(buffer: NodeBuffer) : Label;
		//decode(buffer: ByteArrayBuffer) : Label;
		decode64(buffer: string) : Label;
		
	}
}


declare module pb {

	var AncientBossLoadReq: AncientBossLoadReq;
	export interface AncientBossLoadReq extends ProtoBufModel {
		new(obj?: any): AncientBossLoadReq;
		area?: number;
		
	}

	export interface AncientBossLoadReqBuilder {
		new(): AncientBossLoadReq;
		decode(buffer: ArrayBuffer) : AncientBossLoadReq;
		//decode(buffer: NodeBuffer) : AncientBossLoadReq;
		//decode(buffer: ByteArrayBuffer) : AncientBossLoadReq;
		decode64(buffer: string) : AncientBossLoadReq;
		
	}
}


declare module pb {

	var AncientBossLoadAck: AncientBossLoadAck;
	export interface AncientBossLoadAck extends ProtoBufModel {
		new(obj?: any): AncientBossLoadAck;
		ancientBoss: AncientBossNtf[];
		
	}

	export interface AncientBossLoadAckBuilder {
		new(): AncientBossLoadAck;
		decode(buffer: ArrayBuffer) : AncientBossLoadAck;
		//decode(buffer: NodeBuffer) : AncientBossLoadAck;
		//decode(buffer: ByteArrayBuffer) : AncientBossLoadAck;
		decode64(buffer: string) : AncientBossLoadAck;
		
	}
}


declare module pb {

	var AncientBossBuyNumReq: AncientBossBuyNumReq;
	export interface AncientBossBuyNumReq extends ProtoBufModel {
		new(obj?: any): AncientBossBuyNumReq;
		use?: boolean;
		buyNum?: number;
		
	}

	export interface AncientBossBuyNumReqBuilder {
		new(): AncientBossBuyNumReq;
		decode(buffer: ArrayBuffer) : AncientBossBuyNumReq;
		//decode(buffer: NodeBuffer) : AncientBossBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : AncientBossBuyNumReq;
		decode64(buffer: string) : AncientBossBuyNumReq;
		
	}
}


declare module pb {

	var AncientBossBuyNumAck: AncientBossBuyNumAck;
	export interface AncientBossBuyNumAck extends ProtoBufModel {
		new(obj?: any): AncientBossBuyNumAck;
		buyNum?: number;
		
	}

	export interface AncientBossBuyNumAckBuilder {
		new(): AncientBossBuyNumAck;
		decode(buffer: ArrayBuffer) : AncientBossBuyNumAck;
		//decode(buffer: NodeBuffer) : AncientBossBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : AncientBossBuyNumAck;
		decode64(buffer: string) : AncientBossBuyNumAck;
		
	}
}


declare module pb {

	var EnterAncientBossFightReq: EnterAncientBossFightReq;
	export interface EnterAncientBossFightReq extends ProtoBufModel {
		new(obj?: any): EnterAncientBossFightReq;
		stageId?: number;
		
	}

	export interface EnterAncientBossFightReqBuilder {
		new(): EnterAncientBossFightReq;
		decode(buffer: ArrayBuffer) : EnterAncientBossFightReq;
		//decode(buffer: NodeBuffer) : EnterAncientBossFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterAncientBossFightReq;
		decode64(buffer: string) : EnterAncientBossFightReq;
		
	}
}


declare module pb {

	var EnterAncientBossFightAck: EnterAncientBossFightAck;
	export interface EnterAncientBossFightAck extends ProtoBufModel {
		new(obj?: any): EnterAncientBossFightAck;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface EnterAncientBossFightAckBuilder {
		new(): EnterAncientBossFightAck;
		decode(buffer: ArrayBuffer) : EnterAncientBossFightAck;
		//decode(buffer: NodeBuffer) : EnterAncientBossFightAck;
		//decode(buffer: ByteArrayBuffer) : EnterAncientBossFightAck;
		decode64(buffer: string) : EnterAncientBossFightAck;
		
	}
}


declare module pb {

	var AncientBossFightResultNtf: AncientBossFightResultNtf;
	export interface AncientBossFightResultNtf extends ProtoBufModel {
		new(obj?: any): AncientBossFightResultNtf;
		stageId?: number;
		result?: number;
		dareNum?: number;
		winner?: BriefUserInfo;
		goods?: GoodsChangeNtf;
		
	}

	export interface AncientBossFightResultNtfBuilder {
		new(): AncientBossFightResultNtf;
		decode(buffer: ArrayBuffer) : AncientBossFightResultNtf;
		//decode(buffer: NodeBuffer) : AncientBossFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : AncientBossFightResultNtf;
		decode64(buffer: string) : AncientBossFightResultNtf;
		
	}
}


declare module pb {

	var AncientBossOwnerReq: AncientBossOwnerReq;
	export interface AncientBossOwnerReq extends ProtoBufModel {
		new(obj?: any): AncientBossOwnerReq;
		stageId?: number;
		
	}

	export interface AncientBossOwnerReqBuilder {
		new(): AncientBossOwnerReq;
		decode(buffer: ArrayBuffer) : AncientBossOwnerReq;
		//decode(buffer: NodeBuffer) : AncientBossOwnerReq;
		//decode(buffer: ByteArrayBuffer) : AncientBossOwnerReq;
		decode64(buffer: string) : AncientBossOwnerReq;
		
	}
}


declare module pb {

	var AncientBossOwnerAck: AncientBossOwnerAck;
	export interface AncientBossOwnerAck extends ProtoBufModel {
		new(obj?: any): AncientBossOwnerAck;
		stageId?: number;
		list: AncientBossOwnerInfo[];
		
	}

	export interface AncientBossOwnerAckBuilder {
		new(): AncientBossOwnerAck;
		decode(buffer: ArrayBuffer) : AncientBossOwnerAck;
		//decode(buffer: NodeBuffer) : AncientBossOwnerAck;
		//decode(buffer: ByteArrayBuffer) : AncientBossOwnerAck;
		decode64(buffer: string) : AncientBossOwnerAck;
		
	}
}


declare module pb {

	var AncientBossOwnerInfo: AncientBossOwnerInfo;
	export interface AncientBossOwnerInfo extends ProtoBufModel {
		new(obj?: any): AncientBossOwnerInfo;
		name?: string;
		time?: number;
		
	}

	export interface AncientBossOwnerInfoBuilder {
		new(): AncientBossOwnerInfo;
		decode(buffer: ArrayBuffer) : AncientBossOwnerInfo;
		//decode(buffer: NodeBuffer) : AncientBossOwnerInfo;
		//decode(buffer: ByteArrayBuffer) : AncientBossOwnerInfo;
		decode64(buffer: string) : AncientBossOwnerInfo;
		
	}
}


declare module pb {

	var AncientBossNtf: AncientBossNtf;
	export interface AncientBossNtf extends ProtoBufModel {
		new(obj?: any): AncientBossNtf;
		stageId?: number;
		blood?: number;
		reliveTime?: number;
		area?: number;
		userCount?: number;
		
	}

	export interface AncientBossNtfBuilder {
		new(): AncientBossNtf;
		decode(buffer: ArrayBuffer) : AncientBossNtf;
		//decode(buffer: NodeBuffer) : AncientBossNtf;
		//decode(buffer: ByteArrayBuffer) : AncientBossNtf;
		decode64(buffer: string) : AncientBossNtf;
		
	}
}


declare module pb {

	var AncientSkillActiveReq: AncientSkillActiveReq;
	export interface AncientSkillActiveReq extends ProtoBufModel {
		new(obj?: any): AncientSkillActiveReq;
		heroIndex?: number;
		
	}

	export interface AncientSkillActiveReqBuilder {
		new(): AncientSkillActiveReq;
		decode(buffer: ArrayBuffer) : AncientSkillActiveReq;
		//decode(buffer: NodeBuffer) : AncientSkillActiveReq;
		//decode(buffer: ByteArrayBuffer) : AncientSkillActiveReq;
		decode64(buffer: string) : AncientSkillActiveReq;
		
	}
}


declare module pb {

	var AncientSkillActiveAck: AncientSkillActiveAck;
	export interface AncientSkillActiveAck extends ProtoBufModel {
		new(obj?: any): AncientSkillActiveAck;
		heroIndex?: number;
		ancientSkill?: AncientSkill;
		
	}

	export interface AncientSkillActiveAckBuilder {
		new(): AncientSkillActiveAck;
		decode(buffer: ArrayBuffer) : AncientSkillActiveAck;
		//decode(buffer: NodeBuffer) : AncientSkillActiveAck;
		//decode(buffer: ByteArrayBuffer) : AncientSkillActiveAck;
		decode64(buffer: string) : AncientSkillActiveAck;
		
	}
}


declare module pb {

	var AncientSkillUpLvReq: AncientSkillUpLvReq;
	export interface AncientSkillUpLvReq extends ProtoBufModel {
		new(obj?: any): AncientSkillUpLvReq;
		heroIndex?: number;
		
	}

	export interface AncientSkillUpLvReqBuilder {
		new(): AncientSkillUpLvReq;
		decode(buffer: ArrayBuffer) : AncientSkillUpLvReq;
		//decode(buffer: NodeBuffer) : AncientSkillUpLvReq;
		//decode(buffer: ByteArrayBuffer) : AncientSkillUpLvReq;
		decode64(buffer: string) : AncientSkillUpLvReq;
		
	}
}


declare module pb {

	var AncientSkillUpLvAck: AncientSkillUpLvAck;
	export interface AncientSkillUpLvAck extends ProtoBufModel {
		new(obj?: any): AncientSkillUpLvAck;
		level?: number;
		heroIndex?: number;
		
	}

	export interface AncientSkillUpLvAckBuilder {
		new(): AncientSkillUpLvAck;
		decode(buffer: ArrayBuffer) : AncientSkillUpLvAck;
		//decode(buffer: NodeBuffer) : AncientSkillUpLvAck;
		//decode(buffer: ByteArrayBuffer) : AncientSkillUpLvAck;
		decode64(buffer: string) : AncientSkillUpLvAck;
		
	}
}


declare module pb {

	var AncientSkillUpGradeReq: AncientSkillUpGradeReq;
	export interface AncientSkillUpGradeReq extends ProtoBufModel {
		new(obj?: any): AncientSkillUpGradeReq;
		heroIndex?: number;
		
	}

	export interface AncientSkillUpGradeReqBuilder {
		new(): AncientSkillUpGradeReq;
		decode(buffer: ArrayBuffer) : AncientSkillUpGradeReq;
		//decode(buffer: NodeBuffer) : AncientSkillUpGradeReq;
		//decode(buffer: ByteArrayBuffer) : AncientSkillUpGradeReq;
		decode64(buffer: string) : AncientSkillUpGradeReq;
		
	}
}


declare module pb {

	var AncientSkillUpGradeAck: AncientSkillUpGradeAck;
	export interface AncientSkillUpGradeAck extends ProtoBufModel {
		new(obj?: any): AncientSkillUpGradeAck;
		grade?: number;
		heroIndex?: number;
		
	}

	export interface AncientSkillUpGradeAckBuilder {
		new(): AncientSkillUpGradeAck;
		decode(buffer: ArrayBuffer) : AncientSkillUpGradeAck;
		//decode(buffer: NodeBuffer) : AncientSkillUpGradeAck;
		//decode(buffer: ByteArrayBuffer) : AncientSkillUpGradeAck;
		decode64(buffer: string) : AncientSkillUpGradeAck;
		
	}
}


declare module pb {

	var AncientTreasuresLoadReq: AncientTreasuresLoadReq;
	export interface AncientTreasuresLoadReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresLoadReq;
		
	}

	export interface AncientTreasuresLoadReqBuilder {
		new(): AncientTreasuresLoadReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresLoadReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresLoadReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresLoadReq;
		decode64(buffer: string) : AncientTreasuresLoadReq;
		
	}
}


declare module pb {

	var AncientTreasuresLoadAck: AncientTreasuresLoadAck;
	export interface AncientTreasuresLoadAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresLoadAck;
		AncientTreasuresInfos: dcodeIO.ProtoBuf.Map<number,AncientTreasuresInfo>;
		
	}

	export interface AncientTreasuresLoadAckBuilder {
		new(): AncientTreasuresLoadAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresLoadAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresLoadAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresLoadAck;
		decode64(buffer: string) : AncientTreasuresLoadAck;
		
	}
}


declare module pb {

	var AncientTreasuresInfo: AncientTreasuresInfo;
	export interface AncientTreasuresInfo extends ProtoBufModel {
		new(obj?: any): AncientTreasuresInfo;
		zhuLinLv?: number;
		starLv?: number;
		isAwakening?: number;
		types?: number;
		
	}

	export interface AncientTreasuresInfoBuilder {
		new(): AncientTreasuresInfo;
		decode(buffer: ArrayBuffer) : AncientTreasuresInfo;
		//decode(buffer: NodeBuffer) : AncientTreasuresInfo;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresInfo;
		decode64(buffer: string) : AncientTreasuresInfo;
		
	}
}


declare module pb {

	var AncientTreasuresActivateReq: AncientTreasuresActivateReq;
	export interface AncientTreasuresActivateReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresActivateReq;
		treasureId?: number;
		
	}

	export interface AncientTreasuresActivateReqBuilder {
		new(): AncientTreasuresActivateReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresActivateReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresActivateReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresActivateReq;
		decode64(buffer: string) : AncientTreasuresActivateReq;
		
	}
}


declare module pb {

	var AncientTreasuresActivateAck: AncientTreasuresActivateAck;
	export interface AncientTreasuresActivateAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresActivateAck;
		treasureId?: number;
		
	}

	export interface AncientTreasuresActivateAckBuilder {
		new(): AncientTreasuresActivateAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresActivateAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresActivateAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresActivateAck;
		decode64(buffer: string) : AncientTreasuresActivateAck;
		
	}
}


declare module pb {

	var AncientTreasuresZhuLinReq: AncientTreasuresZhuLinReq;
	export interface AncientTreasuresZhuLinReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresZhuLinReq;
		treasureId?: number;
		
	}

	export interface AncientTreasuresZhuLinReqBuilder {
		new(): AncientTreasuresZhuLinReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresZhuLinReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresZhuLinReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresZhuLinReq;
		decode64(buffer: string) : AncientTreasuresZhuLinReq;
		
	}
}


declare module pb {

	var AncientTreasuresZhuLinAck: AncientTreasuresZhuLinAck;
	export interface AncientTreasuresZhuLinAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresZhuLinAck;
		zhuLinLv?: number;
		treasureId?: number;
		
	}

	export interface AncientTreasuresZhuLinAckBuilder {
		new(): AncientTreasuresZhuLinAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresZhuLinAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresZhuLinAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresZhuLinAck;
		decode64(buffer: string) : AncientTreasuresZhuLinAck;
		
	}
}


declare module pb {

	var AncientTreasuresUpStarReq: AncientTreasuresUpStarReq;
	export interface AncientTreasuresUpStarReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresUpStarReq;
		treasureId?: number;
		
	}

	export interface AncientTreasuresUpStarReqBuilder {
		new(): AncientTreasuresUpStarReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresUpStarReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresUpStarReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresUpStarReq;
		decode64(buffer: string) : AncientTreasuresUpStarReq;
		
	}
}


declare module pb {

	var AncientTreasuresUpStarAck: AncientTreasuresUpStarAck;
	export interface AncientTreasuresUpStarAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresUpStarAck;
		starLv?: number;
		treasureId?: number;
		
	}

	export interface AncientTreasuresUpStarAckBuilder {
		new(): AncientTreasuresUpStarAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresUpStarAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresUpStarAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresUpStarAck;
		decode64(buffer: string) : AncientTreasuresUpStarAck;
		
	}
}


declare module pb {

	var AncientTreasuresJueXingReq: AncientTreasuresJueXingReq;
	export interface AncientTreasuresJueXingReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresJueXingReq;
		treasureId?: number;
		chooseItemInfos: number[];
		index?: number;
		
	}

	export interface AncientTreasuresJueXingReqBuilder {
		new(): AncientTreasuresJueXingReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresJueXingReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresJueXingReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresJueXingReq;
		decode64(buffer: string) : AncientTreasuresJueXingReq;
		
	}
}


declare module pb {

	var AncientTreasuresJueXingAck: AncientTreasuresJueXingAck;
	export interface AncientTreasuresJueXingAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresJueXingAck;
		treasureId?: number;
		
	}

	export interface AncientTreasuresJueXingAckBuilder {
		new(): AncientTreasuresJueXingAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresJueXingAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresJueXingAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresJueXingAck;
		decode64(buffer: string) : AncientTreasuresJueXingAck;
		
	}
}


declare module pb {

	var AncientTreasuresResertReq: AncientTreasuresResertReq;
	export interface AncientTreasuresResertReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresResertReq;
		treasureId?: number;
		
	}

	export interface AncientTreasuresResertReqBuilder {
		new(): AncientTreasuresResertReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresResertReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresResertReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresResertReq;
		decode64(buffer: string) : AncientTreasuresResertReq;
		
	}
}


declare module pb {

	var AncientTreasuresResertAck: AncientTreasuresResertAck;
	export interface AncientTreasuresResertAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresResertAck;
		treasureId?: number;
		
	}

	export interface AncientTreasuresResertAckBuilder {
		new(): AncientTreasuresResertAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresResertAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresResertAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresResertAck;
		decode64(buffer: string) : AncientTreasuresResertAck;
		
	}
}


declare module pb {

	var AncientTreasuresCondotionInfosReq: AncientTreasuresCondotionInfosReq;
	export interface AncientTreasuresCondotionInfosReq extends ProtoBufModel {
		new(obj?: any): AncientTreasuresCondotionInfosReq;
		
	}

	export interface AncientTreasuresCondotionInfosReqBuilder {
		new(): AncientTreasuresCondotionInfosReq;
		decode(buffer: ArrayBuffer) : AncientTreasuresCondotionInfosReq;
		//decode(buffer: NodeBuffer) : AncientTreasuresCondotionInfosReq;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresCondotionInfosReq;
		decode64(buffer: string) : AncientTreasuresCondotionInfosReq;
		
	}
}


declare module pb {

	var AncientTreasuresCondotionInfosAck: AncientTreasuresCondotionInfosAck;
	export interface AncientTreasuresCondotionInfosAck extends ProtoBufModel {
		new(obj?: any): AncientTreasuresCondotionInfosAck;
		ancientTreasureConditionInfos: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface AncientTreasuresCondotionInfosAckBuilder {
		new(): AncientTreasuresCondotionInfosAck;
		decode(buffer: ArrayBuffer) : AncientTreasuresCondotionInfosAck;
		//decode(buffer: NodeBuffer) : AncientTreasuresCondotionInfosAck;
		//decode(buffer: ByteArrayBuffer) : AncientTreasuresCondotionInfosAck;
		decode64(buffer: string) : AncientTreasuresCondotionInfosAck;
		
	}
}


declare module pb {

	var EnterAppletsReq: EnterAppletsReq;
	export interface EnterAppletsReq extends ProtoBufModel {
		new(obj?: any): EnterAppletsReq;
		appletsType?: number;
		
	}

	export interface EnterAppletsReqBuilder {
		new(): EnterAppletsReq;
		decode(buffer: ArrayBuffer) : EnterAppletsReq;
		//decode(buffer: NodeBuffer) : EnterAppletsReq;
		//decode(buffer: ByteArrayBuffer) : EnterAppletsReq;
		decode64(buffer: string) : EnterAppletsReq;
		
	}
}


declare module pb {

	var AppletsEnergyNtf: AppletsEnergyNtf;
	export interface AppletsEnergyNtf extends ProtoBufModel {
		new(obj?: any): AppletsEnergyNtf;
		energy?: number;
		ResumeTime?: number;
		
	}

	export interface AppletsEnergyNtfBuilder {
		new(): AppletsEnergyNtf;
		decode(buffer: ArrayBuffer) : AppletsEnergyNtf;
		//decode(buffer: NodeBuffer) : AppletsEnergyNtf;
		//decode(buffer: ByteArrayBuffer) : AppletsEnergyNtf;
		decode64(buffer: string) : AppletsEnergyNtf;
		
	}
}


declare module pb {

	var AppletsReceiveReq: AppletsReceiveReq;
	export interface AppletsReceiveReq extends ProtoBufModel {
		new(obj?: any): AppletsReceiveReq;
		receiveId?: number;
		
	}

	export interface AppletsReceiveReqBuilder {
		new(): AppletsReceiveReq;
		decode(buffer: ArrayBuffer) : AppletsReceiveReq;
		//decode(buffer: NodeBuffer) : AppletsReceiveReq;
		//decode(buffer: ByteArrayBuffer) : AppletsReceiveReq;
		decode64(buffer: string) : AppletsReceiveReq;
		
	}
}


declare module pb {

	var AppletsReceiveAck: AppletsReceiveAck;
	export interface AppletsReceiveAck extends ProtoBufModel {
		new(obj?: any): AppletsReceiveAck;
		receiveId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface AppletsReceiveAckBuilder {
		new(): AppletsReceiveAck;
		decode(buffer: ArrayBuffer) : AppletsReceiveAck;
		//decode(buffer: NodeBuffer) : AppletsReceiveAck;
		//decode(buffer: ByteArrayBuffer) : AppletsReceiveAck;
		decode64(buffer: string) : AppletsReceiveAck;
		
	}
}


declare module pb {

	var CronGetAwardReq: CronGetAwardReq;
	export interface CronGetAwardReq extends ProtoBufModel {
		new(obj?: any): CronGetAwardReq;
		id?: number;
		index?: number;
		
	}

	export interface CronGetAwardReqBuilder {
		new(): CronGetAwardReq;
		decode(buffer: ArrayBuffer) : CronGetAwardReq;
		//decode(buffer: NodeBuffer) : CronGetAwardReq;
		//decode(buffer: ByteArrayBuffer) : CronGetAwardReq;
		decode64(buffer: string) : CronGetAwardReq;
		
	}
}


declare module pb {

	var CronGetAwardAck: CronGetAwardAck;
	export interface CronGetAwardAck extends ProtoBufModel {
		new(obj?: any): CronGetAwardAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface CronGetAwardAckBuilder {
		new(): CronGetAwardAck;
		decode(buffer: ArrayBuffer) : CronGetAwardAck;
		//decode(buffer: NodeBuffer) : CronGetAwardAck;
		//decode(buffer: ByteArrayBuffer) : CronGetAwardAck;
		decode64(buffer: string) : CronGetAwardAck;
		
	}
}


declare module pb {

	var EndResultReq: EndResultReq;
	export interface EndResultReq extends ProtoBufModel {
		new(obj?: any): EndResultReq;
		appletsType?: number;
		id?: number;
		
	}

	export interface EndResultReqBuilder {
		new(): EndResultReq;
		decode(buffer: ArrayBuffer) : EndResultReq;
		//decode(buffer: NodeBuffer) : EndResultReq;
		//decode(buffer: ByteArrayBuffer) : EndResultReq;
		decode64(buffer: string) : EndResultReq;
		
	}
}


declare module pb {

	var EndResultAck: EndResultAck;
	export interface EndResultAck extends ProtoBufModel {
		new(obj?: any): EndResultAck;
		appletsType?: number;
		energy?: number;
		id?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface EndResultAckBuilder {
		new(): EndResultAck;
		decode(buffer: ArrayBuffer) : EndResultAck;
		//decode(buffer: NodeBuffer) : EndResultAck;
		//decode(buffer: ByteArrayBuffer) : EndResultAck;
		decode64(buffer: string) : EndResultAck;
		
	}
}


declare module pb {

	var AreaUpLvReq: AreaUpLvReq;
	export interface AreaUpLvReq extends ProtoBufModel {
		new(obj?: any): AreaUpLvReq;
		heroIndex?: number;
		id?: number;
		
	}

	export interface AreaUpLvReqBuilder {
		new(): AreaUpLvReq;
		decode(buffer: ArrayBuffer) : AreaUpLvReq;
		//decode(buffer: NodeBuffer) : AreaUpLvReq;
		//decode(buffer: ByteArrayBuffer) : AreaUpLvReq;
		decode64(buffer: string) : AreaUpLvReq;
		
	}
}


declare module pb {

	var AreaUpLvAck: AreaUpLvAck;
	export interface AreaUpLvAck extends ProtoBufModel {
		new(obj?: any): AreaUpLvAck;
		heroIndex?: number;
		id?: number;
		lv?: number;
		
	}

	export interface AreaUpLvAckBuilder {
		new(): AreaUpLvAck;
		decode(buffer: ArrayBuffer) : AreaUpLvAck;
		//decode(buffer: NodeBuffer) : AreaUpLvAck;
		//decode(buffer: ByteArrayBuffer) : AreaUpLvAck;
		decode64(buffer: string) : AreaUpLvAck;
		
	}
}


declare module pb {

	var ArenaOpenReq: ArenaOpenReq;
	export interface ArenaOpenReq extends ProtoBufModel {
		new(obj?: any): ArenaOpenReq;
		
	}

	export interface ArenaOpenReqBuilder {
		new(): ArenaOpenReq;
		decode(buffer: ArrayBuffer) : ArenaOpenReq;
		//decode(buffer: NodeBuffer) : ArenaOpenReq;
		//decode(buffer: ByteArrayBuffer) : ArenaOpenReq;
		decode64(buffer: string) : ArenaOpenReq;
		
	}
}


declare module pb {

	var ArenaOpenAck: ArenaOpenAck;
	export interface ArenaOpenAck extends ProtoBufModel {
		new(obj?: any): ArenaOpenAck;
		three: RankInfo[];
		arenaRank: ArenaRank[];
		dareNum?: number;
		buyDareNum?: number;
		buyDareNums?: number;
		ranking?: number;
		
	}

	export interface ArenaOpenAckBuilder {
		new(): ArenaOpenAck;
		decode(buffer: ArrayBuffer) : ArenaOpenAck;
		//decode(buffer: NodeBuffer) : ArenaOpenAck;
		//decode(buffer: ByteArrayBuffer) : ArenaOpenAck;
		decode64(buffer: string) : ArenaOpenAck;
		
	}
}


declare module pb {

	var EnterArenaFightReq: EnterArenaFightReq;
	export interface EnterArenaFightReq extends ProtoBufModel {
		new(obj?: any): EnterArenaFightReq;
		challengeUid?: number;
		challengeRanking?: number;
		
	}

	export interface EnterArenaFightReqBuilder {
		new(): EnterArenaFightReq;
		decode(buffer: ArrayBuffer) : EnterArenaFightReq;
		//decode(buffer: NodeBuffer) : EnterArenaFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterArenaFightReq;
		decode64(buffer: string) : EnterArenaFightReq;
		
	}
}


declare module pb {

	var ArenaFightNtf: ArenaFightNtf;
	export interface ArenaFightNtf extends ProtoBufModel {
		new(obj?: any): ArenaFightNtf;
		result?: number;
		goods?: GoodsChangeNtf;
		myRank?: number;
		seasonScore?: number;
		
	}

	export interface ArenaFightNtfBuilder {
		new(): ArenaFightNtf;
		decode(buffer: ArrayBuffer) : ArenaFightNtf;
		//decode(buffer: NodeBuffer) : ArenaFightNtf;
		//decode(buffer: ByteArrayBuffer) : ArenaFightNtf;
		decode64(buffer: string) : ArenaFightNtf;
		
	}
}


declare module pb {

	var BuyArenaFightNumReq: BuyArenaFightNumReq;
	export interface BuyArenaFightNumReq extends ProtoBufModel {
		new(obj?: any): BuyArenaFightNumReq;
		
	}

	export interface BuyArenaFightNumReqBuilder {
		new(): BuyArenaFightNumReq;
		decode(buffer: ArrayBuffer) : BuyArenaFightNumReq;
		//decode(buffer: NodeBuffer) : BuyArenaFightNumReq;
		//decode(buffer: ByteArrayBuffer) : BuyArenaFightNumReq;
		decode64(buffer: string) : BuyArenaFightNumReq;
		
	}
}


declare module pb {

	var BuyArenaFightNumAck: BuyArenaFightNumAck;
	export interface BuyArenaFightNumAck extends ProtoBufModel {
		new(obj?: any): BuyArenaFightNumAck;
		dareNum?: number;
		buyDareNum?: number;
		buyDareNums?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface BuyArenaFightNumAckBuilder {
		new(): BuyArenaFightNumAck;
		decode(buffer: ArrayBuffer) : BuyArenaFightNumAck;
		//decode(buffer: NodeBuffer) : BuyArenaFightNumAck;
		//decode(buffer: ByteArrayBuffer) : BuyArenaFightNumAck;
		decode64(buffer: string) : BuyArenaFightNumAck;
		
	}
}


declare module pb {

	var RefArenaRankReq: RefArenaRankReq;
	export interface RefArenaRankReq extends ProtoBufModel {
		new(obj?: any): RefArenaRankReq;
		
	}

	export interface RefArenaRankReqBuilder {
		new(): RefArenaRankReq;
		decode(buffer: ArrayBuffer) : RefArenaRankReq;
		//decode(buffer: NodeBuffer) : RefArenaRankReq;
		//decode(buffer: ByteArrayBuffer) : RefArenaRankReq;
		decode64(buffer: string) : RefArenaRankReq;
		
	}
}


declare module pb {

	var RefArenaRankAck: RefArenaRankAck;
	export interface RefArenaRankAck extends ProtoBufModel {
		new(obj?: any): RefArenaRankAck;
		arenaRank: ArenaRank[];
		three: RankInfo[];
		
	}

	export interface RefArenaRankAckBuilder {
		new(): RefArenaRankAck;
		decode(buffer: ArrayBuffer) : RefArenaRankAck;
		//decode(buffer: NodeBuffer) : RefArenaRankAck;
		//decode(buffer: ByteArrayBuffer) : RefArenaRankAck;
		decode64(buffer: string) : RefArenaRankAck;
		
	}
}


declare module pb {

	var ArenaRank: ArenaRank;
	export interface ArenaRank extends ProtoBufModel {
		new(obj?: any): ArenaRank;
		ranking?: number;
		userinfo?: BriefUserInfo;
		
	}

	export interface ArenaRankBuilder {
		new(): ArenaRank;
		decode(buffer: ArrayBuffer) : ArenaRank;
		//decode(buffer: NodeBuffer) : ArenaRank;
		//decode(buffer: ByteArrayBuffer) : ArenaRank;
		decode64(buffer: string) : ArenaRank;
		
	}
}


declare module pb {

	var AtlasActiveReq: AtlasActiveReq;
	export interface AtlasActiveReq extends ProtoBufModel {
		new(obj?: any): AtlasActiveReq;
		id?: number;
		
	}

	export interface AtlasActiveReqBuilder {
		new(): AtlasActiveReq;
		decode(buffer: ArrayBuffer) : AtlasActiveReq;
		//decode(buffer: NodeBuffer) : AtlasActiveReq;
		//decode(buffer: ByteArrayBuffer) : AtlasActiveReq;
		decode64(buffer: string) : AtlasActiveReq;
		
	}
}


declare module pb {

	var AtlasActiveAck: AtlasActiveAck;
	export interface AtlasActiveAck extends ProtoBufModel {
		new(obj?: any): AtlasActiveAck;
		atlas?: Atlas;
		
	}

	export interface AtlasActiveAckBuilder {
		new(): AtlasActiveAck;
		decode(buffer: ArrayBuffer) : AtlasActiveAck;
		//decode(buffer: NodeBuffer) : AtlasActiveAck;
		//decode(buffer: ByteArrayBuffer) : AtlasActiveAck;
		decode64(buffer: string) : AtlasActiveAck;
		
	}
}


declare module pb {

	var AtlasUpStarReq: AtlasUpStarReq;
	export interface AtlasUpStarReq extends ProtoBufModel {
		new(obj?: any): AtlasUpStarReq;
		id?: number;
		
	}

	export interface AtlasUpStarReqBuilder {
		new(): AtlasUpStarReq;
		decode(buffer: ArrayBuffer) : AtlasUpStarReq;
		//decode(buffer: NodeBuffer) : AtlasUpStarReq;
		//decode(buffer: ByteArrayBuffer) : AtlasUpStarReq;
		decode64(buffer: string) : AtlasUpStarReq;
		
	}
}


declare module pb {

	var AtlasUpStarAck: AtlasUpStarAck;
	export interface AtlasUpStarAck extends ProtoBufModel {
		new(obj?: any): AtlasUpStarAck;
		atlas?: Atlas;
		
	}

	export interface AtlasUpStarAckBuilder {
		new(): AtlasUpStarAck;
		decode(buffer: ArrayBuffer) : AtlasUpStarAck;
		//decode(buffer: NodeBuffer) : AtlasUpStarAck;
		//decode(buffer: ByteArrayBuffer) : AtlasUpStarAck;
		decode64(buffer: string) : AtlasUpStarAck;
		
	}
}


declare module pb {

	var AtlasGatherActiveReq: AtlasGatherActiveReq;
	export interface AtlasGatherActiveReq extends ProtoBufModel {
		new(obj?: any): AtlasGatherActiveReq;
		id?: number;
		
	}

	export interface AtlasGatherActiveReqBuilder {
		new(): AtlasGatherActiveReq;
		decode(buffer: ArrayBuffer) : AtlasGatherActiveReq;
		//decode(buffer: NodeBuffer) : AtlasGatherActiveReq;
		//decode(buffer: ByteArrayBuffer) : AtlasGatherActiveReq;
		decode64(buffer: string) : AtlasGatherActiveReq;
		
	}
}


declare module pb {

	var AtlasGatherActiveAck: AtlasGatherActiveAck;
	export interface AtlasGatherActiveAck extends ProtoBufModel {
		new(obj?: any): AtlasGatherActiveAck;
		atlasGather?: AtlasGather;
		
	}

	export interface AtlasGatherActiveAckBuilder {
		new(): AtlasGatherActiveAck;
		decode(buffer: ArrayBuffer) : AtlasGatherActiveAck;
		//decode(buffer: NodeBuffer) : AtlasGatherActiveAck;
		//decode(buffer: ByteArrayBuffer) : AtlasGatherActiveAck;
		decode64(buffer: string) : AtlasGatherActiveAck;
		
	}
}


declare module pb {

	var AtlasGatherUpStarReq: AtlasGatherUpStarReq;
	export interface AtlasGatherUpStarReq extends ProtoBufModel {
		new(obj?: any): AtlasGatherUpStarReq;
		id?: number;
		
	}

	export interface AtlasGatherUpStarReqBuilder {
		new(): AtlasGatherUpStarReq;
		decode(buffer: ArrayBuffer) : AtlasGatherUpStarReq;
		//decode(buffer: NodeBuffer) : AtlasGatherUpStarReq;
		//decode(buffer: ByteArrayBuffer) : AtlasGatherUpStarReq;
		decode64(buffer: string) : AtlasGatherUpStarReq;
		
	}
}


declare module pb {

	var AtlasGatherUpStarAck: AtlasGatherUpStarAck;
	export interface AtlasGatherUpStarAck extends ProtoBufModel {
		new(obj?: any): AtlasGatherUpStarAck;
		atlasGather?: AtlasGather;
		
	}

	export interface AtlasGatherUpStarAckBuilder {
		new(): AtlasGatherUpStarAck;
		decode(buffer: ArrayBuffer) : AtlasGatherUpStarAck;
		//decode(buffer: NodeBuffer) : AtlasGatherUpStarAck;
		//decode(buffer: ByteArrayBuffer) : AtlasGatherUpStarAck;
		decode64(buffer: string) : AtlasGatherUpStarAck;
		
	}
}


declare module pb {

	var AtlasWearChangeReq: AtlasWearChangeReq;
	export interface AtlasWearChangeReq extends ProtoBufModel {
		new(obj?: any): AtlasWearChangeReq;
		heroIndex?: number;
		id?: number;
		
	}

	export interface AtlasWearChangeReqBuilder {
		new(): AtlasWearChangeReq;
		decode(buffer: ArrayBuffer) : AtlasWearChangeReq;
		//decode(buffer: NodeBuffer) : AtlasWearChangeReq;
		//decode(buffer: ByteArrayBuffer) : AtlasWearChangeReq;
		decode64(buffer: string) : AtlasWearChangeReq;
		
	}
}


declare module pb {

	var AtlasWearChangeAck: AtlasWearChangeAck;
	export interface AtlasWearChangeAck extends ProtoBufModel {
		new(obj?: any): AtlasWearChangeAck;
		heroIndex?: number;
		removeId?: number;
		atlasWear: number[];
		
	}

	export interface AtlasWearChangeAckBuilder {
		new(): AtlasWearChangeAck;
		decode(buffer: ArrayBuffer) : AtlasWearChangeAck;
		//decode(buffer: NodeBuffer) : AtlasWearChangeAck;
		//decode(buffer: ByteArrayBuffer) : AtlasWearChangeAck;
		decode64(buffer: string) : AtlasWearChangeAck;
		
	}
}


declare module pb {

	var AuctionInfoReq: AuctionInfoReq;
	export interface AuctionInfoReq extends ProtoBufModel {
		new(obj?: any): AuctionInfoReq;
		auctionType?: number;
		
	}

	export interface AuctionInfoReqBuilder {
		new(): AuctionInfoReq;
		decode(buffer: ArrayBuffer) : AuctionInfoReq;
		//decode(buffer: NodeBuffer) : AuctionInfoReq;
		//decode(buffer: ByteArrayBuffer) : AuctionInfoReq;
		decode64(buffer: string) : AuctionInfoReq;
		
	}
}


declare module pb {

	var AuctionInfoNtf: AuctionInfoNtf;
	export interface AuctionInfoNtf extends ProtoBufModel {
		new(obj?: any): AuctionInfoNtf;
		auctionType?: number;
		auctionInfos: AuctionItemInfo[];
		
	}

	export interface AuctionInfoNtfBuilder {
		new(): AuctionInfoNtf;
		decode(buffer: ArrayBuffer) : AuctionInfoNtf;
		//decode(buffer: NodeBuffer) : AuctionInfoNtf;
		//decode(buffer: ByteArrayBuffer) : AuctionInfoNtf;
		decode64(buffer: string) : AuctionInfoNtf;
		
	}
}


declare module pb {

	var AuctionItemInfo: AuctionItemInfo;
	export interface AuctionItemInfo extends ProtoBufModel {
		new(obj?: any): AuctionItemInfo;
		auctionId?: number;
		itemId?: number;
		auctionTime?: number;
		auctionDuration?: number;
		nowBidPrice?: number;
		nowBidUserId?: number;
		auctionType?: number;
		nowBidderNickname?: string;
		nowBidderAvatar?: string;
		auctionSrc?: number;
		bidGuildId: number[];
		dropState?: number;
		haveBidUsers: number[];
		finBidTimes?: number;
		itemCount?: number;
		putAwayPrice?: number;
		
	}

	export interface AuctionItemInfoBuilder {
		new(): AuctionItemInfo;
		decode(buffer: ArrayBuffer) : AuctionItemInfo;
		//decode(buffer: NodeBuffer) : AuctionItemInfo;
		//decode(buffer: ByteArrayBuffer) : AuctionItemInfo;
		decode64(buffer: string) : AuctionItemInfo;
		
	}
}


declare module pb {

	var BidInfoReq: BidInfoReq;
	export interface BidInfoReq extends ProtoBufModel {
		new(obj?: any): BidInfoReq;
		auctionId?: number;
		auctionType?: number;
		
	}

	export interface BidInfoReqBuilder {
		new(): BidInfoReq;
		decode(buffer: ArrayBuffer) : BidInfoReq;
		//decode(buffer: NodeBuffer) : BidInfoReq;
		//decode(buffer: ByteArrayBuffer) : BidInfoReq;
		decode64(buffer: string) : BidInfoReq;
		
	}
}


declare module pb {

	var BidInfoNtf: BidInfoNtf;
	export interface BidInfoNtf extends ProtoBufModel {
		new(obj?: any): BidInfoNtf;
		auctionType?: number;
		auctionInfo?: AuctionItemInfo;
		
	}

	export interface BidInfoNtfBuilder {
		new(): BidInfoNtf;
		decode(buffer: ArrayBuffer) : BidInfoNtf;
		//decode(buffer: NodeBuffer) : BidInfoNtf;
		//decode(buffer: ByteArrayBuffer) : BidInfoNtf;
		decode64(buffer: string) : BidInfoNtf;
		
	}
}


declare module pb {

	var BidReq: BidReq;
	export interface BidReq extends ProtoBufModel {
		new(obj?: any): BidReq;
		auctionType?: number;
		auctionId?: number;
		isBuyNow?: number;
		
	}

	export interface BidReqBuilder {
		new(): BidReq;
		decode(buffer: ArrayBuffer) : BidReq;
		//decode(buffer: NodeBuffer) : BidReq;
		//decode(buffer: ByteArrayBuffer) : BidReq;
		decode64(buffer: string) : BidReq;
		
	}
}


declare module pb {

	var BidNtf: BidNtf;
	export interface BidNtf extends ProtoBufModel {
		new(obj?: any): BidNtf;
		auctionType?: number;
		auctionInfo?: AuctionItemInfo;
		code?: number;
		isBuyNow?: number;
		auctionId?: number;
		
	}

	export interface BidNtfBuilder {
		new(): BidNtf;
		decode(buffer: ArrayBuffer) : BidNtf;
		//decode(buffer: NodeBuffer) : BidNtf;
		//decode(buffer: ByteArrayBuffer) : BidNtf;
		decode64(buffer: string) : BidNtf;
		
	}
}


declare module pb {

	var MyBidReq: MyBidReq;
	export interface MyBidReq extends ProtoBufModel {
		new(obj?: any): MyBidReq;
		
	}

	export interface MyBidReqBuilder {
		new(): MyBidReq;
		decode(buffer: ArrayBuffer) : MyBidReq;
		//decode(buffer: NodeBuffer) : MyBidReq;
		//decode(buffer: ByteArrayBuffer) : MyBidReq;
		decode64(buffer: string) : MyBidReq;
		
	}
}


declare module pb {

	var MyBidNtf: MyBidNtf;
	export interface MyBidNtf extends ProtoBufModel {
		new(obj?: any): MyBidNtf;
		myBidInfos: AuctionItemInfo[];
		
	}

	export interface MyBidNtfBuilder {
		new(): MyBidNtf;
		decode(buffer: ArrayBuffer) : MyBidNtf;
		//decode(buffer: NodeBuffer) : MyBidNtf;
		//decode(buffer: ByteArrayBuffer) : MyBidNtf;
		decode64(buffer: string) : MyBidNtf;
		
	}
}


declare module pb {

	var BidItemUpdateNtf: BidItemUpdateNtf;
	export interface BidItemUpdateNtf extends ProtoBufModel {
		new(obj?: any): BidItemUpdateNtf;
		newInfo?: AuctionItemInfo;
		itemStatus?: number;
		lastBidUserId?: number;
		auctionId?: number;
		auctionType?: number;
		
	}

	export interface BidItemUpdateNtfBuilder {
		new(): BidItemUpdateNtf;
		decode(buffer: ArrayBuffer) : BidItemUpdateNtf;
		//decode(buffer: NodeBuffer) : BidItemUpdateNtf;
		//decode(buffer: ByteArrayBuffer) : BidItemUpdateNtf;
		decode64(buffer: string) : BidItemUpdateNtf;
		
	}
}


declare module pb {

	var AuctionPutawayItemReq: AuctionPutawayItemReq;
	export interface AuctionPutawayItemReq extends ProtoBufModel {
		new(obj?: any): AuctionPutawayItemReq;
		itemId?: number;
		count?: number;
		position?: number;
		price?: number;
		
	}

	export interface AuctionPutawayItemReqBuilder {
		new(): AuctionPutawayItemReq;
		decode(buffer: ArrayBuffer) : AuctionPutawayItemReq;
		//decode(buffer: NodeBuffer) : AuctionPutawayItemReq;
		//decode(buffer: ByteArrayBuffer) : AuctionPutawayItemReq;
		decode64(buffer: string) : AuctionPutawayItemReq;
		
	}
}


declare module pb {

	var AuctionPutawayItemNtf: AuctionPutawayItemNtf;
	export interface AuctionPutawayItemNtf extends ProtoBufModel {
		new(obj?: any): AuctionPutawayItemNtf;
		auctionInfos?: AuctionItemInfo;
		code?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface AuctionPutawayItemNtfBuilder {
		new(): AuctionPutawayItemNtf;
		decode(buffer: ArrayBuffer) : AuctionPutawayItemNtf;
		//decode(buffer: NodeBuffer) : AuctionPutawayItemNtf;
		//decode(buffer: ByteArrayBuffer) : AuctionPutawayItemNtf;
		decode64(buffer: string) : AuctionPutawayItemNtf;
		
	}
}


declare module pb {

	var BidSuccessInfo: BidSuccessInfo;
	export interface BidSuccessInfo extends ProtoBufModel {
		new(obj?: any): BidSuccessInfo;
		nickname?: string;
		bidItemName?: string;
		
	}

	export interface BidSuccessInfoBuilder {
		new(): BidSuccessInfo;
		decode(buffer: ArrayBuffer) : BidSuccessInfo;
		//decode(buffer: NodeBuffer) : BidSuccessInfo;
		//decode(buffer: ByteArrayBuffer) : BidSuccessInfo;
		decode64(buffer: string) : BidSuccessInfo;
		
	}
}


declare module pb {

	var BidSuccessNoticeNtf: BidSuccessNoticeNtf;
	export interface BidSuccessNoticeNtf extends ProtoBufModel {
		new(obj?: any): BidSuccessNoticeNtf;
		noticeInfos: BidSuccessInfo[];
		
	}

	export interface BidSuccessNoticeNtfBuilder {
		new(): BidSuccessNoticeNtf;
		decode(buffer: ArrayBuffer) : BidSuccessNoticeNtf;
		//decode(buffer: NodeBuffer) : BidSuccessNoticeNtf;
		//decode(buffer: ByteArrayBuffer) : BidSuccessNoticeNtf;
		decode64(buffer: string) : BidSuccessNoticeNtf;
		
	}
}


declare module pb {

	var AuctionBuyTimesReq: AuctionBuyTimesReq;
	export interface AuctionBuyTimesReq extends ProtoBufModel {
		new(obj?: any): AuctionBuyTimesReq;
		itemId?: number;
		
	}

	export interface AuctionBuyTimesReqBuilder {
		new(): AuctionBuyTimesReq;
		decode(buffer: ArrayBuffer) : AuctionBuyTimesReq;
		//decode(buffer: NodeBuffer) : AuctionBuyTimesReq;
		//decode(buffer: ByteArrayBuffer) : AuctionBuyTimesReq;
		decode64(buffer: string) : AuctionBuyTimesReq;
		
	}
}


declare module pb {

	var AuctionBuyTimesAck: AuctionBuyTimesAck;
	export interface AuctionBuyTimesAck extends ProtoBufModel {
		new(obj?: any): AuctionBuyTimesAck;
		CanBuyTimes?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface AuctionBuyTimesAckBuilder {
		new(): AuctionBuyTimesAck;
		decode(buffer: ArrayBuffer) : AuctionBuyTimesAck;
		//decode(buffer: NodeBuffer) : AuctionBuyTimesAck;
		//decode(buffer: ByteArrayBuffer) : AuctionBuyTimesAck;
		decode64(buffer: string) : AuctionBuyTimesAck;
		
	}
}


declare module pb {

	var MyPutAwayItemInfoReq: MyPutAwayItemInfoReq;
	export interface MyPutAwayItemInfoReq extends ProtoBufModel {
		new(obj?: any): MyPutAwayItemInfoReq;
		
	}

	export interface MyPutAwayItemInfoReqBuilder {
		new(): MyPutAwayItemInfoReq;
		decode(buffer: ArrayBuffer) : MyPutAwayItemInfoReq;
		//decode(buffer: NodeBuffer) : MyPutAwayItemInfoReq;
		//decode(buffer: ByteArrayBuffer) : MyPutAwayItemInfoReq;
		decode64(buffer: string) : MyPutAwayItemInfoReq;
		
	}
}


declare module pb {

	var MyPutAwayItemInfoAck: MyPutAwayItemInfoAck;
	export interface MyPutAwayItemInfoAck extends ProtoBufModel {
		new(obj?: any): MyPutAwayItemInfoAck;
		myBidInfosNotInBid: AuctionItemInfo[];
		myBidInfosInBid: AuctionItemInfo[];
		
	}

	export interface MyPutAwayItemInfoAckBuilder {
		new(): MyPutAwayItemInfoAck;
		decode(buffer: ArrayBuffer) : MyPutAwayItemInfoAck;
		//decode(buffer: NodeBuffer) : MyPutAwayItemInfoAck;
		//decode(buffer: ByteArrayBuffer) : MyPutAwayItemInfoAck;
		decode64(buffer: string) : MyPutAwayItemInfoAck;
		
	}
}


declare module pb {

	var MyBidInfoItemReq: MyBidInfoItemReq;
	export interface MyBidInfoItemReq extends ProtoBufModel {
		new(obj?: any): MyBidInfoItemReq;
		
	}

	export interface MyBidInfoItemReqBuilder {
		new(): MyBidInfoItemReq;
		decode(buffer: ArrayBuffer) : MyBidInfoItemReq;
		//decode(buffer: NodeBuffer) : MyBidInfoItemReq;
		//decode(buffer: ByteArrayBuffer) : MyBidInfoItemReq;
		decode64(buffer: string) : MyBidInfoItemReq;
		
	}
}


declare module pb {

	var MyBidInfoItemAck: MyBidInfoItemAck;
	export interface MyBidInfoItemAck extends ProtoBufModel {
		new(obj?: any): MyBidInfoItemAck;
		myBidInfos: AuctionBidInfo[];
		
	}

	export interface MyBidInfoItemAckBuilder {
		new(): MyBidInfoItemAck;
		decode(buffer: ArrayBuffer) : MyBidInfoItemAck;
		//decode(buffer: NodeBuffer) : MyBidInfoItemAck;
		//decode(buffer: ByteArrayBuffer) : MyBidInfoItemAck;
		decode64(buffer: string) : MyBidInfoItemAck;
		
	}
}


declare module pb {

	var AuctionBidInfo: AuctionBidInfo;
	export interface AuctionBidInfo extends ProtoBufModel {
		new(obj?: any): AuctionBidInfo;
		Id?: number;
		UserId?: number;
		AuctionId?: number;
		AuctionType?: number;
		ItemId?: number;
		FirstBidTime?: number;
		FinallyBidTime?: number;
		State?: number;
		ExpireTime?: number;
		ItemCount?: number;
		
	}

	export interface AuctionBidInfoBuilder {
		new(): AuctionBidInfo;
		decode(buffer: ArrayBuffer) : AuctionBidInfo;
		//decode(buffer: NodeBuffer) : AuctionBidInfo;
		//decode(buffer: ByteArrayBuffer) : AuctionBidInfo;
		decode64(buffer: string) : AuctionBidInfo;
		
	}
}


declare module pb {

	var RedPointStateNtf: RedPointStateNtf;
	export interface RedPointStateNtf extends ProtoBufModel {
		new(obj?: any): RedPointStateNtf;
		type?: number;
		isBright?: number;
		
	}

	export interface RedPointStateNtfBuilder {
		new(): RedPointStateNtf;
		decode(buffer: ArrayBuffer) : RedPointStateNtf;
		//decode(buffer: NodeBuffer) : RedPointStateNtf;
		//decode(buffer: ByteArrayBuffer) : RedPointStateNtf;
		decode64(buffer: string) : RedPointStateNtf;
		
	}
}


declare module pb {

	var ConversionGoldIngotReq: ConversionGoldIngotReq;
	export interface ConversionGoldIngotReq extends ProtoBufModel {
		new(obj?: any): ConversionGoldIngotReq;
		num?: number;
		
	}

	export interface ConversionGoldIngotReqBuilder {
		new(): ConversionGoldIngotReq;
		decode(buffer: ArrayBuffer) : ConversionGoldIngotReq;
		//decode(buffer: NodeBuffer) : ConversionGoldIngotReq;
		//decode(buffer: ByteArrayBuffer) : ConversionGoldIngotReq;
		decode64(buffer: string) : ConversionGoldIngotReq;
		
	}
}


declare module pb {

	var ConversionGoldIngotAck: ConversionGoldIngotAck;
	export interface ConversionGoldIngotAck extends ProtoBufModel {
		new(obj?: any): ConversionGoldIngotAck;
		haveUseRecharge?: number;
		
	}

	export interface ConversionGoldIngotAckBuilder {
		new(): ConversionGoldIngotAck;
		decode(buffer: ArrayBuffer) : ConversionGoldIngotAck;
		//decode(buffer: NodeBuffer) : ConversionGoldIngotAck;
		//decode(buffer: ByteArrayBuffer) : ConversionGoldIngotAck;
		decode64(buffer: string) : ConversionGoldIngotAck;
		
	}
}


declare module pb {

	var AwakenLoadReq: AwakenLoadReq;
	export interface AwakenLoadReq extends ProtoBufModel {
		new(obj?: any): AwakenLoadReq;
		heroIndex?: number;
		
	}

	export interface AwakenLoadReqBuilder {
		new(): AwakenLoadReq;
		decode(buffer: ArrayBuffer) : AwakenLoadReq;
		//decode(buffer: NodeBuffer) : AwakenLoadReq;
		//decode(buffer: ByteArrayBuffer) : AwakenLoadReq;
		decode64(buffer: string) : AwakenLoadReq;
		
	}
}


declare module pb {

	var AwakenLoadAck: AwakenLoadAck;
	export interface AwakenLoadAck extends ProtoBufModel {
		new(obj?: any): AwakenLoadAck;
		heroIndex?: number;
		awakens: dcodeIO.ProtoBuf.Map<number,AwakenUnit>;
		
	}

	export interface AwakenLoadAckBuilder {
		new(): AwakenLoadAck;
		decode(buffer: ArrayBuffer) : AwakenLoadAck;
		//decode(buffer: NodeBuffer) : AwakenLoadAck;
		//decode(buffer: ByteArrayBuffer) : AwakenLoadAck;
		decode64(buffer: string) : AwakenLoadAck;
		
	}
}


declare module pb {

	var AwakenReq: AwakenReq;
	export interface AwakenReq extends ProtoBufModel {
		new(obj?: any): AwakenReq;
		heroIndex?: number;
		pos?: number;
		
	}

	export interface AwakenReqBuilder {
		new(): AwakenReq;
		decode(buffer: ArrayBuffer) : AwakenReq;
		//decode(buffer: NodeBuffer) : AwakenReq;
		//decode(buffer: ByteArrayBuffer) : AwakenReq;
		decode64(buffer: string) : AwakenReq;
		
	}
}


declare module pb {

	var AwakenAck: AwakenAck;
	export interface AwakenAck extends ProtoBufModel {
		new(obj?: any): AwakenAck;
		heroIndex?: number;
		pos?: number;
		awakenInfo?: AwakenUnit;
		goods?: GoodsChangeNtf;
		
	}

	export interface AwakenAckBuilder {
		new(): AwakenAck;
		decode(buffer: ArrayBuffer) : AwakenAck;
		//decode(buffer: NodeBuffer) : AwakenAck;
		//decode(buffer: ByteArrayBuffer) : AwakenAck;
		decode64(buffer: string) : AwakenAck;
		
	}
}


declare module pb {

	var AwakenUnit: AwakenUnit;
	export interface AwakenUnit extends ProtoBufModel {
		new(obj?: any): AwakenUnit;
		level?: number;
		exp?: number;
		
	}

	export interface AwakenUnitBuilder {
		new(): AwakenUnit;
		decode(buffer: ArrayBuffer) : AwakenUnit;
		//decode(buffer: NodeBuffer) : AwakenUnit;
		//decode(buffer: ByteArrayBuffer) : AwakenUnit;
		decode64(buffer: string) : AwakenUnit;
		
	}
}


declare module pb {

	var BagInfoReq: BagInfoReq;
	export interface BagInfoReq extends ProtoBufModel {
		new(obj?: any): BagInfoReq;
		
	}

	export interface BagInfoReqBuilder {
		new(): BagInfoReq;
		decode(buffer: ArrayBuffer) : BagInfoReq;
		//decode(buffer: NodeBuffer) : BagInfoReq;
		//decode(buffer: ByteArrayBuffer) : BagInfoReq;
		decode64(buffer: string) : BagInfoReq;
		
	}
}


declare module pb {

	var BagInfoNtf: BagInfoNtf;
	export interface BagInfoNtf extends ProtoBufModel {
		new(obj?: any): BagInfoNtf;
		bagMax?: number;
		items: Item[];
		haveBuyTimes?: number;
		
	}

	export interface BagInfoNtfBuilder {
		new(): BagInfoNtf;
		decode(buffer: ArrayBuffer) : BagInfoNtf;
		//decode(buffer: NodeBuffer) : BagInfoNtf;
		//decode(buffer: ByteArrayBuffer) : BagInfoNtf;
		decode64(buffer: string) : BagInfoNtf;
		
	}
}


declare module pb {

	var BagSpaceAddReq: BagSpaceAddReq;
	export interface BagSpaceAddReq extends ProtoBufModel {
		new(obj?: any): BagSpaceAddReq;
		
	}

	export interface BagSpaceAddReqBuilder {
		new(): BagSpaceAddReq;
		decode(buffer: ArrayBuffer) : BagSpaceAddReq;
		//decode(buffer: NodeBuffer) : BagSpaceAddReq;
		//decode(buffer: ByteArrayBuffer) : BagSpaceAddReq;
		decode64(buffer: string) : BagSpaceAddReq;
		
	}
}


declare module pb {

	var BagSpaceAddAck: BagSpaceAddAck;
	export interface BagSpaceAddAck extends ProtoBufModel {
		new(obj?: any): BagSpaceAddAck;
		bagMax?: number;
		
	}

	export interface BagSpaceAddAckBuilder {
		new(): BagSpaceAddAck;
		decode(buffer: ArrayBuffer) : BagSpaceAddAck;
		//decode(buffer: NodeBuffer) : BagSpaceAddAck;
		//decode(buffer: ByteArrayBuffer) : BagSpaceAddAck;
		decode64(buffer: string) : BagSpaceAddAck;
		
	}
}


declare module pb {

	var BagSortReq: BagSortReq;
	export interface BagSortReq extends ProtoBufModel {
		new(obj?: any): BagSortReq;
		
	}

	export interface BagSortReqBuilder {
		new(): BagSortReq;
		decode(buffer: ArrayBuffer) : BagSortReq;
		//decode(buffer: NodeBuffer) : BagSortReq;
		//decode(buffer: ByteArrayBuffer) : BagSortReq;
		decode64(buffer: string) : BagSortReq;
		
	}
}


declare module pb {

	var BagSortAck: BagSortAck;
	export interface BagSortAck extends ProtoBufModel {
		new(obj?: any): BagSortAck;
		items: Item[];
		
	}

	export interface BagSortAckBuilder {
		new(): BagSortAck;
		decode(buffer: ArrayBuffer) : BagSortAck;
		//decode(buffer: NodeBuffer) : BagSortAck;
		//decode(buffer: ByteArrayBuffer) : BagSortAck;
		decode64(buffer: string) : BagSortAck;
		
	}
}


declare module pb {

	var GiftUseReq: GiftUseReq;
	export interface GiftUseReq extends ProtoBufModel {
		new(obj?: any): GiftUseReq;
		itemId?: number;
		position?: number;
		
	}

	export interface GiftUseReqBuilder {
		new(): GiftUseReq;
		decode(buffer: ArrayBuffer) : GiftUseReq;
		//decode(buffer: NodeBuffer) : GiftUseReq;
		//decode(buffer: ByteArrayBuffer) : GiftUseReq;
		decode64(buffer: string) : GiftUseReq;
		
	}
}


declare module pb {

	var GiftUseAck: GiftUseAck;
	export interface GiftUseAck extends ProtoBufModel {
		new(obj?: any): GiftUseAck;
		result?: number;
		
	}

	export interface GiftUseAckBuilder {
		new(): GiftUseAck;
		decode(buffer: ArrayBuffer) : GiftUseAck;
		//decode(buffer: NodeBuffer) : GiftUseAck;
		//decode(buffer: ByteArrayBuffer) : GiftUseAck;
		decode64(buffer: string) : GiftUseAck;
		
	}
}


declare module pb {

	var EquipRecoverReq: EquipRecoverReq;
	export interface EquipRecoverReq extends ProtoBufModel {
		new(obj?: any): EquipRecoverReq;
		positions: number[];
		
	}

	export interface EquipRecoverReqBuilder {
		new(): EquipRecoverReq;
		decode(buffer: ArrayBuffer) : EquipRecoverReq;
		//decode(buffer: NodeBuffer) : EquipRecoverReq;
		//decode(buffer: ByteArrayBuffer) : EquipRecoverReq;
		decode64(buffer: string) : EquipRecoverReq;
		
	}
}


declare module pb {

	var EquipRecoverAck: EquipRecoverAck;
	export interface EquipRecoverAck extends ProtoBufModel {
		new(obj?: any): EquipRecoverAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface EquipRecoverAckBuilder {
		new(): EquipRecoverAck;
		decode(buffer: ArrayBuffer) : EquipRecoverAck;
		//decode(buffer: NodeBuffer) : EquipRecoverAck;
		//decode(buffer: ByteArrayBuffer) : EquipRecoverAck;
		decode64(buffer: string) : EquipRecoverAck;
		
	}
}


declare module pb {

	var ItemUseReq: ItemUseReq;
	export interface ItemUseReq extends ProtoBufModel {
		new(obj?: any): ItemUseReq;
		itemId?: number;
		itemNum?: number;
		heroIndex?: number;
		
	}

	export interface ItemUseReqBuilder {
		new(): ItemUseReq;
		decode(buffer: ArrayBuffer) : ItemUseReq;
		//decode(buffer: NodeBuffer) : ItemUseReq;
		//decode(buffer: ByteArrayBuffer) : ItemUseReq;
		decode64(buffer: string) : ItemUseReq;
		
	}
}


declare module pb {

	var ItemUseAck: ItemUseAck;
	export interface ItemUseAck extends ProtoBufModel {
		new(obj?: any): ItemUseAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface ItemUseAckBuilder {
		new(): ItemUseAck;
		decode(buffer: ArrayBuffer) : ItemUseAck;
		//decode(buffer: NodeBuffer) : ItemUseAck;
		//decode(buffer: ByteArrayBuffer) : ItemUseAck;
		decode64(buffer: string) : ItemUseAck;
		
	}
}


declare module pb {

	var EquipDestroyReq: EquipDestroyReq;
	export interface EquipDestroyReq extends ProtoBufModel {
		new(obj?: any): EquipDestroyReq;
		positions?: number;
		count?: number;
		
	}

	export interface EquipDestroyReqBuilder {
		new(): EquipDestroyReq;
		decode(buffer: ArrayBuffer) : EquipDestroyReq;
		//decode(buffer: NodeBuffer) : EquipDestroyReq;
		//decode(buffer: ByteArrayBuffer) : EquipDestroyReq;
		decode64(buffer: string) : EquipDestroyReq;
		
	}
}


declare module pb {

	var EquipDestroyAck: EquipDestroyAck;
	export interface EquipDestroyAck extends ProtoBufModel {
		new(obj?: any): EquipDestroyAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface EquipDestroyAckBuilder {
		new(): EquipDestroyAck;
		decode(buffer: ArrayBuffer) : EquipDestroyAck;
		//decode(buffer: NodeBuffer) : EquipDestroyAck;
		//decode(buffer: ByteArrayBuffer) : EquipDestroyAck;
		decode64(buffer: string) : EquipDestroyAck;
		
	}
}


declare module pb {

	var WarehouseInfoReq: WarehouseInfoReq;
	export interface WarehouseInfoReq extends ProtoBufModel {
		new(obj?: any): WarehouseInfoReq;
		
	}

	export interface WarehouseInfoReqBuilder {
		new(): WarehouseInfoReq;
		decode(buffer: ArrayBuffer) : WarehouseInfoReq;
		//decode(buffer: NodeBuffer) : WarehouseInfoReq;
		//decode(buffer: ByteArrayBuffer) : WarehouseInfoReq;
		decode64(buffer: string) : WarehouseInfoReq;
		
	}
}


declare module pb {

	var WarehouseInfoNtf: WarehouseInfoNtf;
	export interface WarehouseInfoNtf extends ProtoBufModel {
		new(obj?: any): WarehouseInfoNtf;
		bagMax?: number;
		items: Item[];
		haveBuyTimes?: number;
		
	}

	export interface WarehouseInfoNtfBuilder {
		new(): WarehouseInfoNtf;
		decode(buffer: ArrayBuffer) : WarehouseInfoNtf;
		//decode(buffer: NodeBuffer) : WarehouseInfoNtf;
		//decode(buffer: ByteArrayBuffer) : WarehouseInfoNtf;
		decode64(buffer: string) : WarehouseInfoNtf;
		
	}
}


declare module pb {

	var WareHouseSpaceAddReq: WareHouseSpaceAddReq;
	export interface WareHouseSpaceAddReq extends ProtoBufModel {
		new(obj?: any): WareHouseSpaceAddReq;
		
	}

	export interface WareHouseSpaceAddReqBuilder {
		new(): WareHouseSpaceAddReq;
		decode(buffer: ArrayBuffer) : WareHouseSpaceAddReq;
		//decode(buffer: NodeBuffer) : WareHouseSpaceAddReq;
		//decode(buffer: ByteArrayBuffer) : WareHouseSpaceAddReq;
		decode64(buffer: string) : WareHouseSpaceAddReq;
		
	}
}


declare module pb {

	var WareHouseSpaceAddAck: WareHouseSpaceAddAck;
	export interface WareHouseSpaceAddAck extends ProtoBufModel {
		new(obj?: any): WareHouseSpaceAddAck;
		bagMax?: number;
		
	}

	export interface WareHouseSpaceAddAckBuilder {
		new(): WareHouseSpaceAddAck;
		decode(buffer: ArrayBuffer) : WareHouseSpaceAddAck;
		//decode(buffer: NodeBuffer) : WareHouseSpaceAddAck;
		//decode(buffer: ByteArrayBuffer) : WareHouseSpaceAddAck;
		decode64(buffer: string) : WareHouseSpaceAddAck;
		
	}
}


declare module pb {

	var WarehouseAddReq: WarehouseAddReq;
	export interface WarehouseAddReq extends ProtoBufModel {
		new(obj?: any): WarehouseAddReq;
		positions: number[];
		
	}

	export interface WarehouseAddReqBuilder {
		new(): WarehouseAddReq;
		decode(buffer: ArrayBuffer) : WarehouseAddReq;
		//decode(buffer: NodeBuffer) : WarehouseAddReq;
		//decode(buffer: ByteArrayBuffer) : WarehouseAddReq;
		decode64(buffer: string) : WarehouseAddReq;
		
	}
}


declare module pb {

	var WarehouseAddAck: WarehouseAddAck;
	export interface WarehouseAddAck extends ProtoBufModel {
		new(obj?: any): WarehouseAddAck;
		items: Item[];
		
	}

	export interface WarehouseAddAckBuilder {
		new(): WarehouseAddAck;
		decode(buffer: ArrayBuffer) : WarehouseAddAck;
		//decode(buffer: NodeBuffer) : WarehouseAddAck;
		//decode(buffer: ByteArrayBuffer) : WarehouseAddAck;
		decode64(buffer: string) : WarehouseAddAck;
		
	}
}


declare module pb {

	var WarehouseShiftOutReq: WarehouseShiftOutReq;
	export interface WarehouseShiftOutReq extends ProtoBufModel {
		new(obj?: any): WarehouseShiftOutReq;
		positions: number[];
		
	}

	export interface WarehouseShiftOutReqBuilder {
		new(): WarehouseShiftOutReq;
		decode(buffer: ArrayBuffer) : WarehouseShiftOutReq;
		//decode(buffer: NodeBuffer) : WarehouseShiftOutReq;
		//decode(buffer: ByteArrayBuffer) : WarehouseShiftOutReq;
		decode64(buffer: string) : WarehouseShiftOutReq;
		
	}
}


declare module pb {

	var WarehouseShiftOutAck: WarehouseShiftOutAck;
	export interface WarehouseShiftOutAck extends ProtoBufModel {
		new(obj?: any): WarehouseShiftOutAck;
		items: Item[];
		goods?: GoodsChangeNtf;
		
	}

	export interface WarehouseShiftOutAckBuilder {
		new(): WarehouseShiftOutAck;
		decode(buffer: ArrayBuffer) : WarehouseShiftOutAck;
		//decode(buffer: NodeBuffer) : WarehouseShiftOutAck;
		//decode(buffer: ByteArrayBuffer) : WarehouseShiftOutAck;
		decode64(buffer: string) : WarehouseShiftOutAck;
		
	}
}


declare module pb {

	var WarehouseSortReq: WarehouseSortReq;
	export interface WarehouseSortReq extends ProtoBufModel {
		new(obj?: any): WarehouseSortReq;
		
	}

	export interface WarehouseSortReqBuilder {
		new(): WarehouseSortReq;
		decode(buffer: ArrayBuffer) : WarehouseSortReq;
		//decode(buffer: NodeBuffer) : WarehouseSortReq;
		//decode(buffer: ByteArrayBuffer) : WarehouseSortReq;
		decode64(buffer: string) : WarehouseSortReq;
		
	}
}


declare module pb {

	var WarehouseSortAck: WarehouseSortAck;
	export interface WarehouseSortAck extends ProtoBufModel {
		new(obj?: any): WarehouseSortAck;
		items: Item[];
		
	}

	export interface WarehouseSortAckBuilder {
		new(): WarehouseSortAck;
		decode(buffer: ArrayBuffer) : WarehouseSortAck;
		//decode(buffer: NodeBuffer) : WarehouseSortAck;
		//decode(buffer: ByteArrayBuffer) : WarehouseSortAck;
		decode64(buffer: string) : WarehouseSortAck;
		
	}
}


declare module pb {

	var GetBossFamilyInfoReq: GetBossFamilyInfoReq;
	export interface GetBossFamilyInfoReq extends ProtoBufModel {
		new(obj?: any): GetBossFamilyInfoReq;
		bossFamilyType?: number;
		
	}

	export interface GetBossFamilyInfoReqBuilder {
		new(): GetBossFamilyInfoReq;
		decode(buffer: ArrayBuffer) : GetBossFamilyInfoReq;
		//decode(buffer: NodeBuffer) : GetBossFamilyInfoReq;
		//decode(buffer: ByteArrayBuffer) : GetBossFamilyInfoReq;
		decode64(buffer: string) : GetBossFamilyInfoReq;
		
	}
}


declare module pb {

	var GetBossFamilyInfoAck: GetBossFamilyInfoAck;
	export interface GetBossFamilyInfoAck extends ProtoBufModel {
		new(obj?: any): GetBossFamilyInfoAck;
		bossFamilyInfo: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface GetBossFamilyInfoAckBuilder {
		new(): GetBossFamilyInfoAck;
		decode(buffer: ArrayBuffer) : GetBossFamilyInfoAck;
		//decode(buffer: NodeBuffer) : GetBossFamilyInfoAck;
		//decode(buffer: ByteArrayBuffer) : GetBossFamilyInfoAck;
		decode64(buffer: string) : GetBossFamilyInfoAck;
		
	}
}


declare module pb {

	var EnterBossFamilyReq: EnterBossFamilyReq;
	export interface EnterBossFamilyReq extends ProtoBufModel {
		new(obj?: any): EnterBossFamilyReq;
		stageId?: number;
		
	}

	export interface EnterBossFamilyReqBuilder {
		new(): EnterBossFamilyReq;
		decode(buffer: ArrayBuffer) : EnterBossFamilyReq;
		//decode(buffer: NodeBuffer) : EnterBossFamilyReq;
		//decode(buffer: ByteArrayBuffer) : EnterBossFamilyReq;
		decode64(buffer: string) : EnterBossFamilyReq;
		
	}
}


declare module pb {

	var CardActivityApplyGetReq: CardActivityApplyGetReq;
	export interface CardActivityApplyGetReq extends ProtoBufModel {
		new(obj?: any): CardActivityApplyGetReq;
		times?: number;
		
	}

	export interface CardActivityApplyGetReqBuilder {
		new(): CardActivityApplyGetReq;
		decode(buffer: ArrayBuffer) : CardActivityApplyGetReq;
		//decode(buffer: NodeBuffer) : CardActivityApplyGetReq;
		//decode(buffer: ByteArrayBuffer) : CardActivityApplyGetReq;
		decode64(buffer: string) : CardActivityApplyGetReq;
		
	}
}


declare module pb {

	var CardActivityApplyGetAck: CardActivityApplyGetAck;
	export interface CardActivityApplyGetAck extends ProtoBufModel {
		new(obj?: any): CardActivityApplyGetAck;
		cards: number[];
		cardTime?: number;
		goods?: GoodsChangeNtf;
		type?: number;
		myDrawInfo: CardInfoUnit[];
		serverDrawInfo: CardInfoUnit[];
		integral?: number;
		
	}

	export interface CardActivityApplyGetAckBuilder {
		new(): CardActivityApplyGetAck;
		decode(buffer: ArrayBuffer) : CardActivityApplyGetAck;
		//decode(buffer: NodeBuffer) : CardActivityApplyGetAck;
		//decode(buffer: ByteArrayBuffer) : CardActivityApplyGetAck;
		decode64(buffer: string) : CardActivityApplyGetAck;
		
	}
}


declare module pb {

	var CardActivityInfosReq: CardActivityInfosReq;
	export interface CardActivityInfosReq extends ProtoBufModel {
		new(obj?: any): CardActivityInfosReq;
		
	}

	export interface CardActivityInfosReqBuilder {
		new(): CardActivityInfosReq;
		decode(buffer: ArrayBuffer) : CardActivityInfosReq;
		//decode(buffer: NodeBuffer) : CardActivityInfosReq;
		//decode(buffer: ByteArrayBuffer) : CardActivityInfosReq;
		decode64(buffer: string) : CardActivityInfosReq;
		
	}
}


declare module pb {

	var CardActivityInfosAck: CardActivityInfosAck;
	export interface CardActivityInfosAck extends ProtoBufModel {
		new(obj?: any): CardActivityInfosAck;
		integral?: number;
		totalDrawCardTimes?: number;
		myDrawInfo: CardInfoUnit[];
		serverDrawInfo: CardInfoUnit[];
		haveGetIndex: number[];
		nowSeason?: number;
		mergeMark?: number;
		
	}

	export interface CardActivityInfosAckBuilder {
		new(): CardActivityInfosAck;
		decode(buffer: ArrayBuffer) : CardActivityInfosAck;
		//decode(buffer: NodeBuffer) : CardActivityInfosAck;
		//decode(buffer: ByteArrayBuffer) : CardActivityInfosAck;
		decode64(buffer: string) : CardActivityInfosAck;
		
	}
}


declare module pb {

	var CardInfoUnit: CardInfoUnit;
	export interface CardInfoUnit extends ProtoBufModel {
		new(obj?: any): CardInfoUnit;
		itemId?: number;
		count?: number;
		time?: number;
		userName?: string;
		type?: number;
		
	}

	export interface CardInfoUnitBuilder {
		new(): CardInfoUnit;
		decode(buffer: ArrayBuffer) : CardInfoUnit;
		//decode(buffer: NodeBuffer) : CardInfoUnit;
		//decode(buffer: ByteArrayBuffer) : CardInfoUnit;
		decode64(buffer: string) : CardInfoUnit;
		
	}
}


declare module pb {

	var CardInfoNtf: CardInfoNtf;
	export interface CardInfoNtf extends ProtoBufModel {
		new(obj?: any): CardInfoNtf;
		itemId?: number;
		time?: number;
		userName?: string;
		
	}

	export interface CardInfoNtfBuilder {
		new(): CardInfoNtf;
		decode(buffer: ArrayBuffer) : CardInfoNtf;
		//decode(buffer: NodeBuffer) : CardInfoNtf;
		//decode(buffer: ByteArrayBuffer) : CardInfoNtf;
		decode64(buffer: string) : CardInfoNtf;
		
	}
}


declare module pb {

	var GetIntegralAwardReq: GetIntegralAwardReq;
	export interface GetIntegralAwardReq extends ProtoBufModel {
		new(obj?: any): GetIntegralAwardReq;
		index?: number;
		times?: number;
		
	}

	export interface GetIntegralAwardReqBuilder {
		new(): GetIntegralAwardReq;
		decode(buffer: ArrayBuffer) : GetIntegralAwardReq;
		//decode(buffer: NodeBuffer) : GetIntegralAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetIntegralAwardReq;
		decode64(buffer: string) : GetIntegralAwardReq;
		
	}
}


declare module pb {

	var GetIntegralAwardAck: GetIntegralAwardAck;
	export interface GetIntegralAwardAck extends ProtoBufModel {
		new(obj?: any): GetIntegralAwardAck;
		haveGetIndex: number[];
		integral?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface GetIntegralAwardAckBuilder {
		new(): GetIntegralAwardAck;
		decode(buffer: ArrayBuffer) : GetIntegralAwardAck;
		//decode(buffer: NodeBuffer) : GetIntegralAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetIntegralAwardAck;
		decode64(buffer: string) : GetIntegralAwardAck;
		
	}
}


declare module pb {

	var CardCloseNtf: CardCloseNtf;
	export interface CardCloseNtf extends ProtoBufModel {
		new(obj?: any): CardCloseNtf;
		isClose?: boolean;
		
	}

	export interface CardCloseNtfBuilder {
		new(): CardCloseNtf;
		decode(buffer: ArrayBuffer) : CardCloseNtf;
		//decode(buffer: NodeBuffer) : CardCloseNtf;
		//decode(buffer: ByteArrayBuffer) : CardCloseNtf;
		decode64(buffer: string) : CardCloseNtf;
		
	}
}


declare module pb {

	var ChallengeInfoReq: ChallengeInfoReq;
	export interface ChallengeInfoReq extends ProtoBufModel {
		new(obj?: any): ChallengeInfoReq;
		
	}

	export interface ChallengeInfoReqBuilder {
		new(): ChallengeInfoReq;
		decode(buffer: ArrayBuffer) : ChallengeInfoReq;
		//decode(buffer: NodeBuffer) : ChallengeInfoReq;
		//decode(buffer: ByteArrayBuffer) : ChallengeInfoReq;
		decode64(buffer: string) : ChallengeInfoReq;
		
	}
}


declare module pb {

	var ChallengeInfoAck: ChallengeInfoAck;
	export interface ChallengeInfoAck extends ProtoBufModel {
		new(obj?: any): ChallengeInfoAck;
		challengePeopleInfo: dcodeIO.ProtoBuf.Map<number,peopleInfos>;
		BottomUserInfo: PeopleInfo[];
		ApplyUserInfo: PeopleInfo[];
		FirstPlayer: PeopleInfo[];
		JoinServer: number[];
		
	}

	export interface ChallengeInfoAckBuilder {
		new(): ChallengeInfoAck;
		decode(buffer: ArrayBuffer) : ChallengeInfoAck;
		//decode(buffer: NodeBuffer) : ChallengeInfoAck;
		//decode(buffer: ByteArrayBuffer) : ChallengeInfoAck;
		decode64(buffer: string) : ChallengeInfoAck;
		
	}
}


declare module pb {

	var ApplyChallengeReq: ApplyChallengeReq;
	export interface ApplyChallengeReq extends ProtoBufModel {
		new(obj?: any): ApplyChallengeReq;
		
	}

	export interface ApplyChallengeReqBuilder {
		new(): ApplyChallengeReq;
		decode(buffer: ArrayBuffer) : ApplyChallengeReq;
		//decode(buffer: NodeBuffer) : ApplyChallengeReq;
		//decode(buffer: ByteArrayBuffer) : ApplyChallengeReq;
		decode64(buffer: string) : ApplyChallengeReq;
		
	}
}


declare module pb {

	var ApplyChallengeAck: ApplyChallengeAck;
	export interface ApplyChallengeAck extends ProtoBufModel {
		new(obj?: any): ApplyChallengeAck;
		ApplyUserInfo: PeopleInfo[];
		
	}

	export interface ApplyChallengeAckBuilder {
		new(): ApplyChallengeAck;
		decode(buffer: ArrayBuffer) : ApplyChallengeAck;
		//decode(buffer: NodeBuffer) : ApplyChallengeAck;
		//decode(buffer: ByteArrayBuffer) : ApplyChallengeAck;
		decode64(buffer: string) : ApplyChallengeAck;
		
	}
}


declare module pb {

	var ChallengeEachRoundPeopleReq: ChallengeEachRoundPeopleReq;
	export interface ChallengeEachRoundPeopleReq extends ProtoBufModel {
		new(obj?: any): ChallengeEachRoundPeopleReq;
		
	}

	export interface ChallengeEachRoundPeopleReqBuilder {
		new(): ChallengeEachRoundPeopleReq;
		decode(buffer: ArrayBuffer) : ChallengeEachRoundPeopleReq;
		//decode(buffer: NodeBuffer) : ChallengeEachRoundPeopleReq;
		//decode(buffer: ByteArrayBuffer) : ChallengeEachRoundPeopleReq;
		decode64(buffer: string) : ChallengeEachRoundPeopleReq;
		
	}
}


declare module pb {

	var ChallengeEachRoundPeopleAck: ChallengeEachRoundPeopleAck;
	export interface ChallengeEachRoundPeopleAck extends ProtoBufModel {
		new(obj?: any): ChallengeEachRoundPeopleAck;
		nowRound?: number;
		challengePeopleInfo: PeopleInfo[];
		BottomUserInfo: PeopleInfo[];
		
	}

	export interface ChallengeEachRoundPeopleAckBuilder {
		new(): ChallengeEachRoundPeopleAck;
		decode(buffer: ArrayBuffer) : ChallengeEachRoundPeopleAck;
		//decode(buffer: NodeBuffer) : ChallengeEachRoundPeopleAck;
		//decode(buffer: ByteArrayBuffer) : ChallengeEachRoundPeopleAck;
		decode64(buffer: string) : ChallengeEachRoundPeopleAck;
		
	}
}


declare module pb {

	var peopleInfos: peopleInfos;
	export interface peopleInfos extends ProtoBufModel {
		new(obj?: any): peopleInfos;
		peopleInfo: PeopleInfo[];
		
	}

	export interface peopleInfosBuilder {
		new(): peopleInfos;
		decode(buffer: ArrayBuffer) : peopleInfos;
		//decode(buffer: NodeBuffer) : peopleInfos;
		//decode(buffer: ByteArrayBuffer) : peopleInfos;
		decode64(buffer: string) : peopleInfos;
		
	}
}


declare module pb {

	var BottomPourReq: BottomPourReq;
	export interface BottomPourReq extends ProtoBufModel {
		new(obj?: any): BottomPourReq;
		userId?: number;
		
	}

	export interface BottomPourReqBuilder {
		new(): BottomPourReq;
		decode(buffer: ArrayBuffer) : BottomPourReq;
		//decode(buffer: NodeBuffer) : BottomPourReq;
		//decode(buffer: ByteArrayBuffer) : BottomPourReq;
		decode64(buffer: string) : BottomPourReq;
		
	}
}


declare module pb {

	var BottomPourAck: BottomPourAck;
	export interface BottomPourAck extends ProtoBufModel {
		new(obj?: any): BottomPourAck;
		state?: boolean;
		BottomUserInfo: PeopleInfo[];
		
	}

	export interface BottomPourAckBuilder {
		new(): BottomPourAck;
		decode(buffer: ArrayBuffer) : BottomPourAck;
		//decode(buffer: NodeBuffer) : BottomPourAck;
		//decode(buffer: ByteArrayBuffer) : BottomPourAck;
		decode64(buffer: string) : BottomPourAck;
		
	}
}


declare module pb {

	var PeopleInfo: PeopleInfo;
	export interface PeopleInfo extends ProtoBufModel {
		new(obj?: any): PeopleInfo;
		name?: string;
		avatar?: string;
		serverId?: number;
		combat?: number;
		userId?: number;
		guildName?: string;
		
	}

	export interface PeopleInfoBuilder {
		new(): PeopleInfo;
		decode(buffer: ArrayBuffer) : PeopleInfo;
		//decode(buffer: NodeBuffer) : PeopleInfo;
		//decode(buffer: ByteArrayBuffer) : PeopleInfo;
		decode64(buffer: string) : PeopleInfo;
		
	}
}


declare module pb {

	var ChallengeOpenNtf: ChallengeOpenNtf;
	export interface ChallengeOpenNtf extends ProtoBufModel {
		new(obj?: any): ChallengeOpenNtf;
		isOpen?: boolean;
		
	}

	export interface ChallengeOpenNtfBuilder {
		new(): ChallengeOpenNtf;
		decode(buffer: ArrayBuffer) : ChallengeOpenNtf;
		//decode(buffer: NodeBuffer) : ChallengeOpenNtf;
		//decode(buffer: ByteArrayBuffer) : ChallengeOpenNtf;
		decode64(buffer: string) : ChallengeOpenNtf;
		
	}
}


declare module pb {

	var ChallengeRoundEndNtf: ChallengeRoundEndNtf;
	export interface ChallengeRoundEndNtf extends ProtoBufModel {
		new(obj?: any): ChallengeRoundEndNtf;
		
	}

	export interface ChallengeRoundEndNtfBuilder {
		new(): ChallengeRoundEndNtf;
		decode(buffer: ArrayBuffer) : ChallengeRoundEndNtf;
		//decode(buffer: NodeBuffer) : ChallengeRoundEndNtf;
		//decode(buffer: ByteArrayBuffer) : ChallengeRoundEndNtf;
		decode64(buffer: string) : ChallengeRoundEndNtf;
		
	}
}


declare module pb {

	var ChallengeApplyUserInfoNtf: ChallengeApplyUserInfoNtf;
	export interface ChallengeApplyUserInfoNtf extends ProtoBufModel {
		new(obj?: any): ChallengeApplyUserInfoNtf;
		ApplyUserInfo: PeopleInfo[];
		
	}

	export interface ChallengeApplyUserInfoNtfBuilder {
		new(): ChallengeApplyUserInfoNtf;
		decode(buffer: ArrayBuffer) : ChallengeApplyUserInfoNtf;
		//decode(buffer: NodeBuffer) : ChallengeApplyUserInfoNtf;
		//decode(buffer: ByteArrayBuffer) : ChallengeApplyUserInfoNtf;
		decode64(buffer: string) : ChallengeApplyUserInfoNtf;
		
	}
}


declare module pb {

	var ChatMessageNtf: ChatMessageNtf;
	export interface ChatMessageNtf extends ProtoBufModel {
		new(obj?: any): ChatMessageNtf;
		sender?: BriefUserInfo;
		type?: number;
		msg?: string;
		ts?: number;
		toId?: number;
		
	}

	export interface ChatMessageNtfBuilder {
		new(): ChatMessageNtf;
		decode(buffer: ArrayBuffer) : ChatMessageNtf;
		//decode(buffer: NodeBuffer) : ChatMessageNtf;
		//decode(buffer: ByteArrayBuffer) : ChatMessageNtf;
		decode64(buffer: string) : ChatMessageNtf;
		
	}
}


declare module pb {

	var ChatMessageListReq: ChatMessageListReq;
	export interface ChatMessageListReq extends ProtoBufModel {
		new(obj?: any): ChatMessageListReq;
		
	}

	export interface ChatMessageListReqBuilder {
		new(): ChatMessageListReq;
		decode(buffer: ArrayBuffer) : ChatMessageListReq;
		//decode(buffer: NodeBuffer) : ChatMessageListReq;
		//decode(buffer: ByteArrayBuffer) : ChatMessageListReq;
		decode64(buffer: string) : ChatMessageListReq;
		
	}
}


declare module pb {

	var ChatMessageListAck: ChatMessageListAck;
	export interface ChatMessageListAck extends ProtoBufModel {
		new(obj?: any): ChatMessageListAck;
		msgs: ChatMessageNtf[];
		
	}

	export interface ChatMessageListAckBuilder {
		new(): ChatMessageListAck;
		decode(buffer: ArrayBuffer) : ChatMessageListAck;
		//decode(buffer: NodeBuffer) : ChatMessageListAck;
		//decode(buffer: ByteArrayBuffer) : ChatMessageListAck;
		decode64(buffer: string) : ChatMessageListAck;
		
	}
}


declare module pb {

	var ChatSendReq: ChatSendReq;
	export interface ChatSendReq extends ProtoBufModel {
		new(obj?: any): ChatSendReq;
		type?: number;
		msg?: string;
		toId?: number;
		
	}

	export interface ChatSendReqBuilder {
		new(): ChatSendReq;
		decode(buffer: ArrayBuffer) : ChatSendReq;
		//decode(buffer: NodeBuffer) : ChatSendReq;
		//decode(buffer: ByteArrayBuffer) : ChatSendReq;
		decode64(buffer: string) : ChatSendReq;
		
	}
}


declare module pb {

	var ChatSendAck: ChatSendAck;
	export interface ChatSendAck extends ProtoBufModel {
		new(obj?: any): ChatSendAck;
		isBanSpeak?: boolean;
		banSpeakTime?: number;
		
	}

	export interface ChatSendAckBuilder {
		new(): ChatSendAck;
		decode(buffer: ArrayBuffer) : ChatSendAck;
		//decode(buffer: NodeBuffer) : ChatSendAck;
		//decode(buffer: ByteArrayBuffer) : ChatSendAck;
		decode64(buffer: string) : ChatSendAck;
		
	}
}


declare module pb {

	var ChatBanNtf: ChatBanNtf;
	export interface ChatBanNtf extends ProtoBufModel {
		new(obj?: any): ChatBanNtf;
		endTime?: number;
		reason?: string;
		
	}

	export interface ChatBanNtfBuilder {
		new(): ChatBanNtf;
		decode(buffer: ArrayBuffer) : ChatBanNtf;
		//decode(buffer: NodeBuffer) : ChatBanNtf;
		//decode(buffer: ByteArrayBuffer) : ChatBanNtf;
		decode64(buffer: string) : ChatBanNtf;
		
	}
}


declare module pb {

	var ChatBanRemoveNtf: ChatBanRemoveNtf;
	export interface ChatBanRemoveNtf extends ProtoBufModel {
		new(obj?: any): ChatBanRemoveNtf;
		
	}

	export interface ChatBanRemoveNtfBuilder {
		new(): ChatBanRemoveNtf;
		decode(buffer: ArrayBuffer) : ChatBanRemoveNtf;
		//decode(buffer: NodeBuffer) : ChatBanRemoveNtf;
		//decode(buffer: ByteArrayBuffer) : ChatBanRemoveNtf;
		decode64(buffer: string) : ChatBanRemoveNtf;
		
	}
}


declare module pb {

	var ChuanShiWearReq: ChuanShiWearReq;
	export interface ChuanShiWearReq extends ProtoBufModel {
		new(obj?: any): ChuanShiWearReq;
		heroIndex?: number;
		bagPos?: number;
		
	}

	export interface ChuanShiWearReqBuilder {
		new(): ChuanShiWearReq;
		decode(buffer: ArrayBuffer) : ChuanShiWearReq;
		//decode(buffer: NodeBuffer) : ChuanShiWearReq;
		//decode(buffer: ByteArrayBuffer) : ChuanShiWearReq;
		decode64(buffer: string) : ChuanShiWearReq;
		
	}
}


declare module pb {

	var ChuanShiWearAck: ChuanShiWearAck;
	export interface ChuanShiWearAck extends ProtoBufModel {
		new(obj?: any): ChuanShiWearAck;
		heroIndex?: number;
		equipPos?: number;
		equipId?: number;
		
	}

	export interface ChuanShiWearAckBuilder {
		new(): ChuanShiWearAck;
		decode(buffer: ArrayBuffer) : ChuanShiWearAck;
		//decode(buffer: NodeBuffer) : ChuanShiWearAck;
		//decode(buffer: ByteArrayBuffer) : ChuanShiWearAck;
		decode64(buffer: string) : ChuanShiWearAck;
		
	}
}


declare module pb {

	var ChuanShiRemoveReq: ChuanShiRemoveReq;
	export interface ChuanShiRemoveReq extends ProtoBufModel {
		new(obj?: any): ChuanShiRemoveReq;
		heroIndex?: number;
		equipPos?: number;
		
	}

	export interface ChuanShiRemoveReqBuilder {
		new(): ChuanShiRemoveReq;
		decode(buffer: ArrayBuffer) : ChuanShiRemoveReq;
		//decode(buffer: NodeBuffer) : ChuanShiRemoveReq;
		//decode(buffer: ByteArrayBuffer) : ChuanShiRemoveReq;
		decode64(buffer: string) : ChuanShiRemoveReq;
		
	}
}


declare module pb {

	var ChuanShiRemoveAck: ChuanShiRemoveAck;
	export interface ChuanShiRemoveAck extends ProtoBufModel {
		new(obj?: any): ChuanShiRemoveAck;
		heroIndex?: number;
		equipPos?: number;
		
	}

	export interface ChuanShiRemoveAckBuilder {
		new(): ChuanShiRemoveAck;
		decode(buffer: ArrayBuffer) : ChuanShiRemoveAck;
		//decode(buffer: NodeBuffer) : ChuanShiRemoveAck;
		//decode(buffer: ByteArrayBuffer) : ChuanShiRemoveAck;
		decode64(buffer: string) : ChuanShiRemoveAck;
		
	}
}


declare module pb {

	var ChuanShiDeComposeReq: ChuanShiDeComposeReq;
	export interface ChuanShiDeComposeReq extends ProtoBufModel {
		new(obj?: any): ChuanShiDeComposeReq;
		bagPos?: number;
		
	}

	export interface ChuanShiDeComposeReqBuilder {
		new(): ChuanShiDeComposeReq;
		decode(buffer: ArrayBuffer) : ChuanShiDeComposeReq;
		//decode(buffer: NodeBuffer) : ChuanShiDeComposeReq;
		//decode(buffer: ByteArrayBuffer) : ChuanShiDeComposeReq;
		decode64(buffer: string) : ChuanShiDeComposeReq;
		
	}
}


declare module pb {

	var ChuanShiDeComposeAck: ChuanShiDeComposeAck;
	export interface ChuanShiDeComposeAck extends ProtoBufModel {
		new(obj?: any): ChuanShiDeComposeAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface ChuanShiDeComposeAckBuilder {
		new(): ChuanShiDeComposeAck;
		decode(buffer: ArrayBuffer) : ChuanShiDeComposeAck;
		//decode(buffer: NodeBuffer) : ChuanShiDeComposeAck;
		//decode(buffer: ByteArrayBuffer) : ChuanShiDeComposeAck;
		decode64(buffer: string) : ChuanShiDeComposeAck;
		
	}
}


declare module pb {

	var ChuanshiStrengthenReq: ChuanshiStrengthenReq;
	export interface ChuanshiStrengthenReq extends ProtoBufModel {
		new(obj?: any): ChuanshiStrengthenReq;
		heroIndex?: number;
		equipPos?: number;
		stone?: number;
		
	}

	export interface ChuanshiStrengthenReqBuilder {
		new(): ChuanshiStrengthenReq;
		decode(buffer: ArrayBuffer) : ChuanshiStrengthenReq;
		//decode(buffer: NodeBuffer) : ChuanshiStrengthenReq;
		//decode(buffer: ByteArrayBuffer) : ChuanshiStrengthenReq;
		decode64(buffer: string) : ChuanshiStrengthenReq;
		
	}
}


declare module pb {

	var ChuanshiStrengthenAck: ChuanshiStrengthenAck;
	export interface ChuanshiStrengthenAck extends ProtoBufModel {
		new(obj?: any): ChuanshiStrengthenAck;
		heroIndex?: number;
		equipPos?: number;
		lv?: number;
		isUp?: boolean;
		
	}

	export interface ChuanshiStrengthenAckBuilder {
		new(): ChuanshiStrengthenAck;
		decode(buffer: ArrayBuffer) : ChuanshiStrengthenAck;
		//decode(buffer: NodeBuffer) : ChuanshiStrengthenAck;
		//decode(buffer: ByteArrayBuffer) : ChuanshiStrengthenAck;
		decode64(buffer: string) : ChuanshiStrengthenAck;
		
	}
}


declare module pb {

	var ClearReq: ClearReq;
	export interface ClearReq extends ProtoBufModel {
		new(obj?: any): ClearReq;
		heroIndex?: number;
		pos?: number;
		propIndex?: number;
		
	}

	export interface ClearReqBuilder {
		new(): ClearReq;
		decode(buffer: ArrayBuffer) : ClearReq;
		//decode(buffer: NodeBuffer) : ClearReq;
		//decode(buffer: ByteArrayBuffer) : ClearReq;
		decode64(buffer: string) : ClearReq;
		
	}
}


declare module pb {

	var ClearAck: ClearAck;
	export interface ClearAck extends ProtoBufModel {
		new(obj?: any): ClearAck;
		heroIndex?: number;
		pos?: number;
		equipClear?: EquipClearArr;
		goods?: GoodsChangeNtf;
		
	}

	export interface ClearAckBuilder {
		new(): ClearAck;
		decode(buffer: ArrayBuffer) : ClearAck;
		//decode(buffer: NodeBuffer) : ClearAck;
		//decode(buffer: ByteArrayBuffer) : ClearAck;
		decode64(buffer: string) : ClearAck;
		
	}
}


declare module pb {

	var CompetitveLoadReq: CompetitveLoadReq;
	export interface CompetitveLoadReq extends ProtoBufModel {
		new(obj?: any): CompetitveLoadReq;
		
	}

	export interface CompetitveLoadReqBuilder {
		new(): CompetitveLoadReq;
		decode(buffer: ArrayBuffer) : CompetitveLoadReq;
		//decode(buffer: NodeBuffer) : CompetitveLoadReq;
		//decode(buffer: ByteArrayBuffer) : CompetitveLoadReq;
		decode64(buffer: string) : CompetitveLoadReq;
		
	}
}


declare module pb {

	var CompetitveLoadAck: CompetitveLoadAck;
	export interface CompetitveLoadAck extends ProtoBufModel {
		new(obj?: any): CompetitveLoadAck;
		seasonTimes?: number;
		sessionWinTimes?: number;
		remainChallengeTimes?: number;
		todayCanBuyTimes?: number;
		userScore?: number;
		yestardayReward?: number;
		seasonRank: CompetitveRankInfo[];
		lastSeasonRank: CompetitveRankInfo[];
		beginTimes?: number;
		lastSeasonUserRank?: number;
		lastSeasonUserRankScore?: number;
		
	}

	export interface CompetitveLoadAckBuilder {
		new(): CompetitveLoadAck;
		decode(buffer: ArrayBuffer) : CompetitveLoadAck;
		//decode(buffer: NodeBuffer) : CompetitveLoadAck;
		//decode(buffer: ByteArrayBuffer) : CompetitveLoadAck;
		decode64(buffer: string) : CompetitveLoadAck;
		
	}
}


declare module pb {

	var EnterCompetitveFightReq: EnterCompetitveFightReq;
	export interface EnterCompetitveFightReq extends ProtoBufModel {
		new(obj?: any): EnterCompetitveFightReq;
		challengeUid?: number;
		challengeRanking?: number;
		
	}

	export interface EnterCompetitveFightReqBuilder {
		new(): EnterCompetitveFightReq;
		decode(buffer: ArrayBuffer) : EnterCompetitveFightReq;
		//decode(buffer: NodeBuffer) : EnterCompetitveFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterCompetitveFightReq;
		decode64(buffer: string) : EnterCompetitveFightReq;
		
	}
}


declare module pb {

	var CompetitveFightNtf: CompetitveFightNtf;
	export interface CompetitveFightNtf extends ProtoBufModel {
		new(obj?: any): CompetitveFightNtf;
		result?: number;
		goods?: GoodsChangeNtf;
		myRank?: number;
		
	}

	export interface CompetitveFightNtfBuilder {
		new(): CompetitveFightNtf;
		decode(buffer: ArrayBuffer) : CompetitveFightNtf;
		//decode(buffer: NodeBuffer) : CompetitveFightNtf;
		//decode(buffer: ByteArrayBuffer) : CompetitveFightNtf;
		decode64(buffer: string) : CompetitveFightNtf;
		
	}
}


declare module pb {

	var BuyCompetitveChallengeTimesReq: BuyCompetitveChallengeTimesReq;
	export interface BuyCompetitveChallengeTimesReq extends ProtoBufModel {
		new(obj?: any): BuyCompetitveChallengeTimesReq;
		
	}

	export interface BuyCompetitveChallengeTimesReqBuilder {
		new(): BuyCompetitveChallengeTimesReq;
		decode(buffer: ArrayBuffer) : BuyCompetitveChallengeTimesReq;
		//decode(buffer: NodeBuffer) : BuyCompetitveChallengeTimesReq;
		//decode(buffer: ByteArrayBuffer) : BuyCompetitveChallengeTimesReq;
		decode64(buffer: string) : BuyCompetitveChallengeTimesReq;
		
	}
}


declare module pb {

	var BuyCompetitveChallengeTimesAck: BuyCompetitveChallengeTimesAck;
	export interface BuyCompetitveChallengeTimesAck extends ProtoBufModel {
		new(obj?: any): BuyCompetitveChallengeTimesAck;
		residueTimes?: number;
		todayCanBuyTimes?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface BuyCompetitveChallengeTimesAckBuilder {
		new(): BuyCompetitveChallengeTimesAck;
		decode(buffer: ArrayBuffer) : BuyCompetitveChallengeTimesAck;
		//decode(buffer: NodeBuffer) : BuyCompetitveChallengeTimesAck;
		//decode(buffer: ByteArrayBuffer) : BuyCompetitveChallengeTimesAck;
		decode64(buffer: string) : BuyCompetitveChallengeTimesAck;
		
	}
}


declare module pb {

	var RefCompetitveRankReq: RefCompetitveRankReq;
	export interface RefCompetitveRankReq extends ProtoBufModel {
		new(obj?: any): RefCompetitveRankReq;
		
	}

	export interface RefCompetitveRankReqBuilder {
		new(): RefCompetitveRankReq;
		decode(buffer: ArrayBuffer) : RefCompetitveRankReq;
		//decode(buffer: NodeBuffer) : RefCompetitveRankReq;
		//decode(buffer: ByteArrayBuffer) : RefCompetitveRankReq;
		decode64(buffer: string) : RefCompetitveRankReq;
		
	}
}


declare module pb {

	var RefCompetitveRankAck: RefCompetitveRankAck;
	export interface RefCompetitveRankAck extends ProtoBufModel {
		new(obj?: any): RefCompetitveRankAck;
		userInfo?: BriefUserInfo;
		score?: number;
		heros: HeroInfo[];
		
	}

	export interface RefCompetitveRankAckBuilder {
		new(): RefCompetitveRankAck;
		decode(buffer: ArrayBuffer) : RefCompetitveRankAck;
		//decode(buffer: NodeBuffer) : RefCompetitveRankAck;
		//decode(buffer: ByteArrayBuffer) : RefCompetitveRankAck;
		decode64(buffer: string) : RefCompetitveRankAck;
		
	}
}


declare module pb {

	var CompetitveRankInfo: CompetitveRankInfo;
	export interface CompetitveRankInfo extends ProtoBufModel {
		new(obj?: any): CompetitveRankInfo;
		ranking?: number;
		avatar?: string;
		score?: number;
		nickName?: string;
		
	}

	export interface CompetitveRankInfoBuilder {
		new(): CompetitveRankInfo;
		decode(buffer: ArrayBuffer) : CompetitveRankInfo;
		//decode(buffer: NodeBuffer) : CompetitveRankInfo;
		//decode(buffer: ByteArrayBuffer) : CompetitveRankInfo;
		decode64(buffer: string) : CompetitveRankInfo;
		
	}
}


declare module pb {

	var GetCompetitveDailyRewardReq: GetCompetitveDailyRewardReq;
	export interface GetCompetitveDailyRewardReq extends ProtoBufModel {
		new(obj?: any): GetCompetitveDailyRewardReq;
		
	}

	export interface GetCompetitveDailyRewardReqBuilder {
		new(): GetCompetitveDailyRewardReq;
		decode(buffer: ArrayBuffer) : GetCompetitveDailyRewardReq;
		//decode(buffer: NodeBuffer) : GetCompetitveDailyRewardReq;
		//decode(buffer: ByteArrayBuffer) : GetCompetitveDailyRewardReq;
		decode64(buffer: string) : GetCompetitveDailyRewardReq;
		
	}
}


declare module pb {

	var GetCompetitveDailyRewardAck: GetCompetitveDailyRewardAck;
	export interface GetCompetitveDailyRewardAck extends ProtoBufModel {
		new(obj?: any): GetCompetitveDailyRewardAck;
		goods?: GoodsChangeNtf;
		haveGetRewardState?: number;
		
	}

	export interface GetCompetitveDailyRewardAckBuilder {
		new(): GetCompetitveDailyRewardAck;
		decode(buffer: ArrayBuffer) : GetCompetitveDailyRewardAck;
		//decode(buffer: NodeBuffer) : GetCompetitveDailyRewardAck;
		//decode(buffer: ByteArrayBuffer) : GetCompetitveDailyRewardAck;
		decode64(buffer: string) : GetCompetitveDailyRewardAck;
		
	}
}


declare module pb {

	var CompetitveMultipleClaimReq: CompetitveMultipleClaimReq;
	export interface CompetitveMultipleClaimReq extends ProtoBufModel {
		new(obj?: any): CompetitveMultipleClaimReq;
		num?: number;
		
	}

	export interface CompetitveMultipleClaimReqBuilder {
		new(): CompetitveMultipleClaimReq;
		decode(buffer: ArrayBuffer) : CompetitveMultipleClaimReq;
		//decode(buffer: NodeBuffer) : CompetitveMultipleClaimReq;
		//decode(buffer: ByteArrayBuffer) : CompetitveMultipleClaimReq;
		decode64(buffer: string) : CompetitveMultipleClaimReq;
		
	}
}


declare module pb {

	var CompetitveMultipleClaimAck: CompetitveMultipleClaimAck;
	export interface CompetitveMultipleClaimAck extends ProtoBufModel {
		new(obj?: any): CompetitveMultipleClaimAck;
		seasonScore?: number;
		
	}

	export interface CompetitveMultipleClaimAckBuilder {
		new(): CompetitveMultipleClaimAck;
		decode(buffer: ArrayBuffer) : CompetitveMultipleClaimAck;
		//decode(buffer: NodeBuffer) : CompetitveMultipleClaimAck;
		//decode(buffer: ByteArrayBuffer) : CompetitveMultipleClaimAck;
		decode64(buffer: string) : CompetitveMultipleClaimAck;
		
	}
}


declare module pb {

	var ComposeReq: ComposeReq;
	export interface ComposeReq extends ProtoBufModel {
		new(obj?: any): ComposeReq;
		heroIndex?: number;
		subId?: number;
		composeNum?: number;
		
	}

	export interface ComposeReqBuilder {
		new(): ComposeReq;
		decode(buffer: ArrayBuffer) : ComposeReq;
		//decode(buffer: NodeBuffer) : ComposeReq;
		//decode(buffer: ByteArrayBuffer) : ComposeReq;
		decode64(buffer: string) : ComposeReq;
		
	}
}


declare module pb {

	var ComposeAck: ComposeAck;
	export interface ComposeAck extends ProtoBufModel {
		new(obj?: any): ComposeAck;
		heroIndex?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface ComposeAckBuilder {
		new(): ComposeAck;
		decode(buffer: ArrayBuffer) : ComposeAck;
		//decode(buffer: NodeBuffer) : ComposeAck;
		//decode(buffer: ByteArrayBuffer) : ComposeAck;
		decode64(buffer: string) : ComposeAck;
		
	}
}


declare module pb {

	var ComposeEquipReq: ComposeEquipReq;
	export interface ComposeEquipReq extends ProtoBufModel {
		new(obj?: any): ComposeEquipReq;
		composeEquipSubId?: number;
		isLuckyStone?: boolean;
		bigLuckyStone?: boolean;
		bagPos: number[];
		equipPos: number[];
		items: number[];
		
	}

	export interface ComposeEquipReqBuilder {
		new(): ComposeEquipReq;
		decode(buffer: ArrayBuffer) : ComposeEquipReq;
		//decode(buffer: NodeBuffer) : ComposeEquipReq;
		//decode(buffer: ByteArrayBuffer) : ComposeEquipReq;
		decode64(buffer: string) : ComposeEquipReq;
		
	}
}


declare module pb {

	var ComposeEquipAck: ComposeEquipAck;
	export interface ComposeEquipAck extends ProtoBufModel {
		new(obj?: any): ComposeEquipAck;
		composeEquipSubId?: number;
		isLuckyStone?: boolean;
		bigLuckyStone?: boolean;
		goods?: GoodsChangeNtf;
		
	}

	export interface ComposeEquipAckBuilder {
		new(): ComposeEquipAck;
		decode(buffer: ArrayBuffer) : ComposeEquipAck;
		//decode(buffer: NodeBuffer) : ComposeEquipAck;
		//decode(buffer: ByteArrayBuffer) : ComposeEquipAck;
		decode64(buffer: string) : ComposeEquipAck;
		
	}
}


declare module pb {

	var ComposeChuanShiEquipReq: ComposeChuanShiEquipReq;
	export interface ComposeChuanShiEquipReq extends ProtoBufModel {
		new(obj?: any): ComposeChuanShiEquipReq;
		composeSubId?: number;
		
	}

	export interface ComposeChuanShiEquipReqBuilder {
		new(): ComposeChuanShiEquipReq;
		decode(buffer: ArrayBuffer) : ComposeChuanShiEquipReq;
		//decode(buffer: NodeBuffer) : ComposeChuanShiEquipReq;
		//decode(buffer: ByteArrayBuffer) : ComposeChuanShiEquipReq;
		decode64(buffer: string) : ComposeChuanShiEquipReq;
		
	}
}


declare module pb {

	var ComposeChuanShiEquipAck: ComposeChuanShiEquipAck;
	export interface ComposeChuanShiEquipAck extends ProtoBufModel {
		new(obj?: any): ComposeChuanShiEquipAck;
		composeSubId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface ComposeChuanShiEquipAckBuilder {
		new(): ComposeChuanShiEquipAck;
		decode(buffer: ArrayBuffer) : ComposeChuanShiEquipAck;
		//decode(buffer: NodeBuffer) : ComposeChuanShiEquipAck;
		//decode(buffer: ByteArrayBuffer) : ComposeChuanShiEquipAck;
		decode64(buffer: string) : ComposeChuanShiEquipAck;
		
	}
}


declare module pb {

	var CutTreasureUpLvReq: CutTreasureUpLvReq;
	export interface CutTreasureUpLvReq extends ProtoBufModel {
		new(obj?: any): CutTreasureUpLvReq;
		
	}

	export interface CutTreasureUpLvReqBuilder {
		new(): CutTreasureUpLvReq;
		decode(buffer: ArrayBuffer) : CutTreasureUpLvReq;
		//decode(buffer: NodeBuffer) : CutTreasureUpLvReq;
		//decode(buffer: ByteArrayBuffer) : CutTreasureUpLvReq;
		decode64(buffer: string) : CutTreasureUpLvReq;
		
	}
}


declare module pb {

	var CutTreasureUpLvAck: CutTreasureUpLvAck;
	export interface CutTreasureUpLvAck extends ProtoBufModel {
		new(obj?: any): CutTreasureUpLvAck;
		cutTreasureLv?: number;
		
	}

	export interface CutTreasureUpLvAckBuilder {
		new(): CutTreasureUpLvAck;
		decode(buffer: ArrayBuffer) : CutTreasureUpLvAck;
		//decode(buffer: NodeBuffer) : CutTreasureUpLvAck;
		//decode(buffer: ByteArrayBuffer) : CutTreasureUpLvAck;
		decode64(buffer: string) : CutTreasureUpLvAck;
		
	}
}


declare module pb {

	var CutTreasureUseReq: CutTreasureUseReq;
	export interface CutTreasureUseReq extends ProtoBufModel {
		new(obj?: any): CutTreasureUseReq;
		
	}

	export interface CutTreasureUseReqBuilder {
		new(): CutTreasureUseReq;
		decode(buffer: ArrayBuffer) : CutTreasureUseReq;
		//decode(buffer: NodeBuffer) : CutTreasureUseReq;
		//decode(buffer: ByteArrayBuffer) : CutTreasureUseReq;
		decode64(buffer: string) : CutTreasureUseReq;
		
	}
}


declare module pb {

	var CutTreasureUseAck: CutTreasureUseAck;
	export interface CutTreasureUseAck extends ProtoBufModel {
		new(obj?: any): CutTreasureUseAck;
		useTime?: number;
		cdEndTime?: number;
		
	}

	export interface CutTreasureUseAckBuilder {
		new(): CutTreasureUseAck;
		decode(buffer: ArrayBuffer) : CutTreasureUseAck;
		//decode(buffer: NodeBuffer) : CutTreasureUseAck;
		//decode(buffer: ByteArrayBuffer) : CutTreasureUseAck;
		decode64(buffer: string) : CutTreasureUseAck;
		
	}
}


declare module pb {

	var DaBaoEquipUpReq: DaBaoEquipUpReq;
	export interface DaBaoEquipUpReq extends ProtoBufModel {
		new(obj?: any): DaBaoEquipUpReq;
		equipType?: number;
		
	}

	export interface DaBaoEquipUpReqBuilder {
		new(): DaBaoEquipUpReq;
		decode(buffer: ArrayBuffer) : DaBaoEquipUpReq;
		//decode(buffer: NodeBuffer) : DaBaoEquipUpReq;
		//decode(buffer: ByteArrayBuffer) : DaBaoEquipUpReq;
		decode64(buffer: string) : DaBaoEquipUpReq;
		
	}
}


declare module pb {

	var DaBaoEquipUpAck: DaBaoEquipUpAck;
	export interface DaBaoEquipUpAck extends ProtoBufModel {
		new(obj?: any): DaBaoEquipUpAck;
		equipType?: number;
		lv?: number;
		
	}

	export interface DaBaoEquipUpAckBuilder {
		new(): DaBaoEquipUpAck;
		decode(buffer: ArrayBuffer) : DaBaoEquipUpAck;
		//decode(buffer: NodeBuffer) : DaBaoEquipUpAck;
		//decode(buffer: ByteArrayBuffer) : DaBaoEquipUpAck;
		decode64(buffer: string) : DaBaoEquipUpAck;
		
	}
}


declare module pb {

	var EnterDaBaoMysteryReq: EnterDaBaoMysteryReq;
	export interface EnterDaBaoMysteryReq extends ProtoBufModel {
		new(obj?: any): EnterDaBaoMysteryReq;
		stageId?: number;
		
	}

	export interface EnterDaBaoMysteryReqBuilder {
		new(): EnterDaBaoMysteryReq;
		decode(buffer: ArrayBuffer) : EnterDaBaoMysteryReq;
		//decode(buffer: NodeBuffer) : EnterDaBaoMysteryReq;
		//decode(buffer: ByteArrayBuffer) : EnterDaBaoMysteryReq;
		decode64(buffer: string) : EnterDaBaoMysteryReq;
		
	}
}


declare module pb {

	var DaBaoMysteryResultNtf: DaBaoMysteryResultNtf;
	export interface DaBaoMysteryResultNtf extends ProtoBufModel {
		new(obj?: any): DaBaoMysteryResultNtf;
		stageId?: number;
		result?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface DaBaoMysteryResultNtfBuilder {
		new(): DaBaoMysteryResultNtf;
		decode(buffer: ArrayBuffer) : DaBaoMysteryResultNtf;
		//decode(buffer: NodeBuffer) : DaBaoMysteryResultNtf;
		//decode(buffer: ByteArrayBuffer) : DaBaoMysteryResultNtf;
		decode64(buffer: string) : DaBaoMysteryResultNtf;
		
	}
}


declare module pb {

	var DaBaoMysteryEnergyItemBuyReq: DaBaoMysteryEnergyItemBuyReq;
	export interface DaBaoMysteryEnergyItemBuyReq extends ProtoBufModel {
		new(obj?: any): DaBaoMysteryEnergyItemBuyReq;
		shopId?: number;
		
	}

	export interface DaBaoMysteryEnergyItemBuyReqBuilder {
		new(): DaBaoMysteryEnergyItemBuyReq;
		decode(buffer: ArrayBuffer) : DaBaoMysteryEnergyItemBuyReq;
		//decode(buffer: NodeBuffer) : DaBaoMysteryEnergyItemBuyReq;
		//decode(buffer: ByteArrayBuffer) : DaBaoMysteryEnergyItemBuyReq;
		decode64(buffer: string) : DaBaoMysteryEnergyItemBuyReq;
		
	}
}


declare module pb {

	var DaBaoMysteryEnergyAddReq: DaBaoMysteryEnergyAddReq;
	export interface DaBaoMysteryEnergyAddReq extends ProtoBufModel {
		new(obj?: any): DaBaoMysteryEnergyAddReq;
		itemId?: number;
		
	}

	export interface DaBaoMysteryEnergyAddReqBuilder {
		new(): DaBaoMysteryEnergyAddReq;
		decode(buffer: ArrayBuffer) : DaBaoMysteryEnergyAddReq;
		//decode(buffer: NodeBuffer) : DaBaoMysteryEnergyAddReq;
		//decode(buffer: ByteArrayBuffer) : DaBaoMysteryEnergyAddReq;
		decode64(buffer: string) : DaBaoMysteryEnergyAddReq;
		
	}
}


declare module pb {

	var DaBaoMysteryEnergyAddAck: DaBaoMysteryEnergyAddAck;
	export interface DaBaoMysteryEnergyAddAck extends ProtoBufModel {
		new(obj?: any): DaBaoMysteryEnergyAddAck;
		itemId?: number;
		
	}

	export interface DaBaoMysteryEnergyAddAckBuilder {
		new(): DaBaoMysteryEnergyAddAck;
		decode(buffer: ArrayBuffer) : DaBaoMysteryEnergyAddAck;
		//decode(buffer: NodeBuffer) : DaBaoMysteryEnergyAddAck;
		//decode(buffer: ByteArrayBuffer) : DaBaoMysteryEnergyAddAck;
		decode64(buffer: string) : DaBaoMysteryEnergyAddAck;
		
	}
}


declare module pb {

	var DaBaoMysteryEnergyNtf: DaBaoMysteryEnergyNtf;
	export interface DaBaoMysteryEnergyNtf extends ProtoBufModel {
		new(obj?: any): DaBaoMysteryEnergyNtf;
		energy?: number;
		
	}

	export interface DaBaoMysteryEnergyNtfBuilder {
		new(): DaBaoMysteryEnergyNtf;
		decode(buffer: ArrayBuffer) : DaBaoMysteryEnergyNtf;
		//decode(buffer: NodeBuffer) : DaBaoMysteryEnergyNtf;
		//decode(buffer: ByteArrayBuffer) : DaBaoMysteryEnergyNtf;
		decode64(buffer: string) : DaBaoMysteryEnergyNtf;
		
	}
}


declare module pb {

	var EnterDailyActivityReq: EnterDailyActivityReq;
	export interface EnterDailyActivityReq extends ProtoBufModel {
		new(obj?: any): EnterDailyActivityReq;
		activityId?: number;
		stageId?: number;
		
	}

	export interface EnterDailyActivityReqBuilder {
		new(): EnterDailyActivityReq;
		decode(buffer: ArrayBuffer) : EnterDailyActivityReq;
		//decode(buffer: NodeBuffer) : EnterDailyActivityReq;
		//decode(buffer: ByteArrayBuffer) : EnterDailyActivityReq;
		decode64(buffer: string) : EnterDailyActivityReq;
		
	}
}


declare module pb {

	var DailyActivityResultNtf: DailyActivityResultNtf;
	export interface DailyActivityResultNtf extends ProtoBufModel {
		new(obj?: any): DailyActivityResultNtf;
		activityId?: number;
		
	}

	export interface DailyActivityResultNtfBuilder {
		new(): DailyActivityResultNtf;
		decode(buffer: ArrayBuffer) : DailyActivityResultNtf;
		//decode(buffer: NodeBuffer) : DailyActivityResultNtf;
		//decode(buffer: ByteArrayBuffer) : DailyActivityResultNtf;
		decode64(buffer: string) : DailyActivityResultNtf;
		
	}
}


declare module pb {

	var DailyActivityListReq: DailyActivityListReq;
	export interface DailyActivityListReq extends ProtoBufModel {
		new(obj?: any): DailyActivityListReq;
		
	}

	export interface DailyActivityListReqBuilder {
		new(): DailyActivityListReq;
		decode(buffer: ArrayBuffer) : DailyActivityListReq;
		//decode(buffer: NodeBuffer) : DailyActivityListReq;
		//decode(buffer: ByteArrayBuffer) : DailyActivityListReq;
		decode64(buffer: string) : DailyActivityListReq;
		
	}
}


declare module pb {

	var DailyActivityListAck: DailyActivityListAck;
	export interface DailyActivityListAck extends ProtoBufModel {
		new(obj?: any): DailyActivityListAck;
		list: DailyActivityInfo[];
		
	}

	export interface DailyActivityListAckBuilder {
		new(): DailyActivityListAck;
		decode(buffer: ArrayBuffer) : DailyActivityListAck;
		//decode(buffer: NodeBuffer) : DailyActivityListAck;
		//decode(buffer: ByteArrayBuffer) : DailyActivityListAck;
		decode64(buffer: string) : DailyActivityListAck;
		
	}
}


declare module pb {

	var DailyActivityInfo: DailyActivityInfo;
	export interface DailyActivityInfo extends ProtoBufModel {
		new(obj?: any): DailyActivityInfo;
		activityId?: number;
		startTime?: number;
		endTime?: number;
		
	}

	export interface DailyActivityInfoBuilder {
		new(): DailyActivityInfo;
		decode(buffer: ArrayBuffer) : DailyActivityInfo;
		//decode(buffer: NodeBuffer) : DailyActivityInfo;
		//decode(buffer: ByteArrayBuffer) : DailyActivityInfo;
		decode64(buffer: string) : DailyActivityInfo;
		
	}
}


declare module pb {

	var DailyPackBuyReq: DailyPackBuyReq;
	export interface DailyPackBuyReq extends ProtoBufModel {
		new(obj?: any): DailyPackBuyReq;
		id?: number;
		
	}

	export interface DailyPackBuyReqBuilder {
		new(): DailyPackBuyReq;
		decode(buffer: ArrayBuffer) : DailyPackBuyReq;
		//decode(buffer: NodeBuffer) : DailyPackBuyReq;
		//decode(buffer: ByteArrayBuffer) : DailyPackBuyReq;
		decode64(buffer: string) : DailyPackBuyReq;
		
	}
}


declare module pb {

	var DailyPackBuyAck: DailyPackBuyAck;
	export interface DailyPackBuyAck extends ProtoBufModel {
		new(obj?: any): DailyPackBuyAck;
		id?: number;
		buyNum?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface DailyPackBuyAckBuilder {
		new(): DailyPackBuyAck;
		decode(buffer: ArrayBuffer) : DailyPackBuyAck;
		//decode(buffer: NodeBuffer) : DailyPackBuyAck;
		//decode(buffer: ByteArrayBuffer) : DailyPackBuyAck;
		decode64(buffer: string) : DailyPackBuyAck;
		
	}
}


declare module pb {

	var DailyRankLoadReq: DailyRankLoadReq;
	export interface DailyRankLoadReq extends ProtoBufModel {
		new(obj?: any): DailyRankLoadReq;
		
	}

	export interface DailyRankLoadReqBuilder {
		new(): DailyRankLoadReq;
		decode(buffer: ArrayBuffer) : DailyRankLoadReq;
		//decode(buffer: NodeBuffer) : DailyRankLoadReq;
		//decode(buffer: ByteArrayBuffer) : DailyRankLoadReq;
		decode64(buffer: string) : DailyRankLoadReq;
		
	}
}


declare module pb {

	var DailyRankLoadAck: DailyRankLoadAck;
	export interface DailyRankLoadAck extends ProtoBufModel {
		new(obj?: any): DailyRankLoadAck;
		ranks: RankInfo[];
		self?: number;
		type?: number;
		selfScore?: number;
		haveGetIds: number[];
		buyGiftInfos: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface DailyRankLoadAckBuilder {
		new(): DailyRankLoadAck;
		decode(buffer: ArrayBuffer) : DailyRankLoadAck;
		//decode(buffer: NodeBuffer) : DailyRankLoadAck;
		//decode(buffer: ByteArrayBuffer) : DailyRankLoadAck;
		decode64(buffer: string) : DailyRankLoadAck;
		
	}
}


declare module pb {

	var DailyRankGetMarkRewardReq: DailyRankGetMarkRewardReq;
	export interface DailyRankGetMarkRewardReq extends ProtoBufModel {
		new(obj?: any): DailyRankGetMarkRewardReq;
		id?: number;
		
	}

	export interface DailyRankGetMarkRewardReqBuilder {
		new(): DailyRankGetMarkRewardReq;
		decode(buffer: ArrayBuffer) : DailyRankGetMarkRewardReq;
		//decode(buffer: NodeBuffer) : DailyRankGetMarkRewardReq;
		//decode(buffer: ByteArrayBuffer) : DailyRankGetMarkRewardReq;
		decode64(buffer: string) : DailyRankGetMarkRewardReq;
		
	}
}


declare module pb {

	var DailyRankGetMarkRewardAck: DailyRankGetMarkRewardAck;
	export interface DailyRankGetMarkRewardAck extends ProtoBufModel {
		new(obj?: any): DailyRankGetMarkRewardAck;
		id?: number;
		haveGetIds: number[];
		
	}

	export interface DailyRankGetMarkRewardAckBuilder {
		new(): DailyRankGetMarkRewardAck;
		decode(buffer: ArrayBuffer) : DailyRankGetMarkRewardAck;
		//decode(buffer: NodeBuffer) : DailyRankGetMarkRewardAck;
		//decode(buffer: ByteArrayBuffer) : DailyRankGetMarkRewardAck;
		decode64(buffer: string) : DailyRankGetMarkRewardAck;
		
	}
}


declare module pb {

	var DailyRankBuyGiftReq: DailyRankBuyGiftReq;
	export interface DailyRankBuyGiftReq extends ProtoBufModel {
		new(obj?: any): DailyRankBuyGiftReq;
		id?: number;
		
	}

	export interface DailyRankBuyGiftReqBuilder {
		new(): DailyRankBuyGiftReq;
		decode(buffer: ArrayBuffer) : DailyRankBuyGiftReq;
		//decode(buffer: NodeBuffer) : DailyRankBuyGiftReq;
		//decode(buffer: ByteArrayBuffer) : DailyRankBuyGiftReq;
		decode64(buffer: string) : DailyRankBuyGiftReq;
		
	}
}


declare module pb {

	var DailyRankBuyGiftAck: DailyRankBuyGiftAck;
	export interface DailyRankBuyGiftAck extends ProtoBufModel {
		new(obj?: any): DailyRankBuyGiftAck;
		id?: number;
		buyGiftInfos: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface DailyRankBuyGiftAckBuilder {
		new(): DailyRankBuyGiftAck;
		decode(buffer: ArrayBuffer) : DailyRankBuyGiftAck;
		//decode(buffer: NodeBuffer) : DailyRankBuyGiftAck;
		//decode(buffer: ByteArrayBuffer) : DailyRankBuyGiftAck;
		decode64(buffer: string) : DailyRankBuyGiftAck;
		
	}
}


declare module pb {

	var DailyTaskLoadReq: DailyTaskLoadReq;
	export interface DailyTaskLoadReq extends ProtoBufModel {
		new(obj?: any): DailyTaskLoadReq;
		
	}

	export interface DailyTaskLoadReqBuilder {
		new(): DailyTaskLoadReq;
		decode(buffer: ArrayBuffer) : DailyTaskLoadReq;
		//decode(buffer: NodeBuffer) : DailyTaskLoadReq;
		//decode(buffer: ByteArrayBuffer) : DailyTaskLoadReq;
		decode64(buffer: string) : DailyTaskLoadReq;
		
	}
}


declare module pb {

	var DailyTaskLoadAck: DailyTaskLoadAck;
	export interface DailyTaskLoadAck extends ProtoBufModel {
		new(obj?: any): DailyTaskLoadAck;
		dayExp?: number;
		weekExp?: number;
		dayResourcesBackExp?: number;
		haveChallengeTimes: HaveChallengeTime[];
		ResourcesBackInfos: ResourcesBackInfo[];
		GetDayRewardIds: number[];
		GetWeekRewardIds: number[];
		
	}

	export interface DailyTaskLoadAckBuilder {
		new(): DailyTaskLoadAck;
		decode(buffer: ArrayBuffer) : DailyTaskLoadAck;
		//decode(buffer: NodeBuffer) : DailyTaskLoadAck;
		//decode(buffer: ByteArrayBuffer) : DailyTaskLoadAck;
		decode64(buffer: string) : DailyTaskLoadAck;
		
	}
}


declare module pb {

	var BuyChallengeTimeReq: BuyChallengeTimeReq;
	export interface BuyChallengeTimeReq extends ProtoBufModel {
		new(obj?: any): BuyChallengeTimeReq;
		activityId?: number;
		
	}

	export interface BuyChallengeTimeReqBuilder {
		new(): BuyChallengeTimeReq;
		decode(buffer: ArrayBuffer) : BuyChallengeTimeReq;
		//decode(buffer: NodeBuffer) : BuyChallengeTimeReq;
		//decode(buffer: ByteArrayBuffer) : BuyChallengeTimeReq;
		decode64(buffer: string) : BuyChallengeTimeReq;
		
	}
}


declare module pb {

	var BuyChallengeTimeAck: BuyChallengeTimeAck;
	export interface BuyChallengeTimeAck extends ProtoBufModel {
		new(obj?: any): BuyChallengeTimeAck;
		activityId?: number;
		haveChallengeTime?: number;
		buyChallengTimes?: number;
		
	}

	export interface BuyChallengeTimeAckBuilder {
		new(): BuyChallengeTimeAck;
		decode(buffer: ArrayBuffer) : BuyChallengeTimeAck;
		//decode(buffer: NodeBuffer) : BuyChallengeTimeAck;
		//decode(buffer: ByteArrayBuffer) : BuyChallengeTimeAck;
		decode64(buffer: string) : BuyChallengeTimeAck;
		
	}
}


declare module pb {

	var GetExpReq: GetExpReq;
	export interface GetExpReq extends ProtoBufModel {
		new(obj?: any): GetExpReq;
		activityId?: number;
		
	}

	export interface GetExpReqBuilder {
		new(): GetExpReq;
		decode(buffer: ArrayBuffer) : GetExpReq;
		//decode(buffer: NodeBuffer) : GetExpReq;
		//decode(buffer: ByteArrayBuffer) : GetExpReq;
		decode64(buffer: string) : GetExpReq;
		
	}
}


declare module pb {

	var GetExpAck: GetExpAck;
	export interface GetExpAck extends ProtoBufModel {
		new(obj?: any): GetExpAck;
		dayExp?: number;
		weekExp?: number;
		dayResourcesBackExp?: number;
		isCanGetAward?: number;
		activityId?: number;
		
	}

	export interface GetExpAckBuilder {
		new(): GetExpAck;
		decode(buffer: ArrayBuffer) : GetExpAck;
		//decode(buffer: NodeBuffer) : GetExpAck;
		//decode(buffer: ByteArrayBuffer) : GetExpAck;
		decode64(buffer: string) : GetExpAck;
		
	}
}


declare module pb {

	var GetAwardReq: GetAwardReq;
	export interface GetAwardReq extends ProtoBufModel {
		new(obj?: any): GetAwardReq;
		id?: number;
		type?: number;
		
	}

	export interface GetAwardReqBuilder {
		new(): GetAwardReq;
		decode(buffer: ArrayBuffer) : GetAwardReq;
		//decode(buffer: NodeBuffer) : GetAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetAwardReq;
		decode64(buffer: string) : GetAwardReq;
		
	}
}


declare module pb {

	var GetAwardAck: GetAwardAck;
	export interface GetAwardAck extends ProtoBufModel {
		new(obj?: any): GetAwardAck;
		GetDayRewardIds: number[];
		GetWeekRewardIds: number[];
		
	}

	export interface GetAwardAckBuilder {
		new(): GetAwardAck;
		decode(buffer: ArrayBuffer) : GetAwardAck;
		//decode(buffer: NodeBuffer) : GetAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetAwardAck;
		decode64(buffer: string) : GetAwardAck;
		
	}
}


declare module pb {

	var ResourcesBackGetRewardReq: ResourcesBackGetRewardReq;
	export interface ResourcesBackGetRewardReq extends ProtoBufModel {
		new(obj?: any): ResourcesBackGetRewardReq;
		activityId?: number;
		backTimes?: number;
		useIngot?: number;
		
	}

	export interface ResourcesBackGetRewardReqBuilder {
		new(): ResourcesBackGetRewardReq;
		decode(buffer: ArrayBuffer) : ResourcesBackGetRewardReq;
		//decode(buffer: NodeBuffer) : ResourcesBackGetRewardReq;
		//decode(buffer: ByteArrayBuffer) : ResourcesBackGetRewardReq;
		decode64(buffer: string) : ResourcesBackGetRewardReq;
		
	}
}


declare module pb {

	var ResourcesBackGetRewardAck: ResourcesBackGetRewardAck;
	export interface ResourcesBackGetRewardAck extends ProtoBufModel {
		new(obj?: any): ResourcesBackGetRewardAck;
		ResourcesBackInfos: ResourcesBackInfo[];
		dayResourcesBackExp?: number;
		
	}

	export interface ResourcesBackGetRewardAckBuilder {
		new(): ResourcesBackGetRewardAck;
		decode(buffer: ArrayBuffer) : ResourcesBackGetRewardAck;
		//decode(buffer: NodeBuffer) : ResourcesBackGetRewardAck;
		//decode(buffer: ByteArrayBuffer) : ResourcesBackGetRewardAck;
		decode64(buffer: string) : ResourcesBackGetRewardAck;
		
	}
}


declare module pb {

	var ResourcesBackGetAllRewardReq: ResourcesBackGetAllRewardReq;
	export interface ResourcesBackGetAllRewardReq extends ProtoBufModel {
		new(obj?: any): ResourcesBackGetAllRewardReq;
		
	}

	export interface ResourcesBackGetAllRewardReqBuilder {
		new(): ResourcesBackGetAllRewardReq;
		decode(buffer: ArrayBuffer) : ResourcesBackGetAllRewardReq;
		//decode(buffer: NodeBuffer) : ResourcesBackGetAllRewardReq;
		//decode(buffer: ByteArrayBuffer) : ResourcesBackGetAllRewardReq;
		decode64(buffer: string) : ResourcesBackGetAllRewardReq;
		
	}
}


declare module pb {

	var ResourcesBackGetAllRewardAck: ResourcesBackGetAllRewardAck;
	export interface ResourcesBackGetAllRewardAck extends ProtoBufModel {
		new(obj?: any): ResourcesBackGetAllRewardAck;
		ResourcesBackInfos: ResourcesBackInfo[];
		dayResourcesBackExp?: number;
		
	}

	export interface ResourcesBackGetAllRewardAckBuilder {
		new(): ResourcesBackGetAllRewardAck;
		decode(buffer: ArrayBuffer) : ResourcesBackGetAllRewardAck;
		//decode(buffer: NodeBuffer) : ResourcesBackGetAllRewardAck;
		//decode(buffer: ByteArrayBuffer) : ResourcesBackGetAllRewardAck;
		decode64(buffer: string) : ResourcesBackGetAllRewardAck;
		
	}
}


declare module pb {

	var HaveChallengeTime: HaveChallengeTime;
	export interface HaveChallengeTime extends ProtoBufModel {
		new(obj?: any): HaveChallengeTime;
		activityId?: number;
		haveChallengeTime?: number;
		isGetAward?: number;
		buyChallengTimes?: number;
		
	}

	export interface HaveChallengeTimeBuilder {
		new(): HaveChallengeTime;
		decode(buffer: ArrayBuffer) : HaveChallengeTime;
		//decode(buffer: NodeBuffer) : HaveChallengeTime;
		//decode(buffer: ByteArrayBuffer) : HaveChallengeTime;
		decode64(buffer: string) : HaveChallengeTime;
		
	}
}


declare module pb {

	var ResourcesBackInfo: ResourcesBackInfo;
	export interface ResourcesBackInfo extends ProtoBufModel {
		new(obj?: any): ResourcesBackInfo;
		activityId?: number;
		residueChallengeTimes?: number;
		haveChallengeTimes?: number;
		
	}

	export interface ResourcesBackInfoBuilder {
		new(): ResourcesBackInfo;
		decode(buffer: ArrayBuffer) : ResourcesBackInfo;
		//decode(buffer: NodeBuffer) : ResourcesBackInfo;
		//decode(buffer: ByteArrayBuffer) : ResourcesBackInfo;
		decode64(buffer: string) : ResourcesBackInfo;
		
	}
}


declare module pb {

	var DarkPalaceLoadReq: DarkPalaceLoadReq;
	export interface DarkPalaceLoadReq extends ProtoBufModel {
		new(obj?: any): DarkPalaceLoadReq;
		floor?: number;
		
	}

	export interface DarkPalaceLoadReqBuilder {
		new(): DarkPalaceLoadReq;
		decode(buffer: ArrayBuffer) : DarkPalaceLoadReq;
		//decode(buffer: NodeBuffer) : DarkPalaceLoadReq;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceLoadReq;
		decode64(buffer: string) : DarkPalaceLoadReq;
		
	}
}


declare module pb {

	var DarkPalaceLoadAck: DarkPalaceLoadAck;
	export interface DarkPalaceLoadAck extends ProtoBufModel {
		new(obj?: any): DarkPalaceLoadAck;
		darkPalaceBoss: DarkPalaceBossNtf[];
		
	}

	export interface DarkPalaceLoadAckBuilder {
		new(): DarkPalaceLoadAck;
		decode(buffer: ArrayBuffer) : DarkPalaceLoadAck;
		//decode(buffer: NodeBuffer) : DarkPalaceLoadAck;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceLoadAck;
		decode64(buffer: string) : DarkPalaceLoadAck;
		
	}
}


declare module pb {

	var EnterDarkPalaceFightReq: EnterDarkPalaceFightReq;
	export interface EnterDarkPalaceFightReq extends ProtoBufModel {
		new(obj?: any): EnterDarkPalaceFightReq;
		stageId?: number;
		
	}

	export interface EnterDarkPalaceFightReqBuilder {
		new(): EnterDarkPalaceFightReq;
		decode(buffer: ArrayBuffer) : EnterDarkPalaceFightReq;
		//decode(buffer: NodeBuffer) : EnterDarkPalaceFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterDarkPalaceFightReq;
		decode64(buffer: string) : EnterDarkPalaceFightReq;
		
	}
}


declare module pb {

	var DarkPalaceFightResultNtf: DarkPalaceFightResultNtf;
	export interface DarkPalaceFightResultNtf extends ProtoBufModel {
		new(obj?: any): DarkPalaceFightResultNtf;
		stageId?: number;
		result?: number;
		dareNum?: number;
		goods?: GoodsChangeNtf;
		winner?: BriefUserInfo;
		isHelper?: boolean;
		helpNum?: number;
		
	}

	export interface DarkPalaceFightResultNtfBuilder {
		new(): DarkPalaceFightResultNtf;
		decode(buffer: ArrayBuffer) : DarkPalaceFightResultNtf;
		//decode(buffer: NodeBuffer) : DarkPalaceFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceFightResultNtf;
		decode64(buffer: string) : DarkPalaceFightResultNtf;
		
	}
}


declare module pb {

	var DarkPalaceBuyNumReq: DarkPalaceBuyNumReq;
	export interface DarkPalaceBuyNumReq extends ProtoBufModel {
		new(obj?: any): DarkPalaceBuyNumReq;
		use?: boolean;
		buyNum?: number;
		
	}

	export interface DarkPalaceBuyNumReqBuilder {
		new(): DarkPalaceBuyNumReq;
		decode(buffer: ArrayBuffer) : DarkPalaceBuyNumReq;
		//decode(buffer: NodeBuffer) : DarkPalaceBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceBuyNumReq;
		decode64(buffer: string) : DarkPalaceBuyNumReq;
		
	}
}


declare module pb {

	var DarkPalaceBuyNumAck: DarkPalaceBuyNumAck;
	export interface DarkPalaceBuyNumAck extends ProtoBufModel {
		new(obj?: any): DarkPalaceBuyNumAck;
		buyNum?: number;
		
	}

	export interface DarkPalaceBuyNumAckBuilder {
		new(): DarkPalaceBuyNumAck;
		decode(buffer: ArrayBuffer) : DarkPalaceBuyNumAck;
		//decode(buffer: NodeBuffer) : DarkPalaceBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceBuyNumAck;
		decode64(buffer: string) : DarkPalaceBuyNumAck;
		
	}
}


declare module pb {

	var DarkPalaceBossNtf: DarkPalaceBossNtf;
	export interface DarkPalaceBossNtf extends ProtoBufModel {
		new(obj?: any): DarkPalaceBossNtf;
		stageId?: number;
		blood?: number;
		reliveTime?: number;
		
	}

	export interface DarkPalaceBossNtfBuilder {
		new(): DarkPalaceBossNtf;
		decode(buffer: ArrayBuffer) : DarkPalaceBossNtf;
		//decode(buffer: NodeBuffer) : DarkPalaceBossNtf;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceBossNtf;
		decode64(buffer: string) : DarkPalaceBossNtf;
		
	}
}


declare module pb {

	var EnterDarkPalaceHelpFightReq: EnterDarkPalaceHelpFightReq;
	export interface EnterDarkPalaceHelpFightReq extends ProtoBufModel {
		new(obj?: any): EnterDarkPalaceHelpFightReq;
		
	}

	export interface EnterDarkPalaceHelpFightReqBuilder {
		new(): EnterDarkPalaceHelpFightReq;
		decode(buffer: ArrayBuffer) : EnterDarkPalaceHelpFightReq;
		//decode(buffer: NodeBuffer) : EnterDarkPalaceHelpFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterDarkPalaceHelpFightReq;
		decode64(buffer: string) : EnterDarkPalaceHelpFightReq;
		
	}
}


declare module pb {

	var DarkPalaceHelpFightResultNtf: DarkPalaceHelpFightResultNtf;
	export interface DarkPalaceHelpFightResultNtf extends ProtoBufModel {
		new(obj?: any): DarkPalaceHelpFightResultNtf;
		
	}

	export interface DarkPalaceHelpFightResultNtfBuilder {
		new(): DarkPalaceHelpFightResultNtf;
		decode(buffer: ArrayBuffer) : DarkPalaceHelpFightResultNtf;
		//decode(buffer: NodeBuffer) : DarkPalaceHelpFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceHelpFightResultNtf;
		decode64(buffer: string) : DarkPalaceHelpFightResultNtf;
		
	}
}


declare module pb {

	var DarkPalaceDareNumNtf: DarkPalaceDareNumNtf;
	export interface DarkPalaceDareNumNtf extends ProtoBufModel {
		new(obj?: any): DarkPalaceDareNumNtf;
		dareNum?: number;
		
	}

	export interface DarkPalaceDareNumNtfBuilder {
		new(): DarkPalaceDareNumNtf;
		decode(buffer: ArrayBuffer) : DarkPalaceDareNumNtf;
		//decode(buffer: NodeBuffer) : DarkPalaceDareNumNtf;
		//decode(buffer: ByteArrayBuffer) : DarkPalaceDareNumNtf;
		decode64(buffer: string) : DarkPalaceDareNumNtf;
		
	}
}


declare module pb {

	var DictateUpReq: DictateUpReq;
	export interface DictateUpReq extends ProtoBufModel {
		new(obj?: any): DictateUpReq;
		heroIndex?: number;
		body?: number;
		
	}

	export interface DictateUpReqBuilder {
		new(): DictateUpReq;
		decode(buffer: ArrayBuffer) : DictateUpReq;
		//decode(buffer: NodeBuffer) : DictateUpReq;
		//decode(buffer: ByteArrayBuffer) : DictateUpReq;
		decode64(buffer: string) : DictateUpReq;
		
	}
}


declare module pb {

	var DictateUpAck: DictateUpAck;
	export interface DictateUpAck extends ProtoBufModel {
		new(obj?: any): DictateUpAck;
		heroIndex?: number;
		dictateInfo?: DictateInfo;
		
	}

	export interface DictateUpAckBuilder {
		new(): DictateUpAck;
		decode(buffer: ArrayBuffer) : DictateUpAck;
		//decode(buffer: NodeBuffer) : DictateUpAck;
		//decode(buffer: ByteArrayBuffer) : DictateUpAck;
		decode64(buffer: string) : DictateUpAck;
		
	}
}


declare module pb {

	var DragonEquipUpLvReq: DragonEquipUpLvReq;
	export interface DragonEquipUpLvReq extends ProtoBufModel {
		new(obj?: any): DragonEquipUpLvReq;
		heroIndex?: number;
		id?: number;
		
	}

	export interface DragonEquipUpLvReqBuilder {
		new(): DragonEquipUpLvReq;
		decode(buffer: ArrayBuffer) : DragonEquipUpLvReq;
		//decode(buffer: NodeBuffer) : DragonEquipUpLvReq;
		//decode(buffer: ByteArrayBuffer) : DragonEquipUpLvReq;
		decode64(buffer: string) : DragonEquipUpLvReq;
		
	}
}


declare module pb {

	var DragonEquipUpLvAck: DragonEquipUpLvAck;
	export interface DragonEquipUpLvAck extends ProtoBufModel {
		new(obj?: any): DragonEquipUpLvAck;
		heroIndex?: number;
		id?: number;
		lv?: number;
		
	}

	export interface DragonEquipUpLvAckBuilder {
		new(): DragonEquipUpLvAck;
		decode(buffer: ArrayBuffer) : DragonEquipUpLvAck;
		//decode(buffer: NodeBuffer) : DragonEquipUpLvAck;
		//decode(buffer: ByteArrayBuffer) : DragonEquipUpLvAck;
		decode64(buffer: string) : DragonEquipUpLvAck;
		
	}
}


declare module pb {

	var ElfFeedReq: ElfFeedReq;
	export interface ElfFeedReq extends ProtoBufModel {
		new(obj?: any): ElfFeedReq;
		positions: number[];
		
	}

	export interface ElfFeedReqBuilder {
		new(): ElfFeedReq;
		decode(buffer: ArrayBuffer) : ElfFeedReq;
		//decode(buffer: NodeBuffer) : ElfFeedReq;
		//decode(buffer: ByteArrayBuffer) : ElfFeedReq;
		decode64(buffer: string) : ElfFeedReq;
		
	}
}


declare module pb {

	var ElfFeedAck: ElfFeedAck;
	export interface ElfFeedAck extends ProtoBufModel {
		new(obj?: any): ElfFeedAck;
		lv?: number;
		exp?: number;
		goods?: GoodsChangeNtf;
		receiveLimit: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ElfFeedAckBuilder {
		new(): ElfFeedAck;
		decode(buffer: ArrayBuffer) : ElfFeedAck;
		//decode(buffer: NodeBuffer) : ElfFeedAck;
		//decode(buffer: ByteArrayBuffer) : ElfFeedAck;
		decode64(buffer: string) : ElfFeedAck;
		
	}
}


declare module pb {

	var ElfSkillUpLvReq: ElfSkillUpLvReq;
	export interface ElfSkillUpLvReq extends ProtoBufModel {
		new(obj?: any): ElfSkillUpLvReq;
		skillId?: number;
		
	}

	export interface ElfSkillUpLvReqBuilder {
		new(): ElfSkillUpLvReq;
		decode(buffer: ArrayBuffer) : ElfSkillUpLvReq;
		//decode(buffer: NodeBuffer) : ElfSkillUpLvReq;
		//decode(buffer: ByteArrayBuffer) : ElfSkillUpLvReq;
		decode64(buffer: string) : ElfSkillUpLvReq;
		
	}
}


declare module pb {

	var ElfSkillUpLvAck: ElfSkillUpLvAck;
	export interface ElfSkillUpLvAck extends ProtoBufModel {
		new(obj?: any): ElfSkillUpLvAck;
		skillId?: number;
		skillLv?: number;
		skillBag: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ElfSkillUpLvAckBuilder {
		new(): ElfSkillUpLvAck;
		decode(buffer: ArrayBuffer) : ElfSkillUpLvAck;
		//decode(buffer: NodeBuffer) : ElfSkillUpLvAck;
		//decode(buffer: ByteArrayBuffer) : ElfSkillUpLvAck;
		decode64(buffer: string) : ElfSkillUpLvAck;
		
	}
}


declare module pb {

	var ElfSkillChangePosReq: ElfSkillChangePosReq;
	export interface ElfSkillChangePosReq extends ProtoBufModel {
		new(obj?: any): ElfSkillChangePosReq;
		skillId?: number;
		pos?: number;
		
	}

	export interface ElfSkillChangePosReqBuilder {
		new(): ElfSkillChangePosReq;
		decode(buffer: ArrayBuffer) : ElfSkillChangePosReq;
		//decode(buffer: NodeBuffer) : ElfSkillChangePosReq;
		//decode(buffer: ByteArrayBuffer) : ElfSkillChangePosReq;
		decode64(buffer: string) : ElfSkillChangePosReq;
		
	}
}


declare module pb {

	var ElfSkillChangePosAck: ElfSkillChangePosAck;
	export interface ElfSkillChangePosAck extends ProtoBufModel {
		new(obj?: any): ElfSkillChangePosAck;
		skillBag: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ElfSkillChangePosAckBuilder {
		new(): ElfSkillChangePosAck;
		decode(buffer: ArrayBuffer) : ElfSkillChangePosAck;
		//decode(buffer: NodeBuffer) : ElfSkillChangePosAck;
		//decode(buffer: ByteArrayBuffer) : ElfSkillChangePosAck;
		decode64(buffer: string) : ElfSkillChangePosAck;
		
	}
}


declare module pb {

	var EquipChangeReq: EquipChangeReq;
	export interface EquipChangeReq extends ProtoBufModel {
		new(obj?: any): EquipChangeReq;
		heroIndex?: number;
		pos?: number;
		bagPos?: number;
		
	}

	export interface EquipChangeReqBuilder {
		new(): EquipChangeReq;
		decode(buffer: ArrayBuffer) : EquipChangeReq;
		//decode(buffer: NodeBuffer) : EquipChangeReq;
		//decode(buffer: ByteArrayBuffer) : EquipChangeReq;
		decode64(buffer: string) : EquipChangeReq;
		
	}
}


declare module pb {

	var EquipChangeAck: EquipChangeAck;
	export interface EquipChangeAck extends ProtoBufModel {
		new(obj?: any): EquipChangeAck;
		heroIndex?: number;
		equips: dcodeIO.ProtoBuf.Map<number,EquipUnit>;
		
	}

	export interface EquipChangeAckBuilder {
		new(): EquipChangeAck;
		decode(buffer: ArrayBuffer) : EquipChangeAck;
		//decode(buffer: NodeBuffer) : EquipChangeAck;
		//decode(buffer: ByteArrayBuffer) : EquipChangeAck;
		decode64(buffer: string) : EquipChangeAck;
		
	}
}


declare module pb {

	var EquipLockReq: EquipLockReq;
	export interface EquipLockReq extends ProtoBufModel {
		new(obj?: any): EquipLockReq;
		pos?: number;
		
	}

	export interface EquipLockReqBuilder {
		new(): EquipLockReq;
		decode(buffer: ArrayBuffer) : EquipLockReq;
		//decode(buffer: NodeBuffer) : EquipLockReq;
		//decode(buffer: ByteArrayBuffer) : EquipLockReq;
		decode64(buffer: string) : EquipLockReq;
		
	}
}


declare module pb {

	var EquipLockAck: EquipLockAck;
	export interface EquipLockAck extends ProtoBufModel {
		new(obj?: any): EquipLockAck;
		pos?: number;
		lock?: boolean;
		
	}

	export interface EquipLockAckBuilder {
		new(): EquipLockAck;
		decode(buffer: ArrayBuffer) : EquipLockAck;
		//decode(buffer: NodeBuffer) : EquipLockAck;
		//decode(buffer: ByteArrayBuffer) : EquipLockAck;
		decode64(buffer: string) : EquipLockAck;
		
	}
}


declare module pb {

	var EquipStrengthenReq: EquipStrengthenReq;
	export interface EquipStrengthenReq extends ProtoBufModel {
		new(obj?: any): EquipStrengthenReq;
		heroIndex?: number;
		pos?: number;
		
	}

	export interface EquipStrengthenReqBuilder {
		new(): EquipStrengthenReq;
		decode(buffer: ArrayBuffer) : EquipStrengthenReq;
		//decode(buffer: NodeBuffer) : EquipStrengthenReq;
		//decode(buffer: ByteArrayBuffer) : EquipStrengthenReq;
		decode64(buffer: string) : EquipStrengthenReq;
		
	}
}


declare module pb {

	var EquipStrengthenAck: EquipStrengthenAck;
	export interface EquipStrengthenAck extends ProtoBufModel {
		new(obj?: any): EquipStrengthenAck;
		heroIndex?: number;
		equipGrids?: EquipGrid;
		isUp?: boolean;
		
	}

	export interface EquipStrengthenAckBuilder {
		new(): EquipStrengthenAck;
		decode(buffer: ArrayBuffer) : EquipStrengthenAck;
		//decode(buffer: NodeBuffer) : EquipStrengthenAck;
		//decode(buffer: ByteArrayBuffer) : EquipStrengthenAck;
		decode64(buffer: string) : EquipStrengthenAck;
		
	}
}


declare module pb {

	var EquipRemoveReq: EquipRemoveReq;
	export interface EquipRemoveReq extends ProtoBufModel {
		new(obj?: any): EquipRemoveReq;
		heroIndex?: number;
		pos?: number;
		
	}

	export interface EquipRemoveReqBuilder {
		new(): EquipRemoveReq;
		decode(buffer: ArrayBuffer) : EquipRemoveReq;
		//decode(buffer: NodeBuffer) : EquipRemoveReq;
		//decode(buffer: ByteArrayBuffer) : EquipRemoveReq;
		decode64(buffer: string) : EquipRemoveReq;
		
	}
}


declare module pb {

	var EquipRemoveAck: EquipRemoveAck;
	export interface EquipRemoveAck extends ProtoBufModel {
		new(obj?: any): EquipRemoveAck;
		heroIndex?: number;
		pos?: number;
		
	}

	export interface EquipRemoveAckBuilder {
		new(): EquipRemoveAck;
		decode(buffer: ArrayBuffer) : EquipRemoveAck;
		//decode(buffer: NodeBuffer) : EquipRemoveAck;
		//decode(buffer: ByteArrayBuffer) : EquipRemoveAck;
		decode64(buffer: string) : EquipRemoveAck;
		
	}
}


declare module pb {

	var EquipBlessNtf: EquipBlessNtf;
	export interface EquipBlessNtf extends ProtoBufModel {
		new(obj?: any): EquipBlessNtf;
		heroIndex?: number;
		lucky?: number;
		res?: number;
		equip?: EquipUnit;
		
	}

	export interface EquipBlessNtfBuilder {
		new(): EquipBlessNtf;
		decode(buffer: ArrayBuffer) : EquipBlessNtf;
		//decode(buffer: NodeBuffer) : EquipBlessNtf;
		//decode(buffer: ByteArrayBuffer) : EquipBlessNtf;
		decode64(buffer: string) : EquipBlessNtf;
		
	}
}


declare module pb {

	var EquipStrengthenAutoReq: EquipStrengthenAutoReq;
	export interface EquipStrengthenAutoReq extends ProtoBufModel {
		new(obj?: any): EquipStrengthenAutoReq;
		heroIndex?: number;
		isBreak?: boolean;
		
	}

	export interface EquipStrengthenAutoReqBuilder {
		new(): EquipStrengthenAutoReq;
		decode(buffer: ArrayBuffer) : EquipStrengthenAutoReq;
		//decode(buffer: NodeBuffer) : EquipStrengthenAutoReq;
		//decode(buffer: ByteArrayBuffer) : EquipStrengthenAutoReq;
		decode64(buffer: string) : EquipStrengthenAutoReq;
		
	}
}


declare module pb {

	var EquipStrengthenAutoAck: EquipStrengthenAutoAck;
	export interface EquipStrengthenAutoAck extends ProtoBufModel {
		new(obj?: any): EquipStrengthenAutoAck;
		heroIndex?: number;
		equipGrids: EquipGrid[];
		
	}

	export interface EquipStrengthenAutoAckBuilder {
		new(): EquipStrengthenAutoAck;
		decode(buffer: ArrayBuffer) : EquipStrengthenAutoAck;
		//decode(buffer: NodeBuffer) : EquipStrengthenAutoAck;
		//decode(buffer: ByteArrayBuffer) : EquipStrengthenAutoAck;
		decode64(buffer: string) : EquipStrengthenAutoAck;
		
	}
}


declare module pb {

	var ExpPoolLoadReq: ExpPoolLoadReq;
	export interface ExpPoolLoadReq extends ProtoBufModel {
		new(obj?: any): ExpPoolLoadReq;
		
	}

	export interface ExpPoolLoadReqBuilder {
		new(): ExpPoolLoadReq;
		decode(buffer: ArrayBuffer) : ExpPoolLoadReq;
		//decode(buffer: NodeBuffer) : ExpPoolLoadReq;
		//decode(buffer: ByteArrayBuffer) : ExpPoolLoadReq;
		decode64(buffer: string) : ExpPoolLoadReq;
		
	}
}


declare module pb {

	var ExpPoolLoadAck: ExpPoolLoadAck;
	export interface ExpPoolLoadAck extends ProtoBufModel {
		new(obj?: any): ExpPoolLoadAck;
		worlLvl?: number;
		expPool?: number;
		
	}

	export interface ExpPoolLoadAckBuilder {
		new(): ExpPoolLoadAck;
		decode(buffer: ArrayBuffer) : ExpPoolLoadAck;
		//decode(buffer: NodeBuffer) : ExpPoolLoadAck;
		//decode(buffer: ByteArrayBuffer) : ExpPoolLoadAck;
		decode64(buffer: string) : ExpPoolLoadAck;
		
	}
}


declare module pb {

	var ExpPoolUpGradeReq: ExpPoolUpGradeReq;
	export interface ExpPoolUpGradeReq extends ProtoBufModel {
		new(obj?: any): ExpPoolUpGradeReq;
		index?: number;
		times?: number;
		
	}

	export interface ExpPoolUpGradeReqBuilder {
		new(): ExpPoolUpGradeReq;
		decode(buffer: ArrayBuffer) : ExpPoolUpGradeReq;
		//decode(buffer: NodeBuffer) : ExpPoolUpGradeReq;
		//decode(buffer: ByteArrayBuffer) : ExpPoolUpGradeReq;
		decode64(buffer: string) : ExpPoolUpGradeReq;
		
	}
}


declare module pb {

	var ExpPoolUpGradeAck: ExpPoolUpGradeAck;
	export interface ExpPoolUpGradeAck extends ProtoBufModel {
		new(obj?: any): ExpPoolUpGradeAck;
		heroIndex?: number;
		Lvl?: number;
		
	}

	export interface ExpPoolUpGradeAckBuilder {
		new(): ExpPoolUpGradeAck;
		decode(buffer: ArrayBuffer) : ExpPoolUpGradeAck;
		//decode(buffer: NodeBuffer) : ExpPoolUpGradeAck;
		//decode(buffer: ByteArrayBuffer) : ExpPoolUpGradeAck;
		decode64(buffer: string) : ExpPoolUpGradeAck;
		
	}
}


declare module pb {

	var ExpStageFightReq: ExpStageFightReq;
	export interface ExpStageFightReq extends ProtoBufModel {
		new(obj?: any): ExpStageFightReq;
		stageId?: number;
		
	}

	export interface ExpStageFightReqBuilder {
		new(): ExpStageFightReq;
		decode(buffer: ArrayBuffer) : ExpStageFightReq;
		//decode(buffer: NodeBuffer) : ExpStageFightReq;
		//decode(buffer: ByteArrayBuffer) : ExpStageFightReq;
		decode64(buffer: string) : ExpStageFightReq;
		
	}
}


declare module pb {

	var ExpStageDareNumNtf: ExpStageDareNumNtf;
	export interface ExpStageDareNumNtf extends ProtoBufModel {
		new(obj?: any): ExpStageDareNumNtf;
		dareNum?: number;
		
	}

	export interface ExpStageDareNumNtfBuilder {
		new(): ExpStageDareNumNtf;
		decode(buffer: ArrayBuffer) : ExpStageDareNumNtf;
		//decode(buffer: NodeBuffer) : ExpStageDareNumNtf;
		//decode(buffer: ByteArrayBuffer) : ExpStageDareNumNtf;
		decode64(buffer: string) : ExpStageDareNumNtf;
		
	}
}


declare module pb {

	var ExpStageFightResultNtf: ExpStageFightResultNtf;
	export interface ExpStageFightResultNtf extends ProtoBufModel {
		new(obj?: any): ExpStageFightResultNtf;
		stageId?: number;
		exp?: number;
		monsterNum?: number;
		grade?: number;
		layer?: number;
		isFree?: boolean;
		
	}

	export interface ExpStageFightResultNtfBuilder {
		new(): ExpStageFightResultNtf;
		decode(buffer: ArrayBuffer) : ExpStageFightResultNtf;
		//decode(buffer: NodeBuffer) : ExpStageFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : ExpStageFightResultNtf;
		decode64(buffer: string) : ExpStageFightResultNtf;
		
	}
}


declare module pb {

	var ExpStageDoubleReq: ExpStageDoubleReq;
	export interface ExpStageDoubleReq extends ProtoBufModel {
		new(obj?: any): ExpStageDoubleReq;
		stageId?: number;
		
	}

	export interface ExpStageDoubleReqBuilder {
		new(): ExpStageDoubleReq;
		decode(buffer: ArrayBuffer) : ExpStageDoubleReq;
		//decode(buffer: NodeBuffer) : ExpStageDoubleReq;
		//decode(buffer: ByteArrayBuffer) : ExpStageDoubleReq;
		decode64(buffer: string) : ExpStageDoubleReq;
		
	}
}


declare module pb {

	var ExpStageDoubleAck: ExpStageDoubleAck;
	export interface ExpStageDoubleAck extends ProtoBufModel {
		new(obj?: any): ExpStageDoubleAck;
		stageId?: number;
		exp?: number;
		
	}

	export interface ExpStageDoubleAckBuilder {
		new(): ExpStageDoubleAck;
		decode(buffer: ArrayBuffer) : ExpStageDoubleAck;
		//decode(buffer: NodeBuffer) : ExpStageDoubleAck;
		//decode(buffer: ByteArrayBuffer) : ExpStageDoubleAck;
		decode64(buffer: string) : ExpStageDoubleAck;
		
	}
}


declare module pb {

	var ExpStageRefNtf: ExpStageRefNtf;
	export interface ExpStageRefNtf extends ProtoBufModel {
		new(obj?: any): ExpStageRefNtf;
		isRef?: boolean;
		
	}

	export interface ExpStageRefNtfBuilder {
		new(): ExpStageRefNtf;
		decode(buffer: ArrayBuffer) : ExpStageRefNtf;
		//decode(buffer: NodeBuffer) : ExpStageRefNtf;
		//decode(buffer: ByteArrayBuffer) : ExpStageRefNtf;
		decode64(buffer: string) : ExpStageRefNtf;
		
	}
}


declare module pb {

	var ExpStageBuyNumNtf: ExpStageBuyNumNtf;
	export interface ExpStageBuyNumNtf extends ProtoBufModel {
		new(obj?: any): ExpStageBuyNumNtf;
		buyNum?: number;
		
	}

	export interface ExpStageBuyNumNtfBuilder {
		new(): ExpStageBuyNumNtf;
		decode(buffer: ArrayBuffer) : ExpStageBuyNumNtf;
		//decode(buffer: NodeBuffer) : ExpStageBuyNumNtf;
		//decode(buffer: ByteArrayBuffer) : ExpStageBuyNumNtf;
		decode64(buffer: string) : ExpStageBuyNumNtf;
		
	}
}


declare module pb {

	var ExpStageSweepReq: ExpStageSweepReq;
	export interface ExpStageSweepReq extends ProtoBufModel {
		new(obj?: any): ExpStageSweepReq;
		stageId?: number;
		
	}

	export interface ExpStageSweepReqBuilder {
		new(): ExpStageSweepReq;
		decode(buffer: ArrayBuffer) : ExpStageSweepReq;
		//decode(buffer: NodeBuffer) : ExpStageSweepReq;
		//decode(buffer: ByteArrayBuffer) : ExpStageSweepReq;
		decode64(buffer: string) : ExpStageSweepReq;
		
	}
}


declare module pb {

	var ExpStageSweepAck: ExpStageSweepAck;
	export interface ExpStageSweepAck extends ProtoBufModel {
		new(obj?: any): ExpStageSweepAck;
		stageId?: number;
		exp?: number;
		monsterNum?: number;
		grade?: number;
		dareNum?: number;
		
	}

	export interface ExpStageSweepAckBuilder {
		new(): ExpStageSweepAck;
		decode(buffer: ArrayBuffer) : ExpStageSweepAck;
		//decode(buffer: NodeBuffer) : ExpStageSweepAck;
		//decode(buffer: ByteArrayBuffer) : ExpStageSweepAck;
		decode64(buffer: string) : ExpStageSweepAck;
		
	}
}


declare module pb {

	var ExpStageBuyNumReq: ExpStageBuyNumReq;
	export interface ExpStageBuyNumReq extends ProtoBufModel {
		new(obj?: any): ExpStageBuyNumReq;
		use?: boolean;
		
	}

	export interface ExpStageBuyNumReqBuilder {
		new(): ExpStageBuyNumReq;
		decode(buffer: ArrayBuffer) : ExpStageBuyNumReq;
		//decode(buffer: NodeBuffer) : ExpStageBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : ExpStageBuyNumReq;
		decode64(buffer: string) : ExpStageBuyNumReq;
		
	}
}


declare module pb {

	var ExpStageBuyNumAck: ExpStageBuyNumAck;
	export interface ExpStageBuyNumAck extends ProtoBufModel {
		new(obj?: any): ExpStageBuyNumAck;
		buyNum?: number;
		
	}

	export interface ExpStageBuyNumAckBuilder {
		new(): ExpStageBuyNumAck;
		decode(buffer: ArrayBuffer) : ExpStageBuyNumAck;
		//decode(buffer: NodeBuffer) : ExpStageBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : ExpStageBuyNumAck;
		decode64(buffer: string) : ExpStageBuyNumAck;
		
	}
}


declare module pb {

	var FabaoActiveReq: FabaoActiveReq;
	export interface FabaoActiveReq extends ProtoBufModel {
		new(obj?: any): FabaoActiveReq;
		id?: number;
		
	}

	export interface FabaoActiveReqBuilder {
		new(): FabaoActiveReq;
		decode(buffer: ArrayBuffer) : FabaoActiveReq;
		//decode(buffer: NodeBuffer) : FabaoActiveReq;
		//decode(buffer: ByteArrayBuffer) : FabaoActiveReq;
		decode64(buffer: string) : FabaoActiveReq;
		
	}
}


declare module pb {

	var FabaoActiveAck: FabaoActiveAck;
	export interface FabaoActiveAck extends ProtoBufModel {
		new(obj?: any): FabaoActiveAck;
		fabao?: Fabao;
		
	}

	export interface FabaoActiveAckBuilder {
		new(): FabaoActiveAck;
		decode(buffer: ArrayBuffer) : FabaoActiveAck;
		//decode(buffer: NodeBuffer) : FabaoActiveAck;
		//decode(buffer: ByteArrayBuffer) : FabaoActiveAck;
		decode64(buffer: string) : FabaoActiveAck;
		
	}
}


declare module pb {

	var FabaoUpLevelReq: FabaoUpLevelReq;
	export interface FabaoUpLevelReq extends ProtoBufModel {
		new(obj?: any): FabaoUpLevelReq;
		id?: number;
		
	}

	export interface FabaoUpLevelReqBuilder {
		new(): FabaoUpLevelReq;
		decode(buffer: ArrayBuffer) : FabaoUpLevelReq;
		//decode(buffer: NodeBuffer) : FabaoUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : FabaoUpLevelReq;
		decode64(buffer: string) : FabaoUpLevelReq;
		
	}
}


declare module pb {

	var FabaoUpLevelAck: FabaoUpLevelAck;
	export interface FabaoUpLevelAck extends ProtoBufModel {
		new(obj?: any): FabaoUpLevelAck;
		fabao?: Fabao;
		
	}

	export interface FabaoUpLevelAckBuilder {
		new(): FabaoUpLevelAck;
		decode(buffer: ArrayBuffer) : FabaoUpLevelAck;
		//decode(buffer: NodeBuffer) : FabaoUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : FabaoUpLevelAck;
		decode64(buffer: string) : FabaoUpLevelAck;
		
	}
}


declare module pb {

	var FabaoSkillActiveReq: FabaoSkillActiveReq;
	export interface FabaoSkillActiveReq extends ProtoBufModel {
		new(obj?: any): FabaoSkillActiveReq;
		id?: number;
		skillId?: number;
		
	}

	export interface FabaoSkillActiveReqBuilder {
		new(): FabaoSkillActiveReq;
		decode(buffer: ArrayBuffer) : FabaoSkillActiveReq;
		//decode(buffer: NodeBuffer) : FabaoSkillActiveReq;
		//decode(buffer: ByteArrayBuffer) : FabaoSkillActiveReq;
		decode64(buffer: string) : FabaoSkillActiveReq;
		
	}
}


declare module pb {

	var FabaoSkillActiveAck: FabaoSkillActiveAck;
	export interface FabaoSkillActiveAck extends ProtoBufModel {
		new(obj?: any): FabaoSkillActiveAck;
		fabao?: Fabao;
		
	}

	export interface FabaoSkillActiveAckBuilder {
		new(): FabaoSkillActiveAck;
		decode(buffer: ArrayBuffer) : FabaoSkillActiveAck;
		//decode(buffer: NodeBuffer) : FabaoSkillActiveAck;
		//decode(buffer: ByteArrayBuffer) : FabaoSkillActiveAck;
		decode64(buffer: string) : FabaoSkillActiveAck;
		
	}
}


declare module pb {

	var FashionUpLevelReq: FashionUpLevelReq;
	export interface FashionUpLevelReq extends ProtoBufModel {
		new(obj?: any): FashionUpLevelReq;
		heroIndex?: number;
		fashionId?: number;
		
	}

	export interface FashionUpLevelReqBuilder {
		new(): FashionUpLevelReq;
		decode(buffer: ArrayBuffer) : FashionUpLevelReq;
		//decode(buffer: NodeBuffer) : FashionUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : FashionUpLevelReq;
		decode64(buffer: string) : FashionUpLevelReq;
		
	}
}


declare module pb {

	var FashionUpLevelAck: FashionUpLevelAck;
	export interface FashionUpLevelAck extends ProtoBufModel {
		new(obj?: any): FashionUpLevelAck;
		heroIndex?: number;
		fashion?: Fashion;
		
	}

	export interface FashionUpLevelAckBuilder {
		new(): FashionUpLevelAck;
		decode(buffer: ArrayBuffer) : FashionUpLevelAck;
		//decode(buffer: NodeBuffer) : FashionUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : FashionUpLevelAck;
		decode64(buffer: string) : FashionUpLevelAck;
		
	}
}


declare module pb {

	var FashionWearReq: FashionWearReq;
	export interface FashionWearReq extends ProtoBufModel {
		new(obj?: any): FashionWearReq;
		heroIndex?: number;
		fashionId?: number;
		isWear?: boolean;
		
	}

	export interface FashionWearReqBuilder {
		new(): FashionWearReq;
		decode(buffer: ArrayBuffer) : FashionWearReq;
		//decode(buffer: NodeBuffer) : FashionWearReq;
		//decode(buffer: ByteArrayBuffer) : FashionWearReq;
		decode64(buffer: string) : FashionWearReq;
		
	}
}


declare module pb {

	var FashionWearAck: FashionWearAck;
	export interface FashionWearAck extends ProtoBufModel {
		new(obj?: any): FashionWearAck;
		heroIndex?: number;
		wearFashionId?: number;
		isWear?: boolean;
		
	}

	export interface FashionWearAckBuilder {
		new(): FashionWearAck;
		decode(buffer: ArrayBuffer) : FashionWearAck;
		//decode(buffer: NodeBuffer) : FashionWearAck;
		//decode(buffer: ByteArrayBuffer) : FashionWearAck;
		decode64(buffer: string) : FashionWearAck;
		
	}
}


declare module pb {

	var FieldBossLoadReq: FieldBossLoadReq;
	export interface FieldBossLoadReq extends ProtoBufModel {
		new(obj?: any): FieldBossLoadReq;
		area?: number;
		
	}

	export interface FieldBossLoadReqBuilder {
		new(): FieldBossLoadReq;
		decode(buffer: ArrayBuffer) : FieldBossLoadReq;
		//decode(buffer: NodeBuffer) : FieldBossLoadReq;
		//decode(buffer: ByteArrayBuffer) : FieldBossLoadReq;
		decode64(buffer: string) : FieldBossLoadReq;
		
	}
}


declare module pb {

	var FieldBossLoadAck: FieldBossLoadAck;
	export interface FieldBossLoadAck extends ProtoBufModel {
		new(obj?: any): FieldBossLoadAck;
		fieldBoss: FieldBossNtf[];
		
	}

	export interface FieldBossLoadAckBuilder {
		new(): FieldBossLoadAck;
		decode(buffer: ArrayBuffer) : FieldBossLoadAck;
		//decode(buffer: NodeBuffer) : FieldBossLoadAck;
		//decode(buffer: ByteArrayBuffer) : FieldBossLoadAck;
		decode64(buffer: string) : FieldBossLoadAck;
		
	}
}


declare module pb {

	var EnterFieldBossFightReq: EnterFieldBossFightReq;
	export interface EnterFieldBossFightReq extends ProtoBufModel {
		new(obj?: any): EnterFieldBossFightReq;
		stageId?: number;
		
	}

	export interface EnterFieldBossFightReqBuilder {
		new(): EnterFieldBossFightReq;
		decode(buffer: ArrayBuffer) : EnterFieldBossFightReq;
		//decode(buffer: NodeBuffer) : EnterFieldBossFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterFieldBossFightReq;
		decode64(buffer: string) : EnterFieldBossFightReq;
		
	}
}


declare module pb {

	var EnterFieldBossFightAck: EnterFieldBossFightAck;
	export interface EnterFieldBossFightAck extends ProtoBufModel {
		new(obj?: any): EnterFieldBossFightAck;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface EnterFieldBossFightAckBuilder {
		new(): EnterFieldBossFightAck;
		decode(buffer: ArrayBuffer) : EnterFieldBossFightAck;
		//decode(buffer: NodeBuffer) : EnterFieldBossFightAck;
		//decode(buffer: ByteArrayBuffer) : EnterFieldBossFightAck;
		decode64(buffer: string) : EnterFieldBossFightAck;
		
	}
}


declare module pb {

	var FieldBossFightResultNtf: FieldBossFightResultNtf;
	export interface FieldBossFightResultNtf extends ProtoBufModel {
		new(obj?: any): FieldBossFightResultNtf;
		stageId?: number;
		result?: number;
		dareNum?: number;
		winner?: BriefUserInfo;
		goods?: GoodsChangeNtf;
		
	}

	export interface FieldBossFightResultNtfBuilder {
		new(): FieldBossFightResultNtf;
		decode(buffer: ArrayBuffer) : FieldBossFightResultNtf;
		//decode(buffer: NodeBuffer) : FieldBossFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : FieldBossFightResultNtf;
		decode64(buffer: string) : FieldBossFightResultNtf;
		
	}
}


declare module pb {

	var FieldBossBuyNumReq: FieldBossBuyNumReq;
	export interface FieldBossBuyNumReq extends ProtoBufModel {
		new(obj?: any): FieldBossBuyNumReq;
		use?: boolean;
		buyNum?: number;
		
	}

	export interface FieldBossBuyNumReqBuilder {
		new(): FieldBossBuyNumReq;
		decode(buffer: ArrayBuffer) : FieldBossBuyNumReq;
		//decode(buffer: NodeBuffer) : FieldBossBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : FieldBossBuyNumReq;
		decode64(buffer: string) : FieldBossBuyNumReq;
		
	}
}


declare module pb {

	var FieldBossBuyNumAck: FieldBossBuyNumAck;
	export interface FieldBossBuyNumAck extends ProtoBufModel {
		new(obj?: any): FieldBossBuyNumAck;
		buyNum?: number;
		
	}

	export interface FieldBossBuyNumAckBuilder {
		new(): FieldBossBuyNumAck;
		decode(buffer: ArrayBuffer) : FieldBossBuyNumAck;
		//decode(buffer: NodeBuffer) : FieldBossBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : FieldBossBuyNumAck;
		decode64(buffer: string) : FieldBossBuyNumAck;
		
	}
}


declare module pb {

	var FieldBossFirstReq: FieldBossFirstReq;
	export interface FieldBossFirstReq extends ProtoBufModel {
		new(obj?: any): FieldBossFirstReq;
		
	}

	export interface FieldBossFirstReqBuilder {
		new(): FieldBossFirstReq;
		decode(buffer: ArrayBuffer) : FieldBossFirstReq;
		//decode(buffer: NodeBuffer) : FieldBossFirstReq;
		//decode(buffer: ByteArrayBuffer) : FieldBossFirstReq;
		decode64(buffer: string) : FieldBossFirstReq;
		
	}
}


declare module pb {

	var FieldBossFirstAck: FieldBossFirstAck;
	export interface FieldBossFirstAck extends ProtoBufModel {
		new(obj?: any): FieldBossFirstAck;
		firstReceive?: boolean;
		goods?: GoodsChangeNtf;
		
	}

	export interface FieldBossFirstAckBuilder {
		new(): FieldBossFirstAck;
		decode(buffer: ArrayBuffer) : FieldBossFirstAck;
		//decode(buffer: NodeBuffer) : FieldBossFirstAck;
		//decode(buffer: ByteArrayBuffer) : FieldBossFirstAck;
		decode64(buffer: string) : FieldBossFirstAck;
		
	}
}


declare module pb {

	var FieldBossNtf: FieldBossNtf;
	export interface FieldBossNtf extends ProtoBufModel {
		new(obj?: any): FieldBossNtf;
		stageId?: number;
		blood?: number;
		reliveTime?: number;
		area?: number;
		
	}

	export interface FieldBossNtfBuilder {
		new(): FieldBossNtf;
		decode(buffer: ArrayBuffer) : FieldBossNtf;
		//decode(buffer: NodeBuffer) : FieldBossNtf;
		//decode(buffer: ByteArrayBuffer) : FieldBossNtf;
		decode64(buffer: string) : FieldBossNtf;
		
	}
}


declare module pb {

	var FieldFightLoadReq: FieldFightLoadReq;
	export interface FieldFightLoadReq extends ProtoBufModel {
		new(obj?: any): FieldFightLoadReq;
		
	}

	export interface FieldFightLoadReqBuilder {
		new(): FieldFightLoadReq;
		decode(buffer: ArrayBuffer) : FieldFightLoadReq;
		//decode(buffer: NodeBuffer) : FieldFightLoadReq;
		//decode(buffer: ByteArrayBuffer) : FieldFightLoadReq;
		decode64(buffer: string) : FieldFightLoadReq;
		
	}
}


declare module pb {

	var FieldFightLoadAck: FieldFightLoadAck;
	export interface FieldFightLoadAck extends ProtoBufModel {
		new(obj?: any): FieldFightLoadAck;
		listInfo: FieldFightListInfo[];
		myCombat?: number;
		remainChallengeTimes?: number;
		todayCanBuyTimes?: number;
		changeRivalCd?: number;
		BeatBackOwnUserInfo: FieldFightBeatBackUserInfo[];
		isCheckNoPromptState?: number;
		
	}

	export interface FieldFightLoadAckBuilder {
		new(): FieldFightLoadAck;
		decode(buffer: ArrayBuffer) : FieldFightLoadAck;
		//decode(buffer: NodeBuffer) : FieldFightLoadAck;
		//decode(buffer: ByteArrayBuffer) : FieldFightLoadAck;
		decode64(buffer: string) : FieldFightLoadAck;
		
	}
}


declare module pb {

	var EnterFieldFightReq: EnterFieldFightReq;
	export interface EnterFieldFightReq extends ProtoBufModel {
		new(obj?: any): EnterFieldFightReq;
		challengeUid?: number;
		isBeatBack?: number;
		
	}

	export interface EnterFieldFightReqBuilder {
		new(): EnterFieldFightReq;
		decode(buffer: ArrayBuffer) : EnterFieldFightReq;
		//decode(buffer: NodeBuffer) : EnterFieldFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterFieldFightReq;
		decode64(buffer: string) : EnterFieldFightReq;
		
	}
}


declare module pb {

	var FieldFightNtf: FieldFightNtf;
	export interface FieldFightNtf extends ProtoBufModel {
		new(obj?: any): FieldFightNtf;
		result?: number;
		goods?: GoodsChangeNtf;
		remainChallengeTimes?: number;
		listInfo: FieldFightListInfo[];
		BeatBackOwnUserInfo: FieldFightBeatBackUserInfo[];
		
	}

	export interface FieldFightNtfBuilder {
		new(): FieldFightNtf;
		decode(buffer: ArrayBuffer) : FieldFightNtf;
		//decode(buffer: NodeBuffer) : FieldFightNtf;
		//decode(buffer: ByteArrayBuffer) : FieldFightNtf;
		decode64(buffer: string) : FieldFightNtf;
		
	}
}


declare module pb {

	var BuyFieldFightChallengeTimesReq: BuyFieldFightChallengeTimesReq;
	export interface BuyFieldFightChallengeTimesReq extends ProtoBufModel {
		new(obj?: any): BuyFieldFightChallengeTimesReq;
		
	}

	export interface BuyFieldFightChallengeTimesReqBuilder {
		new(): BuyFieldFightChallengeTimesReq;
		decode(buffer: ArrayBuffer) : BuyFieldFightChallengeTimesReq;
		//decode(buffer: NodeBuffer) : BuyFieldFightChallengeTimesReq;
		//decode(buffer: ByteArrayBuffer) : BuyFieldFightChallengeTimesReq;
		decode64(buffer: string) : BuyFieldFightChallengeTimesReq;
		
	}
}


declare module pb {

	var BuyFieldFightChallengeTimesAck: BuyFieldFightChallengeTimesAck;
	export interface BuyFieldFightChallengeTimesAck extends ProtoBufModel {
		new(obj?: any): BuyFieldFightChallengeTimesAck;
		residueTimes?: number;
		todayCanBuyTimes?: number;
		
	}

	export interface BuyFieldFightChallengeTimesAckBuilder {
		new(): BuyFieldFightChallengeTimesAck;
		decode(buffer: ArrayBuffer) : BuyFieldFightChallengeTimesAck;
		//decode(buffer: NodeBuffer) : BuyFieldFightChallengeTimesAck;
		//decode(buffer: ByteArrayBuffer) : BuyFieldFightChallengeTimesAck;
		decode64(buffer: string) : BuyFieldFightChallengeTimesAck;
		
	}
}


declare module pb {

	var RefFieldFightRivalUserReq: RefFieldFightRivalUserReq;
	export interface RefFieldFightRivalUserReq extends ProtoBufModel {
		new(obj?: any): RefFieldFightRivalUserReq;
		
	}

	export interface RefFieldFightRivalUserReqBuilder {
		new(): RefFieldFightRivalUserReq;
		decode(buffer: ArrayBuffer) : RefFieldFightRivalUserReq;
		//decode(buffer: NodeBuffer) : RefFieldFightRivalUserReq;
		//decode(buffer: ByteArrayBuffer) : RefFieldFightRivalUserReq;
		decode64(buffer: string) : RefFieldFightRivalUserReq;
		
	}
}


declare module pb {

	var RefFieldFightRivalUserAck: RefFieldFightRivalUserAck;
	export interface RefFieldFightRivalUserAck extends ProtoBufModel {
		new(obj?: any): RefFieldFightRivalUserAck;
		listInfo: FieldFightListInfo[];
		changeRivalCd?: number;
		
	}

	export interface RefFieldFightRivalUserAckBuilder {
		new(): RefFieldFightRivalUserAck;
		decode(buffer: ArrayBuffer) : RefFieldFightRivalUserAck;
		//decode(buffer: NodeBuffer) : RefFieldFightRivalUserAck;
		//decode(buffer: ByteArrayBuffer) : RefFieldFightRivalUserAck;
		decode64(buffer: string) : RefFieldFightRivalUserAck;
		
	}
}


declare module pb {

	var FieldFightListInfo: FieldFightListInfo;
	export interface FieldFightListInfo extends ProtoBufModel {
		new(obj?: any): FieldFightListInfo;
		difficultyLevel?: number;
		avatar?: string;
		nickName?: string;
		combat?: number;
		userLv?: number;
		rewardInfos: itemUnit[];
		userId?: number;
		job?: number;
		sex?: number;
		
	}

	export interface FieldFightListInfoBuilder {
		new(): FieldFightListInfo;
		decode(buffer: ArrayBuffer) : FieldFightListInfo;
		//decode(buffer: NodeBuffer) : FieldFightListInfo;
		//decode(buffer: ByteArrayBuffer) : FieldFightListInfo;
		decode64(buffer: string) : FieldFightListInfo;
		
	}
}


declare module pb {

	var FieldFightBeatBackUserInfo: FieldFightBeatBackUserInfo;
	export interface FieldFightBeatBackUserInfo extends ProtoBufModel {
		new(obj?: any): FieldFightBeatBackUserInfo;
		userId?: number;
		nickName?: string;
		
	}

	export interface FieldFightBeatBackUserInfoBuilder {
		new(): FieldFightBeatBackUserInfo;
		decode(buffer: ArrayBuffer) : FieldFightBeatBackUserInfo;
		//decode(buffer: NodeBuffer) : FieldFightBeatBackUserInfo;
		//decode(buffer: ByteArrayBuffer) : FieldFightBeatBackUserInfo;
		decode64(buffer: string) : FieldFightBeatBackUserInfo;
		
	}
}


declare module pb {

	var BeatBackInfoNtf: BeatBackInfoNtf;
	export interface BeatBackInfoNtf extends ProtoBufModel {
		new(obj?: any): BeatBackInfoNtf;
		BeatBackOwnUserInfo: FieldFightBeatBackUserInfo[];
		
	}

	export interface BeatBackInfoNtfBuilder {
		new(): BeatBackInfoNtf;
		decode(buffer: ArrayBuffer) : BeatBackInfoNtf;
		//decode(buffer: NodeBuffer) : BeatBackInfoNtf;
		//decode(buffer: ByteArrayBuffer) : BeatBackInfoNtf;
		decode64(buffer: string) : BeatBackInfoNtf;
		
	}
}


declare module pb {

	var EnterPublicCopyReq: EnterPublicCopyReq;
	export interface EnterPublicCopyReq extends ProtoBufModel {
		new(obj?: any): EnterPublicCopyReq;
		stageId?: number;
		condition?: number;
		
	}

	export interface EnterPublicCopyReqBuilder {
		new(): EnterPublicCopyReq;
		decode(buffer: ArrayBuffer) : EnterPublicCopyReq;
		//decode(buffer: NodeBuffer) : EnterPublicCopyReq;
		//decode(buffer: ByteArrayBuffer) : EnterPublicCopyReq;
		decode64(buffer: string) : EnterPublicCopyReq;
		
	}
}


declare module pb {

	var EnterPublicCopyAck: EnterPublicCopyAck;
	export interface EnterPublicCopyAck extends ProtoBufModel {
		new(obj?: any): EnterPublicCopyAck;
		failReason?: string;
		
	}

	export interface EnterPublicCopyAckBuilder {
		new(): EnterPublicCopyAck;
		decode(buffer: ArrayBuffer) : EnterPublicCopyAck;
		//decode(buffer: NodeBuffer) : EnterPublicCopyAck;
		//decode(buffer: ByteArrayBuffer) : EnterPublicCopyAck;
		decode64(buffer: string) : EnterPublicCopyAck;
		
	}
}


declare module pb {

	var FightItemUseReq: FightItemUseReq;
	export interface FightItemUseReq extends ProtoBufModel {
		new(obj?: any): FightItemUseReq;
		itemId?: number;
		
	}

	export interface FightItemUseReqBuilder {
		new(): FightItemUseReq;
		decode(buffer: ArrayBuffer) : FightItemUseReq;
		//decode(buffer: NodeBuffer) : FightItemUseReq;
		//decode(buffer: ByteArrayBuffer) : FightItemUseReq;
		decode64(buffer: string) : FightItemUseReq;
		
	}
}


declare module pb {

	var FightItemUseAck: FightItemUseAck;
	export interface FightItemUseAck extends ProtoBufModel {
		new(obj?: any): FightItemUseAck;
		itemId?: number;
		useTimes?: number;
		
	}

	export interface FightItemUseAckBuilder {
		new(): FightItemUseAck;
		decode(buffer: ArrayBuffer) : FightItemUseAck;
		//decode(buffer: NodeBuffer) : FightItemUseAck;
		//decode(buffer: ByteArrayBuffer) : FightItemUseAck;
		decode64(buffer: string) : FightItemUseAck;
		
	}
}


declare module pb {

	var FightUserReliveReq: FightUserReliveReq;
	export interface FightUserReliveReq extends ProtoBufModel {
		new(obj?: any): FightUserReliveReq;
		safeRelive?: boolean;
		
	}

	export interface FightUserReliveReqBuilder {
		new(): FightUserReliveReq;
		decode(buffer: ArrayBuffer) : FightUserReliveReq;
		//decode(buffer: NodeBuffer) : FightUserReliveReq;
		//decode(buffer: ByteArrayBuffer) : FightUserReliveReq;
		decode64(buffer: string) : FightUserReliveReq;
		
	}
}


declare module pb {

	var FightUserReliveAck: FightUserReliveAck;
	export interface FightUserReliveAck extends ProtoBufModel {
		new(obj?: any): FightUserReliveAck;
		reliveTimes?: number;
		reliveByIngotTimes?: number;
		
	}

	export interface FightUserReliveAckBuilder {
		new(): FightUserReliveAck;
		decode(buffer: ArrayBuffer) : FightUserReliveAck;
		//decode(buffer: NodeBuffer) : FightUserReliveAck;
		//decode(buffer: ByteArrayBuffer) : FightUserReliveAck;
		decode64(buffer: string) : FightUserReliveAck;
		
	}
}


declare module pb {

	var FightPickUpReq: FightPickUpReq;
	export interface FightPickUpReq extends ProtoBufModel {
		new(obj?: any): FightPickUpReq;
		dropItemIds: number[];
		
	}

	export interface FightPickUpReqBuilder {
		new(): FightPickUpReq;
		decode(buffer: ArrayBuffer) : FightPickUpReq;
		//decode(buffer: NodeBuffer) : FightPickUpReq;
		//decode(buffer: ByteArrayBuffer) : FightPickUpReq;
		decode64(buffer: string) : FightPickUpReq;
		
	}
}


declare module pb {

	var FightPickUpAck: FightPickUpAck;
	export interface FightPickUpAck extends ProtoBufModel {
		new(obj?: any): FightPickUpAck;
		items: dcodeIO.ProtoBuf.Map<number,itemUnit>;
		isOneKey?: boolean;
		inMail?: boolean;
		err?: ErrorAck;
		
	}

	export interface FightPickUpAckBuilder {
		new(): FightPickUpAck;
		decode(buffer: ArrayBuffer) : FightPickUpAck;
		//decode(buffer: NodeBuffer) : FightPickUpAck;
		//decode(buffer: ByteArrayBuffer) : FightPickUpAck;
		decode64(buffer: string) : FightPickUpAck;
		
	}
}


declare module pb {

	var FightGetCheerNumReq: FightGetCheerNumReq;
	export interface FightGetCheerNumReq extends ProtoBufModel {
		new(obj?: any): FightGetCheerNumReq;
		
	}

	export interface FightGetCheerNumReqBuilder {
		new(): FightGetCheerNumReq;
		decode(buffer: ArrayBuffer) : FightGetCheerNumReq;
		//decode(buffer: NodeBuffer) : FightGetCheerNumReq;
		//decode(buffer: ByteArrayBuffer) : FightGetCheerNumReq;
		decode64(buffer: string) : FightGetCheerNumReq;
		
	}
}


declare module pb {

	var FightGetCheerNumNtf: FightGetCheerNumNtf;
	export interface FightGetCheerNumNtf extends ProtoBufModel {
		new(obj?: any): FightGetCheerNumNtf;
		cheerNum?: number;
		guildCheerNum?: number;
		
	}

	export interface FightGetCheerNumNtfBuilder {
		new(): FightGetCheerNumNtf;
		decode(buffer: ArrayBuffer) : FightGetCheerNumNtf;
		//decode(buffer: NodeBuffer) : FightGetCheerNumNtf;
		//decode(buffer: ByteArrayBuffer) : FightGetCheerNumNtf;
		decode64(buffer: string) : FightGetCheerNumNtf;
		
	}
}


declare module pb {

	var FightCheerReq: FightCheerReq;
	export interface FightCheerReq extends ProtoBufModel {
		new(obj?: any): FightCheerReq;
		
	}

	export interface FightCheerReqBuilder {
		new(): FightCheerReq;
		decode(buffer: ArrayBuffer) : FightCheerReq;
		//decode(buffer: NodeBuffer) : FightCheerReq;
		//decode(buffer: ByteArrayBuffer) : FightCheerReq;
		decode64(buffer: string) : FightCheerReq;
		
	}
}


declare module pb {

	var FightCheerAck: FightCheerAck;
	export interface FightCheerAck extends ProtoBufModel {
		new(obj?: any): FightCheerAck;
		cheerNum?: number;
		guildCheerNum?: number;
		
	}

	export interface FightCheerAckBuilder {
		new(): FightCheerAck;
		decode(buffer: ArrayBuffer) : FightCheerAck;
		//decode(buffer: NodeBuffer) : FightCheerAck;
		//decode(buffer: ByteArrayBuffer) : FightCheerAck;
		decode64(buffer: string) : FightCheerAck;
		
	}
}


declare module pb {

	var FightCheerNumChangeNtf: FightCheerNumChangeNtf;
	export interface FightCheerNumChangeNtf extends ProtoBufModel {
		new(obj?: any): FightCheerNumChangeNtf;
		guildId?: number;
		guildCheerNum?: number;
		
	}

	export interface FightCheerNumChangeNtfBuilder {
		new(): FightCheerNumChangeNtf;
		decode(buffer: ArrayBuffer) : FightCheerNumChangeNtf;
		//decode(buffer: NodeBuffer) : FightCheerNumChangeNtf;
		//decode(buffer: ByteArrayBuffer) : FightCheerNumChangeNtf;
		decode64(buffer: string) : FightCheerNumChangeNtf;
		
	}
}


declare module pb {

	var FightPotionReq: FightPotionReq;
	export interface FightPotionReq extends ProtoBufModel {
		new(obj?: any): FightPotionReq;
		
	}

	export interface FightPotionReqBuilder {
		new(): FightPotionReq;
		decode(buffer: ArrayBuffer) : FightPotionReq;
		//decode(buffer: NodeBuffer) : FightPotionReq;
		//decode(buffer: ByteArrayBuffer) : FightPotionReq;
		decode64(buffer: string) : FightPotionReq;
		
	}
}


declare module pb {

	var FightPotionAck: FightPotionAck;
	export interface FightPotionAck extends ProtoBufModel {
		new(obj?: any): FightPotionAck;
		coolDown?: number;
		serverTime?: number;
		endTime?: number;
		
	}

	export interface FightPotionAckBuilder {
		new(): FightPotionAck;
		decode(buffer: ArrayBuffer) : FightPotionAck;
		//decode(buffer: NodeBuffer) : FightPotionAck;
		//decode(buffer: ByteArrayBuffer) : FightPotionAck;
		decode64(buffer: string) : FightPotionAck;
		
	}
}


declare module pb {

	var FightPotionCdReq: FightPotionCdReq;
	export interface FightPotionCdReq extends ProtoBufModel {
		new(obj?: any): FightPotionCdReq;
		
	}

	export interface FightPotionCdReqBuilder {
		new(): FightPotionCdReq;
		decode(buffer: ArrayBuffer) : FightPotionCdReq;
		//decode(buffer: NodeBuffer) : FightPotionCdReq;
		//decode(buffer: ByteArrayBuffer) : FightPotionCdReq;
		decode64(buffer: string) : FightPotionCdReq;
		
	}
}


declare module pb {

	var FightPotionCdAck: FightPotionCdAck;
	export interface FightPotionCdAck extends ProtoBufModel {
		new(obj?: any): FightPotionCdAck;
		coolDown?: number;
		serverTime?: number;
		endTime?: number;
		
	}

	export interface FightPotionCdAckBuilder {
		new(): FightPotionCdAck;
		decode(buffer: ArrayBuffer) : FightPotionCdAck;
		//decode(buffer: NodeBuffer) : FightPotionCdAck;
		//decode(buffer: ByteArrayBuffer) : FightPotionCdAck;
		decode64(buffer: string) : FightPotionCdAck;
		
	}
}


declare module pb {

	var FightCollectionReq: FightCollectionReq;
	export interface FightCollectionReq extends ProtoBufModel {
		new(obj?: any): FightCollectionReq;
		objId?: number;
		
	}

	export interface FightCollectionReqBuilder {
		new(): FightCollectionReq;
		decode(buffer: ArrayBuffer) : FightCollectionReq;
		//decode(buffer: NodeBuffer) : FightCollectionReq;
		//decode(buffer: ByteArrayBuffer) : FightCollectionReq;
		decode64(buffer: string) : FightCollectionReq;
		
	}
}


declare module pb {

	var FightCollectionAck: FightCollectionAck;
	export interface FightCollectionAck extends ProtoBufModel {
		new(obj?: any): FightCollectionAck;
		startTime?: number;
		endTime?: number;
		objId?: number;
		
	}

	export interface FightCollectionAckBuilder {
		new(): FightCollectionAck;
		decode(buffer: ArrayBuffer) : FightCollectionAck;
		//decode(buffer: NodeBuffer) : FightCollectionAck;
		//decode(buffer: ByteArrayBuffer) : FightCollectionAck;
		decode64(buffer: string) : FightCollectionAck;
		
	}
}


declare module pb {

	var FightCollectionNtf: FightCollectionNtf;
	export interface FightCollectionNtf extends ProtoBufModel {
		new(obj?: any): FightCollectionNtf;
		goods?: GoodsChangeNtf;
		
	}

	export interface FightCollectionNtfBuilder {
		new(): FightCollectionNtf;
		decode(buffer: ArrayBuffer) : FightCollectionNtf;
		//decode(buffer: NodeBuffer) : FightCollectionNtf;
		//decode(buffer: ByteArrayBuffer) : FightCollectionNtf;
		decode64(buffer: string) : FightCollectionNtf;
		
	}
}


declare module pb {

	var FightCollectionCancelReq: FightCollectionCancelReq;
	export interface FightCollectionCancelReq extends ProtoBufModel {
		new(obj?: any): FightCollectionCancelReq;
		objId?: number;
		
	}

	export interface FightCollectionCancelReqBuilder {
		new(): FightCollectionCancelReq;
		decode(buffer: ArrayBuffer) : FightCollectionCancelReq;
		//decode(buffer: NodeBuffer) : FightCollectionCancelReq;
		//decode(buffer: ByteArrayBuffer) : FightCollectionCancelReq;
		decode64(buffer: string) : FightCollectionCancelReq;
		
	}
}


declare module pb {

	var FightCollectionCancelAck: FightCollectionCancelAck;
	export interface FightCollectionCancelAck extends ProtoBufModel {
		new(obj?: any): FightCollectionCancelAck;
		result?: boolean;
		
	}

	export interface FightCollectionCancelAckBuilder {
		new(): FightCollectionCancelAck;
		decode(buffer: ArrayBuffer) : FightCollectionCancelAck;
		//decode(buffer: NodeBuffer) : FightCollectionCancelAck;
		//decode(buffer: ByteArrayBuffer) : FightCollectionCancelAck;
		decode64(buffer: string) : FightCollectionCancelAck;
		
	}
}


declare module pb {

	var FightApplyForHelpReq: FightApplyForHelpReq;
	export interface FightApplyForHelpReq extends ProtoBufModel {
		new(obj?: any): FightApplyForHelpReq;
		helpUserId?: number;
		source?: number;
		
	}

	export interface FightApplyForHelpReqBuilder {
		new(): FightApplyForHelpReq;
		decode(buffer: ArrayBuffer) : FightApplyForHelpReq;
		//decode(buffer: NodeBuffer) : FightApplyForHelpReq;
		//decode(buffer: ByteArrayBuffer) : FightApplyForHelpReq;
		decode64(buffer: string) : FightApplyForHelpReq;
		
	}
}


declare module pb {

	var FightApplyForHelpAck: FightApplyForHelpAck;
	export interface FightApplyForHelpAck extends ProtoBufModel {
		new(obj?: any): FightApplyForHelpAck;
		result?: number;
		failReason?: string;
		helpUserId?: number;
		
	}

	export interface FightApplyForHelpAckBuilder {
		new(): FightApplyForHelpAck;
		decode(buffer: ArrayBuffer) : FightApplyForHelpAck;
		//decode(buffer: NodeBuffer) : FightApplyForHelpAck;
		//decode(buffer: ByteArrayBuffer) : FightApplyForHelpAck;
		decode64(buffer: string) : FightApplyForHelpAck;
		
	}
}


declare module pb {

	var FightApplyForHelpNtf: FightApplyForHelpNtf;
	export interface FightApplyForHelpNtf extends ProtoBufModel {
		new(obj?: any): FightApplyForHelpNtf;
		reqHelpUserId?: number;
		reqHelpName?: string;
		stageId?: number;
		source?: number;
		reqHelpUser?: BriefUserInfo;
		
	}

	export interface FightApplyForHelpNtfBuilder {
		new(): FightApplyForHelpNtf;
		decode(buffer: ArrayBuffer) : FightApplyForHelpNtf;
		//decode(buffer: NodeBuffer) : FightApplyForHelpNtf;
		//decode(buffer: ByteArrayBuffer) : FightApplyForHelpNtf;
		decode64(buffer: string) : FightApplyForHelpNtf;
		
	}
}


declare module pb {

	var FightAskForHelpResultReq: FightAskForHelpResultReq;
	export interface FightAskForHelpResultReq extends ProtoBufModel {
		new(obj?: any): FightAskForHelpResultReq;
		isAgree?: boolean;
		reqHelpUserId?: number;
		helpStageId?: number;
		
	}

	export interface FightAskForHelpResultReqBuilder {
		new(): FightAskForHelpResultReq;
		decode(buffer: ArrayBuffer) : FightAskForHelpResultReq;
		//decode(buffer: NodeBuffer) : FightAskForHelpResultReq;
		//decode(buffer: ByteArrayBuffer) : FightAskForHelpResultReq;
		decode64(buffer: string) : FightAskForHelpResultReq;
		
	}
}


declare module pb {

	var FightAskForHelpResultAck: FightAskForHelpResultAck;
	export interface FightAskForHelpResultAck extends ProtoBufModel {
		new(obj?: any): FightAskForHelpResultAck;
		isAgree?: boolean;
		reqHelpUserId?: number;
		helpStageId?: number;
		enterErr?: string;
		
	}

	export interface FightAskForHelpResultAckBuilder {
		new(): FightAskForHelpResultAck;
		decode(buffer: ArrayBuffer) : FightAskForHelpResultAck;
		//decode(buffer: NodeBuffer) : FightAskForHelpResultAck;
		//decode(buffer: ByteArrayBuffer) : FightAskForHelpResultAck;
		decode64(buffer: string) : FightAskForHelpResultAck;
		
	}
}


declare module pb {

	var FightAskForHelpResultNtf: FightAskForHelpResultNtf;
	export interface FightAskForHelpResultNtf extends ProtoBufModel {
		new(obj?: any): FightAskForHelpResultNtf;
		isAgree?: boolean;
		helpUserId?: number;
		name?: string;
		
	}

	export interface FightAskForHelpResultNtfBuilder {
		new(): FightAskForHelpResultNtf;
		decode(buffer: ArrayBuffer) : FightAskForHelpResultNtf;
		//decode(buffer: NodeBuffer) : FightAskForHelpResultNtf;
		//decode(buffer: ByteArrayBuffer) : FightAskForHelpResultNtf;
		decode64(buffer: string) : FightAskForHelpResultNtf;
		
	}
}


declare module pb {

	var FightItemsAddNtf: FightItemsAddNtf;
	export interface FightItemsAddNtf extends ProtoBufModel {
		new(obj?: any): FightItemsAddNtf;
		stageId?: number;
		goods?: GoodsChangeNtf;
		addSource?: number;
		
	}

	export interface FightItemsAddNtfBuilder {
		new(): FightItemsAddNtf;
		decode(buffer: ArrayBuffer) : FightItemsAddNtf;
		//decode(buffer: NodeBuffer) : FightItemsAddNtf;
		//decode(buffer: ByteArrayBuffer) : FightItemsAddNtf;
		decode64(buffer: string) : FightItemsAddNtf;
		
	}
}


declare module pb {

	var FirstDropLoadReq: FirstDropLoadReq;
	export interface FirstDropLoadReq extends ProtoBufModel {
		new(obj?: any): FirstDropLoadReq;
		types?: number;
		
	}

	export interface FirstDropLoadReqBuilder {
		new(): FirstDropLoadReq;
		decode(buffer: ArrayBuffer) : FirstDropLoadReq;
		//decode(buffer: NodeBuffer) : FirstDropLoadReq;
		//decode(buffer: ByteArrayBuffer) : FirstDropLoadReq;
		decode64(buffer: string) : FirstDropLoadReq;
		
	}
}


declare module pb {

	var FirstDropLoadAck: FirstDropLoadAck;
	export interface FirstDropLoadAck extends ProtoBufModel {
		new(obj?: any): FirstDropLoadAck;
		types?: number;
		GetDropItemInfo: dcodeIO.ProtoBuf.Map<number,number>;
		AllDropItemGetCount: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface FirstDropLoadAckBuilder {
		new(): FirstDropLoadAck;
		decode(buffer: ArrayBuffer) : FirstDropLoadAck;
		//decode(buffer: NodeBuffer) : FirstDropLoadAck;
		//decode(buffer: ByteArrayBuffer) : FirstDropLoadAck;
		decode64(buffer: string) : FirstDropLoadAck;
		
	}
}


declare module pb {

	var GetFirstDropAwardReq: GetFirstDropAwardReq;
	export interface GetFirstDropAwardReq extends ProtoBufModel {
		new(obj?: any): GetFirstDropAwardReq;
		id?: number;
		
	}

	export interface GetFirstDropAwardReqBuilder {
		new(): GetFirstDropAwardReq;
		decode(buffer: ArrayBuffer) : GetFirstDropAwardReq;
		//decode(buffer: NodeBuffer) : GetFirstDropAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetFirstDropAwardReq;
		decode64(buffer: string) : GetFirstDropAwardReq;
		
	}
}


declare module pb {

	var GetFirstDropAwardAck: GetFirstDropAwardAck;
	export interface GetFirstDropAwardAck extends ProtoBufModel {
		new(obj?: any): GetFirstDropAwardAck;
		types?: number;
		GetDropItemInfo: dcodeIO.ProtoBuf.Map<number,number>;
		DropItemGetCount: dcodeIO.ProtoBuf.Map<number,number>;
		goods?: GoodsChangeNtf;
		
	}

	export interface GetFirstDropAwardAckBuilder {
		new(): GetFirstDropAwardAck;
		decode(buffer: ArrayBuffer) : GetFirstDropAwardAck;
		//decode(buffer: NodeBuffer) : GetFirstDropAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetFirstDropAwardAck;
		decode64(buffer: string) : GetFirstDropAwardAck;
		
	}
}


declare module pb {

	var GetAllFirstDropAwardReq: GetAllFirstDropAwardReq;
	export interface GetAllFirstDropAwardReq extends ProtoBufModel {
		new(obj?: any): GetAllFirstDropAwardReq;
		types?: number;
		
	}

	export interface GetAllFirstDropAwardReqBuilder {
		new(): GetAllFirstDropAwardReq;
		decode(buffer: ArrayBuffer) : GetAllFirstDropAwardReq;
		//decode(buffer: NodeBuffer) : GetAllFirstDropAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetAllFirstDropAwardReq;
		decode64(buffer: string) : GetAllFirstDropAwardReq;
		
	}
}


declare module pb {

	var GetAllFirstDropAwardAck: GetAllFirstDropAwardAck;
	export interface GetAllFirstDropAwardAck extends ProtoBufModel {
		new(obj?: any): GetAllFirstDropAwardAck;
		types?: number;
		GetDropItemInfo: dcodeIO.ProtoBuf.Map<number,number>;
		DropItemGetCount: dcodeIO.ProtoBuf.Map<number,number>;
		goods?: GoodsChangeNtf;
		
	}

	export interface GetAllFirstDropAwardAckBuilder {
		new(): GetAllFirstDropAwardAck;
		decode(buffer: ArrayBuffer) : GetAllFirstDropAwardAck;
		//decode(buffer: NodeBuffer) : GetAllFirstDropAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetAllFirstDropAwardAck;
		decode64(buffer: string) : GetAllFirstDropAwardAck;
		
	}
}


declare module pb {

	var GetAllRedPacketReq: GetAllRedPacketReq;
	export interface GetAllRedPacketReq extends ProtoBufModel {
		new(obj?: any): GetAllRedPacketReq;
		infos: number[];
		
	}

	export interface GetAllRedPacketReqBuilder {
		new(): GetAllRedPacketReq;
		decode(buffer: ArrayBuffer) : GetAllRedPacketReq;
		//decode(buffer: NodeBuffer) : GetAllRedPacketReq;
		//decode(buffer: ByteArrayBuffer) : GetAllRedPacketReq;
		decode64(buffer: string) : GetAllRedPacketReq;
		
	}
}


declare module pb {

	var GetAllRedPacketAck: GetAllRedPacketAck;
	export interface GetAllRedPacketAck extends ProtoBufModel {
		new(obj?: any): GetAllRedPacketAck;
		usePacketNum?: number;
		
	}

	export interface GetAllRedPacketAckBuilder {
		new(): GetAllRedPacketAck;
		decode(buffer: ArrayBuffer) : GetAllRedPacketAck;
		//decode(buffer: NodeBuffer) : GetAllRedPacketAck;
		//decode(buffer: ByteArrayBuffer) : GetAllRedPacketAck;
		decode64(buffer: string) : GetAllRedPacketAck;
		
	}
}


declare module pb {

	var GetAllFirstDropAwardNtf: GetAllFirstDropAwardNtf;
	export interface GetAllFirstDropAwardNtf extends ProtoBufModel {
		new(obj?: any): GetAllFirstDropAwardNtf;
		DropItemGetCount: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface GetAllFirstDropAwardNtfBuilder {
		new(): GetAllFirstDropAwardNtf;
		decode(buffer: ArrayBuffer) : GetAllFirstDropAwardNtf;
		//decode(buffer: NodeBuffer) : GetAllFirstDropAwardNtf;
		//decode(buffer: ByteArrayBuffer) : GetAllFirstDropAwardNtf;
		decode64(buffer: string) : GetAllFirstDropAwardNtf;
		
	}
}


declare module pb {

	var FirstDropRedPointNtf: FirstDropRedPointNtf;
	export interface FirstDropRedPointNtf extends ProtoBufModel {
		new(obj?: any): FirstDropRedPointNtf;
		items: number[];
		
	}

	export interface FirstDropRedPointNtfBuilder {
		new(): FirstDropRedPointNtf;
		decode(buffer: ArrayBuffer) : FirstDropRedPointNtf;
		//decode(buffer: NodeBuffer) : FirstDropRedPointNtf;
		//decode(buffer: ByteArrayBuffer) : FirstDropRedPointNtf;
		decode64(buffer: string) : FirstDropRedPointNtf;
		
	}
}


declare module pb {

	var FirstRechargeRewardReq: FirstRechargeRewardReq;
	export interface FirstRechargeRewardReq extends ProtoBufModel {
		new(obj?: any): FirstRechargeRewardReq;
		day?: number;
		
	}

	export interface FirstRechargeRewardReqBuilder {
		new(): FirstRechargeRewardReq;
		decode(buffer: ArrayBuffer) : FirstRechargeRewardReq;
		//decode(buffer: NodeBuffer) : FirstRechargeRewardReq;
		//decode(buffer: ByteArrayBuffer) : FirstRechargeRewardReq;
		decode64(buffer: string) : FirstRechargeRewardReq;
		
	}
}


declare module pb {

	var FirstRechargeRewardAck: FirstRechargeRewardAck;
	export interface FirstRechargeRewardAck extends ProtoBufModel {
		new(obj?: any): FirstRechargeRewardAck;
		day?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface FirstRechargeRewardAckBuilder {
		new(): FirstRechargeRewardAck;
		decode(buffer: ArrayBuffer) : FirstRechargeRewardAck;
		//decode(buffer: NodeBuffer) : FirstRechargeRewardAck;
		//decode(buffer: ByteArrayBuffer) : FirstRechargeRewardAck;
		decode64(buffer: string) : FirstRechargeRewardAck;
		
	}
}


declare module pb {

	var FirstRechargeNtf: FirstRechargeNtf;
	export interface FirstRechargeNtf extends ProtoBufModel {
		new(obj?: any): FirstRechargeNtf;
		isRecharge?: boolean;
		openDay?: number;
		
	}

	export interface FirstRechargeNtfBuilder {
		new(): FirstRechargeNtf;
		decode(buffer: ArrayBuffer) : FirstRechargeNtf;
		//decode(buffer: NodeBuffer) : FirstRechargeNtf;
		//decode(buffer: ByteArrayBuffer) : FirstRechargeNtf;
		decode64(buffer: string) : FirstRechargeNtf;
		
	}
}


declare module pb {

	var FitUpLvReq: FitUpLvReq;
	export interface FitUpLvReq extends ProtoBufModel {
		new(obj?: any): FitUpLvReq;
		fitId?: number;
		
	}

	export interface FitUpLvReqBuilder {
		new(): FitUpLvReq;
		decode(buffer: ArrayBuffer) : FitUpLvReq;
		//decode(buffer: NodeBuffer) : FitUpLvReq;
		//decode(buffer: ByteArrayBuffer) : FitUpLvReq;
		decode64(buffer: string) : FitUpLvReq;
		
	}
}


declare module pb {

	var FitUpLvAck: FitUpLvAck;
	export interface FitUpLvAck extends ProtoBufModel {
		new(obj?: any): FitUpLvAck;
		fitId?: number;
		fitLvId?: number;
		
	}

	export interface FitUpLvAckBuilder {
		new(): FitUpLvAck;
		decode(buffer: ArrayBuffer) : FitUpLvAck;
		//decode(buffer: NodeBuffer) : FitUpLvAck;
		//decode(buffer: ByteArrayBuffer) : FitUpLvAck;
		decode64(buffer: string) : FitUpLvAck;
		
	}
}


declare module pb {

	var FitSkillUpLvReq: FitSkillUpLvReq;
	export interface FitSkillUpLvReq extends ProtoBufModel {
		new(obj?: any): FitSkillUpLvReq;
		fitSkillId?: number;
		
	}

	export interface FitSkillUpLvReqBuilder {
		new(): FitSkillUpLvReq;
		decode(buffer: ArrayBuffer) : FitSkillUpLvReq;
		//decode(buffer: NodeBuffer) : FitSkillUpLvReq;
		//decode(buffer: ByteArrayBuffer) : FitSkillUpLvReq;
		decode64(buffer: string) : FitSkillUpLvReq;
		
	}
}


declare module pb {

	var FitSkillUpLvAck: FitSkillUpLvAck;
	export interface FitSkillUpLvAck extends ProtoBufModel {
		new(obj?: any): FitSkillUpLvAck;
		fitSkillId?: number;
		fitSkillLv?: number;
		
	}

	export interface FitSkillUpLvAckBuilder {
		new(): FitSkillUpLvAck;
		decode(buffer: ArrayBuffer) : FitSkillUpLvAck;
		//decode(buffer: NodeBuffer) : FitSkillUpLvAck;
		//decode(buffer: ByteArrayBuffer) : FitSkillUpLvAck;
		decode64(buffer: string) : FitSkillUpLvAck;
		
	}
}


declare module pb {

	var FitSkillUpStarReq: FitSkillUpStarReq;
	export interface FitSkillUpStarReq extends ProtoBufModel {
		new(obj?: any): FitSkillUpStarReq;
		fitSkillId?: number;
		
	}

	export interface FitSkillUpStarReqBuilder {
		new(): FitSkillUpStarReq;
		decode(buffer: ArrayBuffer) : FitSkillUpStarReq;
		//decode(buffer: NodeBuffer) : FitSkillUpStarReq;
		//decode(buffer: ByteArrayBuffer) : FitSkillUpStarReq;
		decode64(buffer: string) : FitSkillUpStarReq;
		
	}
}


declare module pb {

	var FitSkillUpStarAck: FitSkillUpStarAck;
	export interface FitSkillUpStarAck extends ProtoBufModel {
		new(obj?: any): FitSkillUpStarAck;
		fitSkillId?: number;
		fitSkillStar?: number;
		
	}

	export interface FitSkillUpStarAckBuilder {
		new(): FitSkillUpStarAck;
		decode(buffer: ArrayBuffer) : FitSkillUpStarAck;
		//decode(buffer: NodeBuffer) : FitSkillUpStarAck;
		//decode(buffer: ByteArrayBuffer) : FitSkillUpStarAck;
		decode64(buffer: string) : FitSkillUpStarAck;
		
	}
}


declare module pb {

	var FitSkillChangeReq: FitSkillChangeReq;
	export interface FitSkillChangeReq extends ProtoBufModel {
		new(obj?: any): FitSkillChangeReq;
		fitSkillId?: number;
		fitSkillSlot?: number;
		
	}

	export interface FitSkillChangeReqBuilder {
		new(): FitSkillChangeReq;
		decode(buffer: ArrayBuffer) : FitSkillChangeReq;
		//decode(buffer: NodeBuffer) : FitSkillChangeReq;
		//decode(buffer: ByteArrayBuffer) : FitSkillChangeReq;
		decode64(buffer: string) : FitSkillChangeReq;
		
	}
}


declare module pb {

	var FitSkillChangeAck: FitSkillChangeAck;
	export interface FitSkillChangeAck extends ProtoBufModel {
		new(obj?: any): FitSkillChangeAck;
		fitSkillId?: number;
		fitSkillSlot?: number;
		
	}

	export interface FitSkillChangeAckBuilder {
		new(): FitSkillChangeAck;
		decode(buffer: ArrayBuffer) : FitSkillChangeAck;
		//decode(buffer: NodeBuffer) : FitSkillChangeAck;
		//decode(buffer: ByteArrayBuffer) : FitSkillChangeAck;
		decode64(buffer: string) : FitSkillChangeAck;
		
	}
}


declare module pb {

	var FitSkillResetReq: FitSkillResetReq;
	export interface FitSkillResetReq extends ProtoBufModel {
		new(obj?: any): FitSkillResetReq;
		fitSkillId?: number;
		
	}

	export interface FitSkillResetReqBuilder {
		new(): FitSkillResetReq;
		decode(buffer: ArrayBuffer) : FitSkillResetReq;
		//decode(buffer: NodeBuffer) : FitSkillResetReq;
		//decode(buffer: ByteArrayBuffer) : FitSkillResetReq;
		decode64(buffer: string) : FitSkillResetReq;
		
	}
}


declare module pb {

	var FitSkillResetAck: FitSkillResetAck;
	export interface FitSkillResetAck extends ProtoBufModel {
		new(obj?: any): FitSkillResetAck;
		fitSkillId?: number;
		fitSkillLv?: number;
		fitSkillStar?: number;
		
	}

	export interface FitSkillResetAckBuilder {
		new(): FitSkillResetAck;
		decode(buffer: ArrayBuffer) : FitSkillResetAck;
		//decode(buffer: NodeBuffer) : FitSkillResetAck;
		//decode(buffer: ByteArrayBuffer) : FitSkillResetAck;
		decode64(buffer: string) : FitSkillResetAck;
		
	}
}


declare module pb {

	var FitFashionUpLvReq: FitFashionUpLvReq;
	export interface FitFashionUpLvReq extends ProtoBufModel {
		new(obj?: any): FitFashionUpLvReq;
		fitFashionId?: number;
		
	}

	export interface FitFashionUpLvReqBuilder {
		new(): FitFashionUpLvReq;
		decode(buffer: ArrayBuffer) : FitFashionUpLvReq;
		//decode(buffer: NodeBuffer) : FitFashionUpLvReq;
		//decode(buffer: ByteArrayBuffer) : FitFashionUpLvReq;
		decode64(buffer: string) : FitFashionUpLvReq;
		
	}
}


declare module pb {

	var FitFashionUpLvAck: FitFashionUpLvAck;
	export interface FitFashionUpLvAck extends ProtoBufModel {
		new(obj?: any): FitFashionUpLvAck;
		fitFashionId?: number;
		fitFashionLv?: number;
		
	}

	export interface FitFashionUpLvAckBuilder {
		new(): FitFashionUpLvAck;
		decode(buffer: ArrayBuffer) : FitFashionUpLvAck;
		//decode(buffer: NodeBuffer) : FitFashionUpLvAck;
		//decode(buffer: ByteArrayBuffer) : FitFashionUpLvAck;
		decode64(buffer: string) : FitFashionUpLvAck;
		
	}
}


declare module pb {

	var FitFashionChangeReq: FitFashionChangeReq;
	export interface FitFashionChangeReq extends ProtoBufModel {
		new(obj?: any): FitFashionChangeReq;
		fitFashionId?: number;
		
	}

	export interface FitFashionChangeReqBuilder {
		new(): FitFashionChangeReq;
		decode(buffer: ArrayBuffer) : FitFashionChangeReq;
		//decode(buffer: NodeBuffer) : FitFashionChangeReq;
		//decode(buffer: ByteArrayBuffer) : FitFashionChangeReq;
		decode64(buffer: string) : FitFashionChangeReq;
		
	}
}


declare module pb {

	var FitFashionChangeAck: FitFashionChangeAck;
	export interface FitFashionChangeAck extends ProtoBufModel {
		new(obj?: any): FitFashionChangeAck;
		fitFashionId?: number;
		
	}

	export interface FitFashionChangeAckBuilder {
		new(): FitFashionChangeAck;
		decode(buffer: ArrayBuffer) : FitFashionChangeAck;
		//decode(buffer: NodeBuffer) : FitFashionChangeAck;
		//decode(buffer: ByteArrayBuffer) : FitFashionChangeAck;
		decode64(buffer: string) : FitFashionChangeAck;
		
	}
}


declare module pb {

	var FitSkillActiveReq: FitSkillActiveReq;
	export interface FitSkillActiveReq extends ProtoBufModel {
		new(obj?: any): FitSkillActiveReq;
		fitSkillId?: number;
		
	}

	export interface FitSkillActiveReqBuilder {
		new(): FitSkillActiveReq;
		decode(buffer: ArrayBuffer) : FitSkillActiveReq;
		//decode(buffer: NodeBuffer) : FitSkillActiveReq;
		//decode(buffer: ByteArrayBuffer) : FitSkillActiveReq;
		decode64(buffer: string) : FitSkillActiveReq;
		
	}
}


declare module pb {

	var FitSkillActiveAck: FitSkillActiveAck;
	export interface FitSkillActiveAck extends ProtoBufModel {
		new(obj?: any): FitSkillActiveAck;
		fitSkillId?: number;
		
	}

	export interface FitSkillActiveAckBuilder {
		new(): FitSkillActiveAck;
		decode(buffer: ArrayBuffer) : FitSkillActiveAck;
		//decode(buffer: NodeBuffer) : FitSkillActiveAck;
		//decode(buffer: ByteArrayBuffer) : FitSkillActiveAck;
		decode64(buffer: string) : FitSkillActiveAck;
		
	}
}


declare module pb {

	var FitEnterReq: FitEnterReq;
	export interface FitEnterReq extends ProtoBufModel {
		new(obj?: any): FitEnterReq;
		
	}

	export interface FitEnterReqBuilder {
		new(): FitEnterReq;
		decode(buffer: ArrayBuffer) : FitEnterReq;
		//decode(buffer: NodeBuffer) : FitEnterReq;
		//decode(buffer: ByteArrayBuffer) : FitEnterReq;
		decode64(buffer: string) : FitEnterReq;
		
	}
}


declare module pb {

	var FitEnterAck: FitEnterAck;
	export interface FitEnterAck extends ProtoBufModel {
		new(obj?: any): FitEnterAck;
		cdStartTime?: number;
		cdEndTime?: number;
		
	}

	export interface FitEnterAckBuilder {
		new(): FitEnterAck;
		decode(buffer: ArrayBuffer) : FitEnterAck;
		//decode(buffer: NodeBuffer) : FitEnterAck;
		//decode(buffer: ByteArrayBuffer) : FitEnterAck;
		decode64(buffer: string) : FitEnterAck;
		
	}
}


declare module pb {

	var FitCancleReq: FitCancleReq;
	export interface FitCancleReq extends ProtoBufModel {
		new(obj?: any): FitCancleReq;
		
	}

	export interface FitCancleReqBuilder {
		new(): FitCancleReq;
		decode(buffer: ArrayBuffer) : FitCancleReq;
		//decode(buffer: NodeBuffer) : FitCancleReq;
		//decode(buffer: ByteArrayBuffer) : FitCancleReq;
		decode64(buffer: string) : FitCancleReq;
		
	}
}


declare module pb {

	var FitCancleAck: FitCancleAck;
	export interface FitCancleAck extends ProtoBufModel {
		new(obj?: any): FitCancleAck;
		
	}

	export interface FitCancleAckBuilder {
		new(): FitCancleAck;
		decode(buffer: ArrayBuffer) : FitCancleAck;
		//decode(buffer: NodeBuffer) : FitCancleAck;
		//decode(buffer: ByteArrayBuffer) : FitCancleAck;
		decode64(buffer: string) : FitCancleAck;
		
	}
}


declare module pb {

	var FitHolyEquipComposeReq: FitHolyEquipComposeReq;
	export interface FitHolyEquipComposeReq extends ProtoBufModel {
		new(obj?: any): FitHolyEquipComposeReq;
		equipId?: number;
		pos?: number;
		
	}

	export interface FitHolyEquipComposeReqBuilder {
		new(): FitHolyEquipComposeReq;
		decode(buffer: ArrayBuffer) : FitHolyEquipComposeReq;
		//decode(buffer: NodeBuffer) : FitHolyEquipComposeReq;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipComposeReq;
		decode64(buffer: string) : FitHolyEquipComposeReq;
		
	}
}


declare module pb {

	var FitHolyEquipComposeAck: FitHolyEquipComposeAck;
	export interface FitHolyEquipComposeAck extends ProtoBufModel {
		new(obj?: any): FitHolyEquipComposeAck;
		suitType?: number;
		fitHolyEquip?: FitHolyEquipUnit;
		
	}

	export interface FitHolyEquipComposeAckBuilder {
		new(): FitHolyEquipComposeAck;
		decode(buffer: ArrayBuffer) : FitHolyEquipComposeAck;
		//decode(buffer: NodeBuffer) : FitHolyEquipComposeAck;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipComposeAck;
		decode64(buffer: string) : FitHolyEquipComposeAck;
		
	}
}


declare module pb {

	var FitHolyEquipDeComposeReq: FitHolyEquipDeComposeReq;
	export interface FitHolyEquipDeComposeReq extends ProtoBufModel {
		new(obj?: any): FitHolyEquipDeComposeReq;
		bagPos?: number;
		
	}

	export interface FitHolyEquipDeComposeReqBuilder {
		new(): FitHolyEquipDeComposeReq;
		decode(buffer: ArrayBuffer) : FitHolyEquipDeComposeReq;
		//decode(buffer: NodeBuffer) : FitHolyEquipDeComposeReq;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipDeComposeReq;
		decode64(buffer: string) : FitHolyEquipDeComposeReq;
		
	}
}


declare module pb {

	var FitHolyEquipDeComposeAck: FitHolyEquipDeComposeAck;
	export interface FitHolyEquipDeComposeAck extends ProtoBufModel {
		new(obj?: any): FitHolyEquipDeComposeAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface FitHolyEquipDeComposeAckBuilder {
		new(): FitHolyEquipDeComposeAck;
		decode(buffer: ArrayBuffer) : FitHolyEquipDeComposeAck;
		//decode(buffer: NodeBuffer) : FitHolyEquipDeComposeAck;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipDeComposeAck;
		decode64(buffer: string) : FitHolyEquipDeComposeAck;
		
	}
}


declare module pb {

	var FitHolyEquipWearReq: FitHolyEquipWearReq;
	export interface FitHolyEquipWearReq extends ProtoBufModel {
		new(obj?: any): FitHolyEquipWearReq;
		bagPos?: number;
		equipPos?: number;
		
	}

	export interface FitHolyEquipWearReqBuilder {
		new(): FitHolyEquipWearReq;
		decode(buffer: ArrayBuffer) : FitHolyEquipWearReq;
		//decode(buffer: NodeBuffer) : FitHolyEquipWearReq;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipWearReq;
		decode64(buffer: string) : FitHolyEquipWearReq;
		
	}
}


declare module pb {

	var FitHolyEquipWearAck: FitHolyEquipWearAck;
	export interface FitHolyEquipWearAck extends ProtoBufModel {
		new(obj?: any): FitHolyEquipWearAck;
		suitType?: number;
		fitHolyEquip?: FitHolyEquipUnit;
		
	}

	export interface FitHolyEquipWearAckBuilder {
		new(): FitHolyEquipWearAck;
		decode(buffer: ArrayBuffer) : FitHolyEquipWearAck;
		//decode(buffer: NodeBuffer) : FitHolyEquipWearAck;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipWearAck;
		decode64(buffer: string) : FitHolyEquipWearAck;
		
	}
}


declare module pb {

	var FitHolyEquipRemoveReq: FitHolyEquipRemoveReq;
	export interface FitHolyEquipRemoveReq extends ProtoBufModel {
		new(obj?: any): FitHolyEquipRemoveReq;
		pos?: number;
		suitType?: number;
		
	}

	export interface FitHolyEquipRemoveReqBuilder {
		new(): FitHolyEquipRemoveReq;
		decode(buffer: ArrayBuffer) : FitHolyEquipRemoveReq;
		//decode(buffer: NodeBuffer) : FitHolyEquipRemoveReq;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipRemoveReq;
		decode64(buffer: string) : FitHolyEquipRemoveReq;
		
	}
}


declare module pb {

	var FitHolyEquipRemoveAck: FitHolyEquipRemoveAck;
	export interface FitHolyEquipRemoveAck extends ProtoBufModel {
		new(obj?: any): FitHolyEquipRemoveAck;
		suitType?: number;
		fitHolyEquip?: FitHolyEquipUnit;
		
	}

	export interface FitHolyEquipRemoveAckBuilder {
		new(): FitHolyEquipRemoveAck;
		decode(buffer: ArrayBuffer) : FitHolyEquipRemoveAck;
		//decode(buffer: NodeBuffer) : FitHolyEquipRemoveAck;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipRemoveAck;
		decode64(buffer: string) : FitHolyEquipRemoveAck;
		
	}
}


declare module pb {

	var FitHolyEquipSuitSkillChangeReq: FitHolyEquipSuitSkillChangeReq;
	export interface FitHolyEquipSuitSkillChangeReq extends ProtoBufModel {
		new(obj?: any): FitHolyEquipSuitSkillChangeReq;
		suitId?: number;
		
	}

	export interface FitHolyEquipSuitSkillChangeReqBuilder {
		new(): FitHolyEquipSuitSkillChangeReq;
		decode(buffer: ArrayBuffer) : FitHolyEquipSuitSkillChangeReq;
		//decode(buffer: NodeBuffer) : FitHolyEquipSuitSkillChangeReq;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipSuitSkillChangeReq;
		decode64(buffer: string) : FitHolyEquipSuitSkillChangeReq;
		
	}
}


declare module pb {

	var FitHolyEquipSuitSkillChangeAck: FitHolyEquipSuitSkillChangeAck;
	export interface FitHolyEquipSuitSkillChangeAck extends ProtoBufModel {
		new(obj?: any): FitHolyEquipSuitSkillChangeAck;
		suitId?: number;
		
	}

	export interface FitHolyEquipSuitSkillChangeAckBuilder {
		new(): FitHolyEquipSuitSkillChangeAck;
		decode(buffer: ArrayBuffer) : FitHolyEquipSuitSkillChangeAck;
		//decode(buffer: NodeBuffer) : FitHolyEquipSuitSkillChangeAck;
		//decode(buffer: ByteArrayBuffer) : FitHolyEquipSuitSkillChangeAck;
		decode64(buffer: string) : FitHolyEquipSuitSkillChangeAck;
		
	}
}


declare module pb {

	var FriendListReq: FriendListReq;
	export interface FriendListReq extends ProtoBufModel {
		new(obj?: any): FriendListReq;
		
	}

	export interface FriendListReqBuilder {
		new(): FriendListReq;
		decode(buffer: ArrayBuffer) : FriendListReq;
		//decode(buffer: NodeBuffer) : FriendListReq;
		//decode(buffer: ByteArrayBuffer) : FriendListReq;
		decode64(buffer: string) : FriendListReq;
		
	}
}


declare module pb {

	var FriendListAck: FriendListAck;
	export interface FriendListAck extends ProtoBufModel {
		new(obj?: any): FriendListAck;
		friendList: FriendInfo[];
		
	}

	export interface FriendListAckBuilder {
		new(): FriendListAck;
		decode(buffer: ArrayBuffer) : FriendListAck;
		//decode(buffer: NodeBuffer) : FriendListAck;
		//decode(buffer: ByteArrayBuffer) : FriendListAck;
		decode64(buffer: string) : FriendListAck;
		
	}
}


declare module pb {

	var FriendAddReq: FriendAddReq;
	export interface FriendAddReq extends ProtoBufModel {
		new(obj?: any): FriendAddReq;
		userId?: string;
		
	}

	export interface FriendAddReqBuilder {
		new(): FriendAddReq;
		decode(buffer: ArrayBuffer) : FriendAddReq;
		//decode(buffer: NodeBuffer) : FriendAddReq;
		//decode(buffer: ByteArrayBuffer) : FriendAddReq;
		decode64(buffer: string) : FriendAddReq;
		
	}
}


declare module pb {

	var FriendAddAck: FriendAddAck;
	export interface FriendAddAck extends ProtoBufModel {
		new(obj?: any): FriendAddAck;
		friendInfo: FriendInfo[];
		
	}

	export interface FriendAddAckBuilder {
		new(): FriendAddAck;
		decode(buffer: ArrayBuffer) : FriendAddAck;
		//decode(buffer: NodeBuffer) : FriendAddAck;
		//decode(buffer: ByteArrayBuffer) : FriendAddAck;
		decode64(buffer: string) : FriendAddAck;
		
	}
}


declare module pb {

	var FriendDelReq: FriendDelReq;
	export interface FriendDelReq extends ProtoBufModel {
		new(obj?: any): FriendDelReq;
		userId?: number;
		
	}

	export interface FriendDelReqBuilder {
		new(): FriendDelReq;
		decode(buffer: ArrayBuffer) : FriendDelReq;
		//decode(buffer: NodeBuffer) : FriendDelReq;
		//decode(buffer: ByteArrayBuffer) : FriendDelReq;
		decode64(buffer: string) : FriendDelReq;
		
	}
}


declare module pb {

	var FriendDelAck: FriendDelAck;
	export interface FriendDelAck extends ProtoBufModel {
		new(obj?: any): FriendDelAck;
		userId?: number;
		
	}

	export interface FriendDelAckBuilder {
		new(): FriendDelAck;
		decode(buffer: ArrayBuffer) : FriendDelAck;
		//decode(buffer: NodeBuffer) : FriendDelAck;
		//decode(buffer: ByteArrayBuffer) : FriendDelAck;
		decode64(buffer: string) : FriendDelAck;
		
	}
}


declare module pb {

	var FriendBlockAddReq: FriendBlockAddReq;
	export interface FriendBlockAddReq extends ProtoBufModel {
		new(obj?: any): FriendBlockAddReq;
		userId?: number;
		
	}

	export interface FriendBlockAddReqBuilder {
		new(): FriendBlockAddReq;
		decode(buffer: ArrayBuffer) : FriendBlockAddReq;
		//decode(buffer: NodeBuffer) : FriendBlockAddReq;
		//decode(buffer: ByteArrayBuffer) : FriendBlockAddReq;
		decode64(buffer: string) : FriendBlockAddReq;
		
	}
}


declare module pb {

	var FriendBlockAddAck: FriendBlockAddAck;
	export interface FriendBlockAddAck extends ProtoBufModel {
		new(obj?: any): FriendBlockAddAck;
		userId?: number;
		friendList: FriendInfo[];
		
	}

	export interface FriendBlockAddAckBuilder {
		new(): FriendBlockAddAck;
		decode(buffer: ArrayBuffer) : FriendBlockAddAck;
		//decode(buffer: NodeBuffer) : FriendBlockAddAck;
		//decode(buffer: ByteArrayBuffer) : FriendBlockAddAck;
		decode64(buffer: string) : FriendBlockAddAck;
		
	}
}


declare module pb {

	var FriendSearchReq: FriendSearchReq;
	export interface FriendSearchReq extends ProtoBufModel {
		new(obj?: any): FriendSearchReq;
		name?: string;
		
	}

	export interface FriendSearchReqBuilder {
		new(): FriendSearchReq;
		decode(buffer: ArrayBuffer) : FriendSearchReq;
		//decode(buffer: NodeBuffer) : FriendSearchReq;
		//decode(buffer: ByteArrayBuffer) : FriendSearchReq;
		decode64(buffer: string) : FriendSearchReq;
		
	}
}


declare module pb {

	var FriendSearchAck: FriendSearchAck;
	export interface FriendSearchAck extends ProtoBufModel {
		new(obj?: any): FriendSearchAck;
		friendList: FriendInfo[];
		
	}

	export interface FriendSearchAckBuilder {
		new(): FriendSearchAck;
		decode(buffer: ArrayBuffer) : FriendSearchAck;
		//decode(buffer: NodeBuffer) : FriendSearchAck;
		//decode(buffer: ByteArrayBuffer) : FriendSearchAck;
		decode64(buffer: string) : FriendSearchAck;
		
	}
}


declare module pb {

	var FriendBlockListReq: FriendBlockListReq;
	export interface FriendBlockListReq extends ProtoBufModel {
		new(obj?: any): FriendBlockListReq;
		
	}

	export interface FriendBlockListReqBuilder {
		new(): FriendBlockListReq;
		decode(buffer: ArrayBuffer) : FriendBlockListReq;
		//decode(buffer: NodeBuffer) : FriendBlockListReq;
		//decode(buffer: ByteArrayBuffer) : FriendBlockListReq;
		decode64(buffer: string) : FriendBlockListReq;
		
	}
}


declare module pb {

	var FriendBlockListAck: FriendBlockListAck;
	export interface FriendBlockListAck extends ProtoBufModel {
		new(obj?: any): FriendBlockListAck;
		friendList: FriendInfo[];
		
	}

	export interface FriendBlockListAckBuilder {
		new(): FriendBlockListAck;
		decode(buffer: ArrayBuffer) : FriendBlockListAck;
		//decode(buffer: NodeBuffer) : FriendBlockListAck;
		//decode(buffer: ByteArrayBuffer) : FriendBlockListAck;
		decode64(buffer: string) : FriendBlockListAck;
		
	}
}


declare module pb {

	var FriendBlockDelReq: FriendBlockDelReq;
	export interface FriendBlockDelReq extends ProtoBufModel {
		new(obj?: any): FriendBlockDelReq;
		userId?: number;
		
	}

	export interface FriendBlockDelReqBuilder {
		new(): FriendBlockDelReq;
		decode(buffer: ArrayBuffer) : FriendBlockDelReq;
		//decode(buffer: NodeBuffer) : FriendBlockDelReq;
		//decode(buffer: ByteArrayBuffer) : FriendBlockDelReq;
		decode64(buffer: string) : FriendBlockDelReq;
		
	}
}


declare module pb {

	var FriendBlockDelAck: FriendBlockDelAck;
	export interface FriendBlockDelAck extends ProtoBufModel {
		new(obj?: any): FriendBlockDelAck;
		userId?: number;
		
	}

	export interface FriendBlockDelAckBuilder {
		new(): FriendBlockDelAck;
		decode(buffer: ArrayBuffer) : FriendBlockDelAck;
		//decode(buffer: NodeBuffer) : FriendBlockDelAck;
		//decode(buffer: ByteArrayBuffer) : FriendBlockDelAck;
		decode64(buffer: string) : FriendBlockDelAck;
		
	}
}


declare module pb {

	var FriendMsgReadReq: FriendMsgReadReq;
	export interface FriendMsgReadReq extends ProtoBufModel {
		new(obj?: any): FriendMsgReadReq;
		friendId?: number;
		
	}

	export interface FriendMsgReadReqBuilder {
		new(): FriendMsgReadReq;
		decode(buffer: ArrayBuffer) : FriendMsgReadReq;
		//decode(buffer: NodeBuffer) : FriendMsgReadReq;
		//decode(buffer: ByteArrayBuffer) : FriendMsgReadReq;
		decode64(buffer: string) : FriendMsgReadReq;
		
	}
}


declare module pb {

	var FriendMsgReadAck: FriendMsgReadAck;
	export interface FriendMsgReadAck extends ProtoBufModel {
		new(obj?: any): FriendMsgReadAck;
		friendId?: number;
		
	}

	export interface FriendMsgReadAckBuilder {
		new(): FriendMsgReadAck;
		decode(buffer: ArrayBuffer) : FriendMsgReadAck;
		//decode(buffer: NodeBuffer) : FriendMsgReadAck;
		//decode(buffer: ByteArrayBuffer) : FriendMsgReadAck;
		decode64(buffer: string) : FriendMsgReadAck;
		
	}
}


declare module pb {

	var FriendUserInfoReq: FriendUserInfoReq;
	export interface FriendUserInfoReq extends ProtoBufModel {
		new(obj?: any): FriendUserInfoReq;
		friendId?: number;
		
	}

	export interface FriendUserInfoReqBuilder {
		new(): FriendUserInfoReq;
		decode(buffer: ArrayBuffer) : FriendUserInfoReq;
		//decode(buffer: NodeBuffer) : FriendUserInfoReq;
		//decode(buffer: ByteArrayBuffer) : FriendUserInfoReq;
		decode64(buffer: string) : FriendUserInfoReq;
		
	}
}


declare module pb {

	var FriendUserInfoAck: FriendUserInfoAck;
	export interface FriendUserInfoAck extends ProtoBufModel {
		new(obj?: any): FriendUserInfoAck;
		friendUserInfo?: FriendUserInfo;
		
	}

	export interface FriendUserInfoAckBuilder {
		new(): FriendUserInfoAck;
		decode(buffer: ArrayBuffer) : FriendUserInfoAck;
		//decode(buffer: NodeBuffer) : FriendUserInfoAck;
		//decode(buffer: ByteArrayBuffer) : FriendUserInfoAck;
		decode64(buffer: string) : FriendUserInfoAck;
		
	}
}


declare module pb {

	var FriendMsgReq: FriendMsgReq;
	export interface FriendMsgReq extends ProtoBufModel {
		new(obj?: any): FriendMsgReq;
		friendId?: number;
		
	}

	export interface FriendMsgReqBuilder {
		new(): FriendMsgReq;
		decode(buffer: ArrayBuffer) : FriendMsgReq;
		//decode(buffer: NodeBuffer) : FriendMsgReq;
		//decode(buffer: ByteArrayBuffer) : FriendMsgReq;
		decode64(buffer: string) : FriendMsgReq;
		
	}
}


declare module pb {

	var FriendMsgAck: FriendMsgAck;
	export interface FriendMsgAck extends ProtoBufModel {
		new(obj?: any): FriendMsgAck;
		friendId?: number;
		msgLog: MsgLog[];
		
	}

	export interface FriendMsgAckBuilder {
		new(): FriendMsgAck;
		decode(buffer: ArrayBuffer) : FriendMsgAck;
		//decode(buffer: NodeBuffer) : FriendMsgAck;
		//decode(buffer: ByteArrayBuffer) : FriendMsgAck;
		decode64(buffer: string) : FriendMsgAck;
		
	}
}


declare module pb {

	var FriendApplyAddReq: FriendApplyAddReq;
	export interface FriendApplyAddReq extends ProtoBufModel {
		new(obj?: any): FriendApplyAddReq;
		friendId?: number;
		
	}

	export interface FriendApplyAddReqBuilder {
		new(): FriendApplyAddReq;
		decode(buffer: ArrayBuffer) : FriendApplyAddReq;
		//decode(buffer: NodeBuffer) : FriendApplyAddReq;
		//decode(buffer: ByteArrayBuffer) : FriendApplyAddReq;
		decode64(buffer: string) : FriendApplyAddReq;
		
	}
}


declare module pb {

	var FriendApplyAddNtf: FriendApplyAddNtf;
	export interface FriendApplyAddNtf extends ProtoBufModel {
		new(obj?: any): FriendApplyAddNtf;
		friendId?: number;
		
	}

	export interface FriendApplyAddNtfBuilder {
		new(): FriendApplyAddNtf;
		decode(buffer: ArrayBuffer) : FriendApplyAddNtf;
		//decode(buffer: NodeBuffer) : FriendApplyAddNtf;
		//decode(buffer: ByteArrayBuffer) : FriendApplyAddNtf;
		decode64(buffer: string) : FriendApplyAddNtf;
		
	}
}


declare module pb {

	var FriendApplyAgreeReq: FriendApplyAgreeReq;
	export interface FriendApplyAgreeReq extends ProtoBufModel {
		new(obj?: any): FriendApplyAgreeReq;
		friendId?: number;
		
	}

	export interface FriendApplyAgreeReqBuilder {
		new(): FriendApplyAgreeReq;
		decode(buffer: ArrayBuffer) : FriendApplyAgreeReq;
		//decode(buffer: NodeBuffer) : FriendApplyAgreeReq;
		//decode(buffer: ByteArrayBuffer) : FriendApplyAgreeReq;
		decode64(buffer: string) : FriendApplyAgreeReq;
		
	}
}


declare module pb {

	var FriendApplyAgreeNtf: FriendApplyAgreeNtf;
	export interface FriendApplyAgreeNtf extends ProtoBufModel {
		new(obj?: any): FriendApplyAgreeNtf;
		friendId?: number;
		
	}

	export interface FriendApplyAgreeNtfBuilder {
		new(): FriendApplyAgreeNtf;
		decode(buffer: ArrayBuffer) : FriendApplyAgreeNtf;
		//decode(buffer: NodeBuffer) : FriendApplyAgreeNtf;
		//decode(buffer: ByteArrayBuffer) : FriendApplyAgreeNtf;
		decode64(buffer: string) : FriendApplyAgreeNtf;
		
	}
}


declare module pb {

	var FriendApplyRefuseReq: FriendApplyRefuseReq;
	export interface FriendApplyRefuseReq extends ProtoBufModel {
		new(obj?: any): FriendApplyRefuseReq;
		friendId?: number;
		
	}

	export interface FriendApplyRefuseReqBuilder {
		new(): FriendApplyRefuseReq;
		decode(buffer: ArrayBuffer) : FriendApplyRefuseReq;
		//decode(buffer: NodeBuffer) : FriendApplyRefuseReq;
		//decode(buffer: ByteArrayBuffer) : FriendApplyRefuseReq;
		decode64(buffer: string) : FriendApplyRefuseReq;
		
	}
}


declare module pb {

	var FriendApplyRefuseNtf: FriendApplyRefuseNtf;
	export interface FriendApplyRefuseNtf extends ProtoBufModel {
		new(obj?: any): FriendApplyRefuseNtf;
		friendId?: number;
		
	}

	export interface FriendApplyRefuseNtfBuilder {
		new(): FriendApplyRefuseNtf;
		decode(buffer: ArrayBuffer) : FriendApplyRefuseNtf;
		//decode(buffer: NodeBuffer) : FriendApplyRefuseNtf;
		//decode(buffer: ByteArrayBuffer) : FriendApplyRefuseNtf;
		decode64(buffer: string) : FriendApplyRefuseNtf;
		
	}
}


declare module pb {

	var FriendApplyListReq: FriendApplyListReq;
	export interface FriendApplyListReq extends ProtoBufModel {
		new(obj?: any): FriendApplyListReq;
		
	}

	export interface FriendApplyListReqBuilder {
		new(): FriendApplyListReq;
		decode(buffer: ArrayBuffer) : FriendApplyListReq;
		//decode(buffer: NodeBuffer) : FriendApplyListReq;
		//decode(buffer: ByteArrayBuffer) : FriendApplyListReq;
		decode64(buffer: string) : FriendApplyListReq;
		
	}
}


declare module pb {

	var FriendApplyListAck: FriendApplyListAck;
	export interface FriendApplyListAck extends ProtoBufModel {
		new(obj?: any): FriendApplyListAck;
		applyList: FriendApplyInfo[];
		
	}

	export interface FriendApplyListAckBuilder {
		new(): FriendApplyListAck;
		decode(buffer: ArrayBuffer) : FriendApplyListAck;
		//decode(buffer: NodeBuffer) : FriendApplyListAck;
		//decode(buffer: ByteArrayBuffer) : FriendApplyListAck;
		decode64(buffer: string) : FriendApplyListAck;
		
	}
}


declare module pb {

	var FriendInfo: FriendInfo;
	export interface FriendInfo extends ProtoBufModel {
		new(obj?: any): FriendInfo;
		userInfo?: BriefUserInfo;
		isOnline?: boolean;
		outTime?: number;
		isRead?: boolean;
		lastMsg?: MsgLog;
		
	}

	export interface FriendInfoBuilder {
		new(): FriendInfo;
		decode(buffer: ArrayBuffer) : FriendInfo;
		//decode(buffer: NodeBuffer) : FriendInfo;
		//decode(buffer: ByteArrayBuffer) : FriendInfo;
		decode64(buffer: string) : FriendInfo;
		
	}
}


declare module pb {

	var MsgLog: MsgLog;
	export interface MsgLog extends ProtoBufModel {
		new(obj?: any): MsgLog;
		msg?: string;
		time?: number;
		isMy?: boolean;
		
	}

	export interface MsgLogBuilder {
		new(): MsgLog;
		decode(buffer: ArrayBuffer) : MsgLog;
		//decode(buffer: NodeBuffer) : MsgLog;
		//decode(buffer: ByteArrayBuffer) : MsgLog;
		decode64(buffer: string) : MsgLog;
		
	}
}


declare module pb {

	var FriendApplyInfo: FriendApplyInfo;
	export interface FriendApplyInfo extends ProtoBufModel {
		new(obj?: any): FriendApplyInfo;
		userId?: number;
		nickName?: string;
		lv?: number;
		avatar?: string;
		job?: number;
		sex?: number;
		
	}

	export interface FriendApplyInfoBuilder {
		new(): FriendApplyInfo;
		decode(buffer: ArrayBuffer) : FriendApplyInfo;
		//decode(buffer: NodeBuffer) : FriendApplyInfo;
		//decode(buffer: ByteArrayBuffer) : FriendApplyInfo;
		decode64(buffer: string) : FriendApplyInfo;
		
	}
}


declare module pb {

	var ReportGtNoReq: ReportGtNoReq;
	export interface ReportGtNoReq extends ProtoBufModel {
		new(obj?: any): ReportGtNoReq;
		gateNo?: number;
		gsNo?: number;
		
	}

	export interface ReportGtNoReqBuilder {
		new(): ReportGtNoReq;
		decode(buffer: ArrayBuffer) : ReportGtNoReq;
		//decode(buffer: NodeBuffer) : ReportGtNoReq;
		//decode(buffer: ByteArrayBuffer) : ReportGtNoReq;
		decode64(buffer: string) : ReportGtNoReq;
		
	}
}


declare module pb {

	var ReportGtNoAck: ReportGtNoAck;
	export interface ReportGtNoAck extends ProtoBufModel {
		new(obj?: any): ReportGtNoAck;
		result?: number;
		gateNo?: number;
		gateAddr?: string;
		gsNo?: number;
		
	}

	export interface ReportGtNoAckBuilder {
		new(): ReportGtNoAck;
		decode(buffer: ArrayBuffer) : ReportGtNoAck;
		//decode(buffer: NodeBuffer) : ReportGtNoAck;
		//decode(buffer: ByteArrayBuffer) : ReportGtNoAck;
		decode64(buffer: string) : ReportGtNoAck;
		
	}
}


declare module pb {

	var GsBroadCastNtf: GsBroadCastNtf;
	export interface GsBroadCastNtf extends ProtoBufModel {
		new(obj?: any): GsBroadCastNtf;
		msg?: ByteBuffer;
		
	}

	export interface GsBroadCastNtfBuilder {
		new(): GsBroadCastNtf;
		decode(buffer: ArrayBuffer) : GsBroadCastNtf;
		//decode(buffer: NodeBuffer) : GsBroadCastNtf;
		//decode(buffer: ByteArrayBuffer) : GsBroadCastNtf;
		decode64(buffer: string) : GsBroadCastNtf;
		
	}
}


declare module pb {

	var GsMsgNtf: GsMsgNtf;
	export interface GsMsgNtf extends ProtoBufModel {
		new(obj?: any): GsMsgNtf;
		indexes: number[];
		msg?: ByteBuffer;
		
	}

	export interface GsMsgNtfBuilder {
		new(): GsMsgNtf;
		decode(buffer: ArrayBuffer) : GsMsgNtf;
		//decode(buffer: NodeBuffer) : GsMsgNtf;
		//decode(buffer: ByteArrayBuffer) : GsMsgNtf;
		decode64(buffer: string) : GsMsgNtf;
		
	}
}


declare module pb {

	var ReConnectReq: ReConnectReq;
	export interface ReConnectReq extends ProtoBufModel {
		new(obj?: any): ReConnectReq;
		token?: string;
		openId?: string;
		magic?: number;
		
	}

	export interface ReConnectReqBuilder {
		new(): ReConnectReq;
		decode(buffer: ArrayBuffer) : ReConnectReq;
		//decode(buffer: NodeBuffer) : ReConnectReq;
		//decode(buffer: ByteArrayBuffer) : ReConnectReq;
		decode64(buffer: string) : ReConnectReq;
		
	}
}


declare module pb {

	var ReConnectAck: ReConnectAck;
	export interface ReConnectAck extends ProtoBufModel {
		new(obj?: any): ReConnectAck;
		fail?: number;
		user?: UserLoginInfo;
		reConnectToken?: string;
		
	}

	export interface ReConnectAckBuilder {
		new(): ReConnectAck;
		decode(buffer: ArrayBuffer) : ReConnectAck;
		//decode(buffer: NodeBuffer) : ReConnectAck;
		//decode(buffer: ByteArrayBuffer) : ReConnectAck;
		decode64(buffer: string) : ReConnectAck;
		
	}
}


declare module pb {

	var LogoutReq: LogoutReq;
	export interface LogoutReq extends ProtoBufModel {
		new(obj?: any): LogoutReq;
		reason?: number;
		
	}

	export interface LogoutReqBuilder {
		new(): LogoutReq;
		decode(buffer: ArrayBuffer) : LogoutReq;
		//decode(buffer: NodeBuffer) : LogoutReq;
		//decode(buffer: ByteArrayBuffer) : LogoutReq;
		decode64(buffer: string) : LogoutReq;
		
	}
}


declare module pb {

	var LogoutAck: LogoutAck;
	export interface LogoutAck extends ProtoBufModel {
		new(obj?: any): LogoutAck;
		result?: number;
		
	}

	export interface LogoutAckBuilder {
		new(): LogoutAck;
		decode(buffer: ArrayBuffer) : LogoutAck;
		//decode(buffer: NodeBuffer) : LogoutAck;
		//decode(buffer: ByteArrayBuffer) : LogoutAck;
		decode64(buffer: string) : LogoutAck;
		
	}
}


declare module pb {

	var OfflineReq: OfflineReq;
	export interface OfflineReq extends ProtoBufModel {
		new(obj?: any): OfflineReq;
		src?: number;
		userId?: number;
		CNo?: number;
		reason?: number;
		
	}

	export interface OfflineReqBuilder {
		new(): OfflineReq;
		decode(buffer: ArrayBuffer) : OfflineReq;
		//decode(buffer: NodeBuffer) : OfflineReq;
		//decode(buffer: ByteArrayBuffer) : OfflineReq;
		decode64(buffer: string) : OfflineReq;
		
	}
}


declare module pb {

	var ChatReq: ChatReq;
	export interface ChatReq extends ProtoBufModel {
		new(obj?: any): ChatReq;
		typ?: number;
		desId?: number;
		pNo?: number;
		msg?: string;
		
	}

	export interface ChatReqBuilder {
		new(): ChatReq;
		decode(buffer: ArrayBuffer) : ChatReq;
		//decode(buffer: NodeBuffer) : ChatReq;
		//decode(buffer: ByteArrayBuffer) : ChatReq;
		decode64(buffer: string) : ChatReq;
		
	}
}


declare module pb {

	var ChatRsp: ChatRsp;
	export interface ChatRsp extends ProtoBufModel {
		new(obj?: any): ChatRsp;
		typ?: number;
		srcId?: number;
		msg?: string;
		
	}

	export interface ChatRspBuilder {
		new(): ChatRsp;
		decode(buffer: ArrayBuffer) : ChatRsp;
		//decode(buffer: NodeBuffer) : ChatRsp;
		//decode(buffer: ByteArrayBuffer) : ChatRsp;
		decode64(buffer: string) : ChatRsp;
		
	}
}


declare module pb {

	var OnlineNumReq: OnlineNumReq;
	export interface OnlineNumReq extends ProtoBufModel {
		new(obj?: any): OnlineNumReq;
		gateNo?: number;
		
	}

	export interface OnlineNumReqBuilder {
		new(): OnlineNumReq;
		decode(buffer: ArrayBuffer) : OnlineNumReq;
		//decode(buffer: NodeBuffer) : OnlineNumReq;
		//decode(buffer: ByteArrayBuffer) : OnlineNumReq;
		decode64(buffer: string) : OnlineNumReq;
		
	}
}


declare module pb {

	var OnlineNumAck: OnlineNumAck;
	export interface OnlineNumAck extends ProtoBufModel {
		new(obj?: any): OnlineNumAck;
		gsNo?: number;
		onlines?: number;
		
	}

	export interface OnlineNumAckBuilder {
		new(): OnlineNumAck;
		decode(buffer: ArrayBuffer) : OnlineNumAck;
		//decode(buffer: NodeBuffer) : OnlineNumAck;
		//decode(buffer: ByteArrayBuffer) : OnlineNumAck;
		decode64(buffer: string) : OnlineNumAck;
		
	}
}


declare module pb {

	var MsgNtf: MsgNtf;
	export interface MsgNtf extends ProtoBufModel {
		new(obj?: any): MsgNtf;
		typ?: number;
		srcId?: number;
		msg?: string;
		
	}

	export interface MsgNtfBuilder {
		new(): MsgNtf;
		decode(buffer: ArrayBuffer) : MsgNtf;
		//decode(buffer: NodeBuffer) : MsgNtf;
		//decode(buffer: ByteArrayBuffer) : MsgNtf;
		decode64(buffer: string) : MsgNtf;
		
	}
}


declare module pb {

	var PreJumpGsReq: PreJumpGsReq;
	export interface PreJumpGsReq extends ProtoBufModel {
		new(obj?: any): PreJumpGsReq;
		cNo?: number;
		pNo?: number;
		userId?: number;
		
	}

	export interface PreJumpGsReqBuilder {
		new(): PreJumpGsReq;
		decode(buffer: ArrayBuffer) : PreJumpGsReq;
		//decode(buffer: NodeBuffer) : PreJumpGsReq;
		//decode(buffer: ByteArrayBuffer) : PreJumpGsReq;
		decode64(buffer: string) : PreJumpGsReq;
		
	}
}


declare module pb {

	var DoJumpGsReq: DoJumpGsReq;
	export interface DoJumpGsReq extends ProtoBufModel {
		new(obj?: any): DoJumpGsReq;
		cNo?: number;
		pNo?: number;
		desGsNo?: number;
		reason?: number;
		args?: ByteBuffer;
		userId?: number;
		
	}

	export interface DoJumpGsReqBuilder {
		new(): DoJumpGsReq;
		decode(buffer: ArrayBuffer) : DoJumpGsReq;
		//decode(buffer: NodeBuffer) : DoJumpGsReq;
		//decode(buffer: ByteArrayBuffer) : DoJumpGsReq;
		decode64(buffer: string) : DoJumpGsReq;
		
	}
}


declare module pb {

	var JumpGsReq: JumpGsReq;
	export interface JumpGsReq extends ProtoBufModel {
		new(obj?: any): JumpGsReq;
		cNo?: number;
		pNo?: number;
		reason?: number;
		arg1?: number;
		userId?: number;
		
	}

	export interface JumpGsReqBuilder {
		new(): JumpGsReq;
		decode(buffer: ArrayBuffer) : JumpGsReq;
		//decode(buffer: NodeBuffer) : JumpGsReq;
		//decode(buffer: ByteArrayBuffer) : JumpGsReq;
		decode64(buffer: string) : JumpGsReq;
		
	}
}


declare module pb {

	var BenchMarkReq: BenchMarkReq;
	export interface BenchMarkReq extends ProtoBufModel {
		new(obj?: any): BenchMarkReq;
		magic?: number;
		magic2?: number;
		magic3?: number;
		magic4?: number;
		
	}

	export interface BenchMarkReqBuilder {
		new(): BenchMarkReq;
		decode(buffer: ArrayBuffer) : BenchMarkReq;
		//decode(buffer: NodeBuffer) : BenchMarkReq;
		//decode(buffer: ByteArrayBuffer) : BenchMarkReq;
		decode64(buffer: string) : BenchMarkReq;
		
	}
}


declare module pb {

	var BenchMarkAck: BenchMarkAck;
	export interface BenchMarkAck extends ProtoBufModel {
		new(obj?: any): BenchMarkAck;
		magic?: number;
		magic2?: number;
		magic3?: number;
		magic4?: number;
		magic100?: number;
		
	}

	export interface BenchMarkAckBuilder {
		new(): BenchMarkAck;
		decode(buffer: ArrayBuffer) : BenchMarkAck;
		//decode(buffer: NodeBuffer) : BenchMarkAck;
		//decode(buffer: ByteArrayBuffer) : BenchMarkAck;
		decode64(buffer: string) : BenchMarkAck;
		
	}
}


declare module pb {

	var KeepAliveRpt: KeepAliveRpt;
	export interface KeepAliveRpt extends ProtoBufModel {
		new(obj?: any): KeepAliveRpt;
		mark?: number;
		
	}

	export interface KeepAliveRptBuilder {
		new(): KeepAliveRpt;
		decode(buffer: ArrayBuffer) : KeepAliveRpt;
		//decode(buffer: NodeBuffer) : KeepAliveRpt;
		//decode(buffer: ByteArrayBuffer) : KeepAliveRpt;
		decode64(buffer: string) : KeepAliveRpt;
		
	}
}


declare module pb {

	var OpenGiftReq: OpenGiftReq;
	export interface OpenGiftReq extends ProtoBufModel {
		new(obj?: any): OpenGiftReq;
		type?: number;
		itemId?: number;
		chooseItemId: number[];
		num?: number;
		
	}

	export interface OpenGiftReqBuilder {
		new(): OpenGiftReq;
		decode(buffer: ArrayBuffer) : OpenGiftReq;
		//decode(buffer: NodeBuffer) : OpenGiftReq;
		//decode(buffer: ByteArrayBuffer) : OpenGiftReq;
		decode64(buffer: string) : OpenGiftReq;
		
	}
}


declare module pb {

	var OpenGiftAck: OpenGiftAck;
	export interface OpenGiftAck extends ProtoBufModel {
		new(obj?: any): OpenGiftAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface OpenGiftAckBuilder {
		new(): OpenGiftAck;
		decode(buffer: ArrayBuffer) : OpenGiftAck;
		//decode(buffer: NodeBuffer) : OpenGiftAck;
		//decode(buffer: ByteArrayBuffer) : OpenGiftAck;
		decode64(buffer: string) : OpenGiftAck;
		
	}
}


declare module pb {

	var GiftCodeRewardReq: GiftCodeRewardReq;
	export interface GiftCodeRewardReq extends ProtoBufModel {
		new(obj?: any): GiftCodeRewardReq;
		code?: string;
		
	}

	export interface GiftCodeRewardReqBuilder {
		new(): GiftCodeRewardReq;
		decode(buffer: ArrayBuffer) : GiftCodeRewardReq;
		//decode(buffer: NodeBuffer) : GiftCodeRewardReq;
		//decode(buffer: ByteArrayBuffer) : GiftCodeRewardReq;
		decode64(buffer: string) : GiftCodeRewardReq;
		
	}
}


declare module pb {

	var GiftCodeRewardAck: GiftCodeRewardAck;
	export interface GiftCodeRewardAck extends ProtoBufModel {
		new(obj?: any): GiftCodeRewardAck;
		code?: string;
		goods?: GoodsChangeNtf;
		
	}

	export interface GiftCodeRewardAckBuilder {
		new(): GiftCodeRewardAck;
		decode(buffer: ArrayBuffer) : GiftCodeRewardAck;
		//decode(buffer: NodeBuffer) : GiftCodeRewardAck;
		//decode(buffer: ByteArrayBuffer) : GiftCodeRewardAck;
		decode64(buffer: string) : GiftCodeRewardAck;
		
	}
}


declare module pb {

	var LimitedGiftNtf: LimitedGiftNtf;
	export interface LimitedGiftNtf extends ProtoBufModel {
		new(obj?: any): LimitedGiftNtf;
		list: LimitedGiftInfo[];
		
	}

	export interface LimitedGiftNtfBuilder {
		new(): LimitedGiftNtf;
		decode(buffer: ArrayBuffer) : LimitedGiftNtf;
		//decode(buffer: NodeBuffer) : LimitedGiftNtf;
		//decode(buffer: ByteArrayBuffer) : LimitedGiftNtf;
		decode64(buffer: string) : LimitedGiftNtf;
		
	}
}


declare module pb {

	var LimitedGiftBuyReq: LimitedGiftBuyReq;
	export interface LimitedGiftBuyReq extends ProtoBufModel {
		new(obj?: any): LimitedGiftBuyReq;
		type?: number;
		
	}

	export interface LimitedGiftBuyReqBuilder {
		new(): LimitedGiftBuyReq;
		decode(buffer: ArrayBuffer) : LimitedGiftBuyReq;
		//decode(buffer: NodeBuffer) : LimitedGiftBuyReq;
		//decode(buffer: ByteArrayBuffer) : LimitedGiftBuyReq;
		decode64(buffer: string) : LimitedGiftBuyReq;
		
	}
}


declare module pb {

	var LimitedGiftBuyAck: LimitedGiftBuyAck;
	export interface LimitedGiftBuyAck extends ProtoBufModel {
		new(obj?: any): LimitedGiftBuyAck;
		goods?: GoodsChangeNtf;
		type?: number;
		
	}

	export interface LimitedGiftBuyAckBuilder {
		new(): LimitedGiftBuyAck;
		decode(buffer: ArrayBuffer) : LimitedGiftBuyAck;
		//decode(buffer: NodeBuffer) : LimitedGiftBuyAck;
		//decode(buffer: ByteArrayBuffer) : LimitedGiftBuyAck;
		decode64(buffer: string) : LimitedGiftBuyAck;
		
	}
}


declare module pb {

	var LimitedGiftReq: LimitedGiftReq;
	export interface LimitedGiftReq extends ProtoBufModel {
		new(obj?: any): LimitedGiftReq;
		
	}

	export interface LimitedGiftReqBuilder {
		new(): LimitedGiftReq;
		decode(buffer: ArrayBuffer) : LimitedGiftReq;
		//decode(buffer: NodeBuffer) : LimitedGiftReq;
		//decode(buffer: ByteArrayBuffer) : LimitedGiftReq;
		decode64(buffer: string) : LimitedGiftReq;
		
	}
}


declare module pb {

	var LimitedGiftInfo: LimitedGiftInfo;
	export interface LimitedGiftInfo extends ProtoBufModel {
		new(obj?: any): LimitedGiftInfo;
		type?: number;
		lv?: number;
		grade?: number;
		startTime?: number;
		endTime?: number;
		
	}

	export interface LimitedGiftInfoBuilder {
		new(): LimitedGiftInfo;
		decode(buffer: ArrayBuffer) : LimitedGiftInfo;
		//decode(buffer: NodeBuffer) : LimitedGiftInfo;
		//decode(buffer: ByteArrayBuffer) : LimitedGiftInfo;
		decode64(buffer: string) : LimitedGiftInfo;
		
	}
}


declare module pb {

	var OpenGiftBuyNtf: OpenGiftBuyNtf;
	export interface OpenGiftBuyNtf extends ProtoBufModel {
		new(obj?: any): OpenGiftBuyNtf;
		goods?: GoodsChangeNtf;
		openGiftId?: number;
		buyNum?: number;
		
	}

	export interface OpenGiftBuyNtfBuilder {
		new(): OpenGiftBuyNtf;
		decode(buffer: ArrayBuffer) : OpenGiftBuyNtf;
		//decode(buffer: NodeBuffer) : OpenGiftBuyNtf;
		//decode(buffer: ByteArrayBuffer) : OpenGiftBuyNtf;
		decode64(buffer: string) : OpenGiftBuyNtf;
		
	}
}


declare module pb {

	var OpenGiftEndTimeReq: OpenGiftEndTimeReq;
	export interface OpenGiftEndTimeReq extends ProtoBufModel {
		new(obj?: any): OpenGiftEndTimeReq;
		
	}

	export interface OpenGiftEndTimeReqBuilder {
		new(): OpenGiftEndTimeReq;
		decode(buffer: ArrayBuffer) : OpenGiftEndTimeReq;
		//decode(buffer: NodeBuffer) : OpenGiftEndTimeReq;
		//decode(buffer: ByteArrayBuffer) : OpenGiftEndTimeReq;
		decode64(buffer: string) : OpenGiftEndTimeReq;
		
	}
}


declare module pb {

	var OpenGiftEndTimeAck: OpenGiftEndTimeAck;
	export interface OpenGiftEndTimeAck extends ProtoBufModel {
		new(obj?: any): OpenGiftEndTimeAck;
		endTime?: number;
		
	}

	export interface OpenGiftEndTimeAckBuilder {
		new(): OpenGiftEndTimeAck;
		decode(buffer: ArrayBuffer) : OpenGiftEndTimeAck;
		//decode(buffer: NodeBuffer) : OpenGiftEndTimeAck;
		//decode(buffer: ByteArrayBuffer) : OpenGiftEndTimeAck;
		decode64(buffer: string) : OpenGiftEndTimeAck;
		
	}
}


declare module pb {

	var GodEquipActiveReq: GodEquipActiveReq;
	export interface GodEquipActiveReq extends ProtoBufModel {
		new(obj?: any): GodEquipActiveReq;
		heroIndex?: number;
		id?: number;
		
	}

	export interface GodEquipActiveReqBuilder {
		new(): GodEquipActiveReq;
		decode(buffer: ArrayBuffer) : GodEquipActiveReq;
		//decode(buffer: NodeBuffer) : GodEquipActiveReq;
		//decode(buffer: ByteArrayBuffer) : GodEquipActiveReq;
		decode64(buffer: string) : GodEquipActiveReq;
		
	}
}


declare module pb {

	var GodEquipActiveAck: GodEquipActiveAck;
	export interface GodEquipActiveAck extends ProtoBufModel {
		new(obj?: any): GodEquipActiveAck;
		heroIndex?: number;
		godEquip?: GodEquip;
		
	}

	export interface GodEquipActiveAckBuilder {
		new(): GodEquipActiveAck;
		decode(buffer: ArrayBuffer) : GodEquipActiveAck;
		//decode(buffer: NodeBuffer) : GodEquipActiveAck;
		//decode(buffer: ByteArrayBuffer) : GodEquipActiveAck;
		decode64(buffer: string) : GodEquipActiveAck;
		
	}
}


declare module pb {

	var GodEquipUpLevelReq: GodEquipUpLevelReq;
	export interface GodEquipUpLevelReq extends ProtoBufModel {
		new(obj?: any): GodEquipUpLevelReq;
		heroIndex?: number;
		id?: number;
		
	}

	export interface GodEquipUpLevelReqBuilder {
		new(): GodEquipUpLevelReq;
		decode(buffer: ArrayBuffer) : GodEquipUpLevelReq;
		//decode(buffer: NodeBuffer) : GodEquipUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : GodEquipUpLevelReq;
		decode64(buffer: string) : GodEquipUpLevelReq;
		
	}
}


declare module pb {

	var GodEquipUpLevelAck: GodEquipUpLevelAck;
	export interface GodEquipUpLevelAck extends ProtoBufModel {
		new(obj?: any): GodEquipUpLevelAck;
		heroIndex?: number;
		godEquip?: GodEquip;
		
	}

	export interface GodEquipUpLevelAckBuilder {
		new(): GodEquipUpLevelAck;
		decode(buffer: ArrayBuffer) : GodEquipUpLevelAck;
		//decode(buffer: NodeBuffer) : GodEquipUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : GodEquipUpLevelAck;
		decode64(buffer: string) : GodEquipUpLevelAck;
		
	}
}


declare module pb {

	var GodEquipBloodReq: GodEquipBloodReq;
	export interface GodEquipBloodReq extends ProtoBufModel {
		new(obj?: any): GodEquipBloodReq;
		heroIndex?: number;
		godEquipId?: number;
		
	}

	export interface GodEquipBloodReqBuilder {
		new(): GodEquipBloodReq;
		decode(buffer: ArrayBuffer) : GodEquipBloodReq;
		//decode(buffer: NodeBuffer) : GodEquipBloodReq;
		//decode(buffer: ByteArrayBuffer) : GodEquipBloodReq;
		decode64(buffer: string) : GodEquipBloodReq;
		
	}
}


declare module pb {

	var GodEquipBloodAck: GodEquipBloodAck;
	export interface GodEquipBloodAck extends ProtoBufModel {
		new(obj?: any): GodEquipBloodAck;
		heroIndex?: number;
		godEquip?: GodEquip;
		
	}

	export interface GodEquipBloodAckBuilder {
		new(): GodEquipBloodAck;
		decode(buffer: ArrayBuffer) : GodEquipBloodAck;
		//decode(buffer: NodeBuffer) : GodEquipBloodAck;
		//decode(buffer: ByteArrayBuffer) : GodEquipBloodAck;
		decode64(buffer: string) : GodEquipBloodAck;
		
	}
}


declare module pb {

	var GrowFundBuyReq: GrowFundBuyReq;
	export interface GrowFundBuyReq extends ProtoBufModel {
		new(obj?: any): GrowFundBuyReq;
		
	}

	export interface GrowFundBuyReqBuilder {
		new(): GrowFundBuyReq;
		decode(buffer: ArrayBuffer) : GrowFundBuyReq;
		//decode(buffer: NodeBuffer) : GrowFundBuyReq;
		//decode(buffer: ByteArrayBuffer) : GrowFundBuyReq;
		decode64(buffer: string) : GrowFundBuyReq;
		
	}
}


declare module pb {

	var GrowFundBuyAck: GrowFundBuyAck;
	export interface GrowFundBuyAck extends ProtoBufModel {
		new(obj?: any): GrowFundBuyAck;
		isBuy?: boolean;
		
	}

	export interface GrowFundBuyAckBuilder {
		new(): GrowFundBuyAck;
		decode(buffer: ArrayBuffer) : GrowFundBuyAck;
		//decode(buffer: NodeBuffer) : GrowFundBuyAck;
		//decode(buffer: ByteArrayBuffer) : GrowFundBuyAck;
		decode64(buffer: string) : GrowFundBuyAck;
		
	}
}


declare module pb {

	var GrowFundRewardReq: GrowFundRewardReq;
	export interface GrowFundRewardReq extends ProtoBufModel {
		new(obj?: any): GrowFundRewardReq;
		id?: number;
		
	}

	export interface GrowFundRewardReqBuilder {
		new(): GrowFundRewardReq;
		decode(buffer: ArrayBuffer) : GrowFundRewardReq;
		//decode(buffer: NodeBuffer) : GrowFundRewardReq;
		//decode(buffer: ByteArrayBuffer) : GrowFundRewardReq;
		decode64(buffer: string) : GrowFundRewardReq;
		
	}
}


declare module pb {

	var GrowFundRewardAck: GrowFundRewardAck;
	export interface GrowFundRewardAck extends ProtoBufModel {
		new(obj?: any): GrowFundRewardAck;
		id?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface GrowFundRewardAckBuilder {
		new(): GrowFundRewardAck;
		decode(buffer: ArrayBuffer) : GrowFundRewardAck;
		//decode(buffer: NodeBuffer) : GrowFundRewardAck;
		//decode(buffer: ByteArrayBuffer) : GrowFundRewardAck;
		decode64(buffer: string) : GrowFundRewardAck;
		
	}
}


declare module pb {

	var EnterGuardPillarReq: EnterGuardPillarReq;
	export interface EnterGuardPillarReq extends ProtoBufModel {
		new(obj?: any): EnterGuardPillarReq;
		stageId?: number;
		
	}

	export interface EnterGuardPillarReqBuilder {
		new(): EnterGuardPillarReq;
		decode(buffer: ArrayBuffer) : EnterGuardPillarReq;
		//decode(buffer: NodeBuffer) : EnterGuardPillarReq;
		//decode(buffer: ByteArrayBuffer) : EnterGuardPillarReq;
		decode64(buffer: string) : EnterGuardPillarReq;
		
	}
}


declare module pb {

	var GuardPillarResultNtf: GuardPillarResultNtf;
	export interface GuardPillarResultNtf extends ProtoBufModel {
		new(obj?: any): GuardPillarResultNtf;
		stageId?: number;
		rounds?: number;
		rank?: number;
		roundGoods?: GoodsChangeNtf;
		rankGoods?: GoodsChangeNtf;
		
	}

	export interface GuardPillarResultNtfBuilder {
		new(): GuardPillarResultNtf;
		decode(buffer: ArrayBuffer) : GuardPillarResultNtf;
		//decode(buffer: NodeBuffer) : GuardPillarResultNtf;
		//decode(buffer: ByteArrayBuffer) : GuardPillarResultNtf;
		decode64(buffer: string) : GuardPillarResultNtf;
		
	}
}


declare module pb {

	var GuildLoadInfoReq: GuildLoadInfoReq;
	export interface GuildLoadInfoReq extends ProtoBufModel {
		new(obj?: any): GuildLoadInfoReq;
		
	}

	export interface GuildLoadInfoReqBuilder {
		new(): GuildLoadInfoReq;
		decode(buffer: ArrayBuffer) : GuildLoadInfoReq;
		//decode(buffer: NodeBuffer) : GuildLoadInfoReq;
		//decode(buffer: ByteArrayBuffer) : GuildLoadInfoReq;
		decode64(buffer: string) : GuildLoadInfoReq;
		
	}
}


declare module pb {

	var GuildLoadInfoAck: GuildLoadInfoAck;
	export interface GuildLoadInfoAck extends ProtoBufModel {
		new(obj?: any): GuildLoadInfoAck;
		guildInfo?: GuildInfo;
		
	}

	export interface GuildLoadInfoAckBuilder {
		new(): GuildLoadInfoAck;
		decode(buffer: ArrayBuffer) : GuildLoadInfoAck;
		//decode(buffer: NodeBuffer) : GuildLoadInfoAck;
		//decode(buffer: ByteArrayBuffer) : GuildLoadInfoAck;
		decode64(buffer: string) : GuildLoadInfoAck;
		
	}
}


declare module pb {

	var CreateGuildReq: CreateGuildReq;
	export interface CreateGuildReq extends ProtoBufModel {
		new(obj?: any): CreateGuildReq;
		GuildName?: string;
		GuildIcon?: string;
		Notice?: string;
		
	}

	export interface CreateGuildReqBuilder {
		new(): CreateGuildReq;
		decode(buffer: ArrayBuffer) : CreateGuildReq;
		//decode(buffer: NodeBuffer) : CreateGuildReq;
		//decode(buffer: ByteArrayBuffer) : CreateGuildReq;
		decode64(buffer: string) : CreateGuildReq;
		
	}
}


declare module pb {

	var CreateGuildAck: CreateGuildAck;
	export interface CreateGuildAck extends ProtoBufModel {
		new(obj?: any): CreateGuildAck;
		guildInfo?: GuildInfo;
		success?: boolean;
		
	}

	export interface CreateGuildAckBuilder {
		new(): CreateGuildAck;
		decode(buffer: ArrayBuffer) : CreateGuildAck;
		//decode(buffer: NodeBuffer) : CreateGuildAck;
		//decode(buffer: ByteArrayBuffer) : CreateGuildAck;
		decode64(buffer: string) : CreateGuildAck;
		
	}
}


declare module pb {

	var JoinGuildCombatLimitReq: JoinGuildCombatLimitReq;
	export interface JoinGuildCombatLimitReq extends ProtoBufModel {
		new(obj?: any): JoinGuildCombatLimitReq;
		combat?: number;
		isAgree?: number;
		
	}

	export interface JoinGuildCombatLimitReqBuilder {
		new(): JoinGuildCombatLimitReq;
		decode(buffer: ArrayBuffer) : JoinGuildCombatLimitReq;
		//decode(buffer: NodeBuffer) : JoinGuildCombatLimitReq;
		//decode(buffer: ByteArrayBuffer) : JoinGuildCombatLimitReq;
		decode64(buffer: string) : JoinGuildCombatLimitReq;
		
	}
}


declare module pb {

	var JoinGuildCombatLimitAck: JoinGuildCombatLimitAck;
	export interface JoinGuildCombatLimitAck extends ProtoBufModel {
		new(obj?: any): JoinGuildCombatLimitAck;
		success?: boolean;
		limitCombat?: number;
		isAgree?: number;
		
	}

	export interface JoinGuildCombatLimitAckBuilder {
		new(): JoinGuildCombatLimitAck;
		decode(buffer: ArrayBuffer) : JoinGuildCombatLimitAck;
		//decode(buffer: NodeBuffer) : JoinGuildCombatLimitAck;
		//decode(buffer: ByteArrayBuffer) : JoinGuildCombatLimitAck;
		decode64(buffer: string) : JoinGuildCombatLimitAck;
		
	}
}


declare module pb {

	var ModifyBulletinReq: ModifyBulletinReq;
	export interface ModifyBulletinReq extends ProtoBufModel {
		new(obj?: any): ModifyBulletinReq;
		content?: string;
		
	}

	export interface ModifyBulletinReqBuilder {
		new(): ModifyBulletinReq;
		decode(buffer: ArrayBuffer) : ModifyBulletinReq;
		//decode(buffer: NodeBuffer) : ModifyBulletinReq;
		//decode(buffer: ByteArrayBuffer) : ModifyBulletinReq;
		decode64(buffer: string) : ModifyBulletinReq;
		
	}
}


declare module pb {

	var ModifyBulletinAck: ModifyBulletinAck;
	export interface ModifyBulletinAck extends ProtoBufModel {
		new(obj?: any): ModifyBulletinAck;
		success?: boolean;
		content?: string;
		
	}

	export interface ModifyBulletinAckBuilder {
		new(): ModifyBulletinAck;
		decode(buffer: ArrayBuffer) : ModifyBulletinAck;
		//decode(buffer: NodeBuffer) : ModifyBulletinAck;
		//decode(buffer: ByteArrayBuffer) : ModifyBulletinAck;
		decode64(buffer: string) : ModifyBulletinAck;
		
	}
}


declare module pb {

	var QuitGuildReq: QuitGuildReq;
	export interface QuitGuildReq extends ProtoBufModel {
		new(obj?: any): QuitGuildReq;
		
	}

	export interface QuitGuildReqBuilder {
		new(): QuitGuildReq;
		decode(buffer: ArrayBuffer) : QuitGuildReq;
		//decode(buffer: NodeBuffer) : QuitGuildReq;
		//decode(buffer: ByteArrayBuffer) : QuitGuildReq;
		decode64(buffer: string) : QuitGuildReq;
		
	}
}


declare module pb {

	var QuitGuildAck: QuitGuildAck;
	export interface QuitGuildAck extends ProtoBufModel {
		new(obj?: any): QuitGuildAck;
		success?: boolean;
		
	}

	export interface QuitGuildAckBuilder {
		new(): QuitGuildAck;
		decode(buffer: ArrayBuffer) : QuitGuildAck;
		//decode(buffer: NodeBuffer) : QuitGuildAck;
		//decode(buffer: ByteArrayBuffer) : QuitGuildAck;
		decode64(buffer: string) : QuitGuildAck;
		
	}
}


declare module pb {

	var KickOutReq: KickOutReq;
	export interface KickOutReq extends ProtoBufModel {
		new(obj?: any): KickOutReq;
		kickUserId?: number;
		
	}

	export interface KickOutReqBuilder {
		new(): KickOutReq;
		decode(buffer: ArrayBuffer) : KickOutReq;
		//decode(buffer: NodeBuffer) : KickOutReq;
		//decode(buffer: ByteArrayBuffer) : KickOutReq;
		decode64(buffer: string) : KickOutReq;
		
	}
}


declare module pb {

	var KickOutAck: KickOutAck;
	export interface KickOutAck extends ProtoBufModel {
		new(obj?: any): KickOutAck;
		joinCd?: number;
		kickUserId?: number;
		
	}

	export interface KickOutAckBuilder {
		new(): KickOutAck;
		decode(buffer: ArrayBuffer) : KickOutAck;
		//decode(buffer: NodeBuffer) : KickOutAck;
		//decode(buffer: ByteArrayBuffer) : KickOutAck;
		decode64(buffer: string) : KickOutAck;
		
	}
}


declare module pb {

	var ImpeachPresidentReq: ImpeachPresidentReq;
	export interface ImpeachPresidentReq extends ProtoBufModel {
		new(obj?: any): ImpeachPresidentReq;
		
	}

	export interface ImpeachPresidentReqBuilder {
		new(): ImpeachPresidentReq;
		decode(buffer: ArrayBuffer) : ImpeachPresidentReq;
		//decode(buffer: NodeBuffer) : ImpeachPresidentReq;
		//decode(buffer: ByteArrayBuffer) : ImpeachPresidentReq;
		decode64(buffer: string) : ImpeachPresidentReq;
		
	}
}


declare module pb {

	var ImpeachPresidentAck: ImpeachPresidentAck;
	export interface ImpeachPresidentAck extends ProtoBufModel {
		new(obj?: any): ImpeachPresidentAck;
		success?: boolean;
		
	}

	export interface ImpeachPresidentAckBuilder {
		new(): ImpeachPresidentAck;
		decode(buffer: ArrayBuffer) : ImpeachPresidentAck;
		//decode(buffer: NodeBuffer) : ImpeachPresidentAck;
		//decode(buffer: ByteArrayBuffer) : ImpeachPresidentAck;
		decode64(buffer: string) : ImpeachPresidentAck;
		
	}
}


declare module pb {

	var GuildCheckMemberInfoReq: GuildCheckMemberInfoReq;
	export interface GuildCheckMemberInfoReq extends ProtoBufModel {
		new(obj?: any): GuildCheckMemberInfoReq;
		userId?: number;
		
	}

	export interface GuildCheckMemberInfoReqBuilder {
		new(): GuildCheckMemberInfoReq;
		decode(buffer: ArrayBuffer) : GuildCheckMemberInfoReq;
		//decode(buffer: NodeBuffer) : GuildCheckMemberInfoReq;
		//decode(buffer: ByteArrayBuffer) : GuildCheckMemberInfoReq;
		decode64(buffer: string) : GuildCheckMemberInfoReq;
		
	}
}


declare module pb {

	var GuildCheckMemberInfoAck: GuildCheckMemberInfoAck;
	export interface GuildCheckMemberInfoAck extends ProtoBufModel {
		new(obj?: any): GuildCheckMemberInfoAck;
		guildInfo?: GuildInfo;
		
	}

	export interface GuildCheckMemberInfoAckBuilder {
		new(): GuildCheckMemberInfoAck;
		decode(buffer: ArrayBuffer) : GuildCheckMemberInfoAck;
		//decode(buffer: NodeBuffer) : GuildCheckMemberInfoAck;
		//decode(buffer: ByteArrayBuffer) : GuildCheckMemberInfoAck;
		decode64(buffer: string) : GuildCheckMemberInfoAck;
		
	}
}


declare module pb {

	var ApplyJoinGuildReq: ApplyJoinGuildReq;
	export interface ApplyJoinGuildReq extends ProtoBufModel {
		new(obj?: any): ApplyJoinGuildReq;
		guildId?: number;
		
	}

	export interface ApplyJoinGuildReqBuilder {
		new(): ApplyJoinGuildReq;
		decode(buffer: ArrayBuffer) : ApplyJoinGuildReq;
		//decode(buffer: NodeBuffer) : ApplyJoinGuildReq;
		//decode(buffer: ByteArrayBuffer) : ApplyJoinGuildReq;
		decode64(buffer: string) : ApplyJoinGuildReq;
		
	}
}


declare module pb {

	var ApplyJoinGuildAck: ApplyJoinGuildAck;
	export interface ApplyJoinGuildAck extends ProtoBufModel {
		new(obj?: any): ApplyJoinGuildAck;
		success?: boolean;
		
	}

	export interface ApplyJoinGuildAckBuilder {
		new(): ApplyJoinGuildAck;
		decode(buffer: ArrayBuffer) : ApplyJoinGuildAck;
		//decode(buffer: NodeBuffer) : ApplyJoinGuildAck;
		//decode(buffer: ByteArrayBuffer) : ApplyJoinGuildAck;
		decode64(buffer: string) : ApplyJoinGuildAck;
		
	}
}


declare module pb {

	var GuildAssignReq: GuildAssignReq;
	export interface GuildAssignReq extends ProtoBufModel {
		new(obj?: any): GuildAssignReq;
		id?: number;
		position?: number;
		
	}

	export interface GuildAssignReqBuilder {
		new(): GuildAssignReq;
		decode(buffer: ArrayBuffer) : GuildAssignReq;
		//decode(buffer: NodeBuffer) : GuildAssignReq;
		//decode(buffer: ByteArrayBuffer) : GuildAssignReq;
		decode64(buffer: string) : GuildAssignReq;
		
	}
}


declare module pb {

	var GuildAssignAck: GuildAssignAck;
	export interface GuildAssignAck extends ProtoBufModel {
		new(obj?: any): GuildAssignAck;
		success?: boolean;
		assignUserId?: number;
		nowPosition?: number;
		positionCount: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface GuildAssignAckBuilder {
		new(): GuildAssignAck;
		decode(buffer: ArrayBuffer) : GuildAssignAck;
		//decode(buffer: NodeBuffer) : GuildAssignAck;
		//decode(buffer: ByteArrayBuffer) : GuildAssignAck;
		decode64(buffer: string) : GuildAssignAck;
		
	}
}


declare module pb {

	var AllGuildInfosReq: AllGuildInfosReq;
	export interface AllGuildInfosReq extends ProtoBufModel {
		new(obj?: any): AllGuildInfosReq;
		
	}

	export interface AllGuildInfosReqBuilder {
		new(): AllGuildInfosReq;
		decode(buffer: ArrayBuffer) : AllGuildInfosReq;
		//decode(buffer: NodeBuffer) : AllGuildInfosReq;
		//decode(buffer: ByteArrayBuffer) : AllGuildInfosReq;
		decode64(buffer: string) : AllGuildInfosReq;
		
	}
}


declare module pb {

	var AllGuildInfosAck: AllGuildInfosAck;
	export interface AllGuildInfosAck extends ProtoBufModel {
		new(obj?: any): AllGuildInfosAck;
		guildInfo: GuildInfo[];
		
	}

	export interface AllGuildInfosAckBuilder {
		new(): AllGuildInfosAck;
		decode(buffer: ArrayBuffer) : AllGuildInfosAck;
		//decode(buffer: NodeBuffer) : AllGuildInfosAck;
		//decode(buffer: ByteArrayBuffer) : AllGuildInfosAck;
		decode64(buffer: string) : AllGuildInfosAck;
		
	}
}


declare module pb {

	var DissolveGuildReq: DissolveGuildReq;
	export interface DissolveGuildReq extends ProtoBufModel {
		new(obj?: any): DissolveGuildReq;
		
	}

	export interface DissolveGuildReqBuilder {
		new(): DissolveGuildReq;
		decode(buffer: ArrayBuffer) : DissolveGuildReq;
		//decode(buffer: NodeBuffer) : DissolveGuildReq;
		//decode(buffer: ByteArrayBuffer) : DissolveGuildReq;
		decode64(buffer: string) : DissolveGuildReq;
		
	}
}


declare module pb {

	var DissolveGuildAck: DissolveGuildAck;
	export interface DissolveGuildAck extends ProtoBufModel {
		new(obj?: any): DissolveGuildAck;
		success?: boolean;
		
	}

	export interface DissolveGuildAckBuilder {
		new(): DissolveGuildAck;
		decode(buffer: ArrayBuffer) : DissolveGuildAck;
		//decode(buffer: NodeBuffer) : DissolveGuildAck;
		//decode(buffer: ByteArrayBuffer) : DissolveGuildAck;
		decode64(buffer: string) : DissolveGuildAck;
		
	}
}


declare module pb {

	var JoinGuildDisposeReq: JoinGuildDisposeReq;
	export interface JoinGuildDisposeReq extends ProtoBufModel {
		new(obj?: any): JoinGuildDisposeReq;
		isAgree?: boolean;
		applyUserId?: number;
		
	}

	export interface JoinGuildDisposeReqBuilder {
		new(): JoinGuildDisposeReq;
		decode(buffer: ArrayBuffer) : JoinGuildDisposeReq;
		//decode(buffer: NodeBuffer) : JoinGuildDisposeReq;
		//decode(buffer: ByteArrayBuffer) : JoinGuildDisposeReq;
		decode64(buffer: string) : JoinGuildDisposeReq;
		
	}
}


declare module pb {

	var JoinGuildDisposeAck: JoinGuildDisposeAck;
	export interface JoinGuildDisposeAck extends ProtoBufModel {
		new(obj?: any): JoinGuildDisposeAck;
		success?: boolean;
		applyUserInfo: BriefUserInfo[];
		isHaveJoinGuild?: boolean;
		
	}

	export interface JoinGuildDisposeAckBuilder {
		new(): JoinGuildDisposeAck;
		decode(buffer: ArrayBuffer) : JoinGuildDisposeAck;
		//decode(buffer: NodeBuffer) : JoinGuildDisposeAck;
		//decode(buffer: ByteArrayBuffer) : JoinGuildDisposeAck;
		decode64(buffer: string) : JoinGuildDisposeAck;
		
	}
}


declare module pb {

	var GetApplyUserListReq: GetApplyUserListReq;
	export interface GetApplyUserListReq extends ProtoBufModel {
		new(obj?: any): GetApplyUserListReq;
		
	}

	export interface GetApplyUserListReqBuilder {
		new(): GetApplyUserListReq;
		decode(buffer: ArrayBuffer) : GetApplyUserListReq;
		//decode(buffer: NodeBuffer) : GetApplyUserListReq;
		//decode(buffer: ByteArrayBuffer) : GetApplyUserListReq;
		decode64(buffer: string) : GetApplyUserListReq;
		
	}
}


declare module pb {

	var GetApplyUserListAck: GetApplyUserListAck;
	export interface GetApplyUserListAck extends ProtoBufModel {
		new(obj?: any): GetApplyUserListAck;
		applyUserInfo: BriefUserInfo[];
		
	}

	export interface GetApplyUserListAckBuilder {
		new(): GetApplyUserListAck;
		decode(buffer: ArrayBuffer) : GetApplyUserListAck;
		//decode(buffer: NodeBuffer) : GetApplyUserListAck;
		//decode(buffer: ByteArrayBuffer) : GetApplyUserListAck;
		decode64(buffer: string) : GetApplyUserListAck;
		
	}
}


declare module pb {

	var GuildInfo: GuildInfo;
	export interface GuildInfo extends ProtoBufModel {
		new(obj?: any): GuildInfo;
		guildId?: number;
		GuildName?: string;
		guildLv?: number;
		joinCd?: number;
		guildMenberInfo: GuildMenberInfo[];
		notice?: string;
		combat?: number;
		isAutoAgree?: number;
		positionCount: dcodeIO.ProtoBuf.Map<number,number>;
		onlineUser?: number;
		GuildContributionValue?: number;
		serverId?: number;
		guildPeopleNum?: number;
		huiZhangLv?: number;
		huiZhangName?: string;
		
	}

	export interface GuildInfoBuilder {
		new(): GuildInfo;
		decode(buffer: ArrayBuffer) : GuildInfo;
		//decode(buffer: NodeBuffer) : GuildInfo;
		//decode(buffer: ByteArrayBuffer) : GuildInfo;
		decode64(buffer: string) : GuildInfo;
		
	}
}


declare module pb {

	var GuildMenberInfo: GuildMenberInfo;
	export interface GuildMenberInfo extends ProtoBufModel {
		new(obj?: any): GuildMenberInfo;
		userId?: number;
		position?: number;
		offlineTime?: number;
		guildCapital?: number;
		guildContribution?: number;
		nickName?: string;
		avatar?: string;
		lv?: number;
		combat?: number;
		job?: number;
		sex?: number;
		
	}

	export interface GuildMenberInfoBuilder {
		new(): GuildMenberInfo;
		decode(buffer: ArrayBuffer) : GuildMenberInfo;
		//decode(buffer: NodeBuffer) : GuildMenberInfo;
		//decode(buffer: ByteArrayBuffer) : GuildMenberInfo;
		decode64(buffer: string) : GuildMenberInfo;
		
	}
}


declare module pb {

	var JoinGuildSuccessNtf: JoinGuildSuccessNtf;
	export interface JoinGuildSuccessNtf extends ProtoBufModel {
		new(obj?: any): JoinGuildSuccessNtf;
		userId?: number;
		guildId?: number;
		success?: boolean;
		
	}

	export interface JoinGuildSuccessNtfBuilder {
		new(): JoinGuildSuccessNtf;
		decode(buffer: ArrayBuffer) : JoinGuildSuccessNtf;
		//decode(buffer: NodeBuffer) : JoinGuildSuccessNtf;
		//decode(buffer: ByteArrayBuffer) : JoinGuildSuccessNtf;
		decode64(buffer: string) : JoinGuildSuccessNtf;
		
	}
}


declare module pb {

	var AllJoinGuildDisposeReq: AllJoinGuildDisposeReq;
	export interface AllJoinGuildDisposeReq extends ProtoBufModel {
		new(obj?: any): AllJoinGuildDisposeReq;
		isAgree?: boolean;
		
	}

	export interface AllJoinGuildDisposeReqBuilder {
		new(): AllJoinGuildDisposeReq;
		decode(buffer: ArrayBuffer) : AllJoinGuildDisposeReq;
		//decode(buffer: NodeBuffer) : AllJoinGuildDisposeReq;
		//decode(buffer: ByteArrayBuffer) : AllJoinGuildDisposeReq;
		decode64(buffer: string) : AllJoinGuildDisposeReq;
		
	}
}


declare module pb {

	var AllJoinGuildDisposeAck: AllJoinGuildDisposeAck;
	export interface AllJoinGuildDisposeAck extends ProtoBufModel {
		new(obj?: any): AllJoinGuildDisposeAck;
		applyUserInfo: BriefUserInfo[];
		isFullState?: boolean;
		
	}

	export interface AllJoinGuildDisposeAckBuilder {
		new(): AllJoinGuildDisposeAck;
		decode(buffer: ArrayBuffer) : AllJoinGuildDisposeAck;
		//decode(buffer: NodeBuffer) : AllJoinGuildDisposeAck;
		//decode(buffer: ByteArrayBuffer) : AllJoinGuildDisposeAck;
		decode64(buffer: string) : AllJoinGuildDisposeAck;
		
	}
}


declare module pb {

	var ApplyJoinGuildReDotNtf: ApplyJoinGuildReDotNtf;
	export interface ApplyJoinGuildReDotNtf extends ProtoBufModel {
		new(obj?: any): ApplyJoinGuildReDotNtf;
		
	}

	export interface ApplyJoinGuildReDotNtfBuilder {
		new(): ApplyJoinGuildReDotNtf;
		decode(buffer: ArrayBuffer) : ApplyJoinGuildReDotNtf;
		//decode(buffer: NodeBuffer) : ApplyJoinGuildReDotNtf;
		//decode(buffer: ByteArrayBuffer) : ApplyJoinGuildReDotNtf;
		decode64(buffer: string) : ApplyJoinGuildReDotNtf;
		
	}
}


declare module pb {

	var ImpeachPresidentNtf: ImpeachPresidentNtf;
	export interface ImpeachPresidentNtf extends ProtoBufModel {
		new(obj?: any): ImpeachPresidentNtf;
		newHuiZhangUserId?: number;
		nowPosition?: number;
		oldHuiZhangUserId?: number;
		nowPosition1?: number;
		
	}

	export interface ImpeachPresidentNtfBuilder {
		new(): ImpeachPresidentNtf;
		decode(buffer: ArrayBuffer) : ImpeachPresidentNtf;
		//decode(buffer: NodeBuffer) : ImpeachPresidentNtf;
		//decode(buffer: ByteArrayBuffer) : ImpeachPresidentNtf;
		decode64(buffer: string) : ImpeachPresidentNtf;
		
	}
}


declare module pb {

	var BroadcastGuildChangeNtf: BroadcastGuildChangeNtf;
	export interface BroadcastGuildChangeNtf extends ProtoBufModel {
		new(obj?: any): BroadcastGuildChangeNtf;
		types?: number;
		userInfos: number[];
		positionCount: dcodeIO.ProtoBuf.Map<number,number>;
		guildMenberInfo: GuildMenberInfo[];
		
	}

	export interface BroadcastGuildChangeNtfBuilder {
		new(): BroadcastGuildChangeNtf;
		decode(buffer: ArrayBuffer) : BroadcastGuildChangeNtf;
		//decode(buffer: NodeBuffer) : BroadcastGuildChangeNtf;
		//decode(buffer: ByteArrayBuffer) : BroadcastGuildChangeNtf;
		decode64(buffer: string) : BroadcastGuildChangeNtf;
		
	}
}


declare module pb {

	var GuildActivityOpenNtf: GuildActivityOpenNtf;
	export interface GuildActivityOpenNtf extends ProtoBufModel {
		new(obj?: any): GuildActivityOpenNtf;
		guildActivityId?: number;
		endTime?: number;
		
	}

	export interface GuildActivityOpenNtfBuilder {
		new(): GuildActivityOpenNtf;
		decode(buffer: ArrayBuffer) : GuildActivityOpenNtf;
		//decode(buffer: NodeBuffer) : GuildActivityOpenNtf;
		//decode(buffer: ByteArrayBuffer) : GuildActivityOpenNtf;
		decode64(buffer: string) : GuildActivityOpenNtf;
		
	}
}


declare module pb {

	var GuildActivityLoadReq: GuildActivityLoadReq;
	export interface GuildActivityLoadReq extends ProtoBufModel {
		new(obj?: any): GuildActivityLoadReq;
		guildActivityId?: number;
		
	}

	export interface GuildActivityLoadReqBuilder {
		new(): GuildActivityLoadReq;
		decode(buffer: ArrayBuffer) : GuildActivityLoadReq;
		//decode(buffer: NodeBuffer) : GuildActivityLoadReq;
		//decode(buffer: ByteArrayBuffer) : GuildActivityLoadReq;
		decode64(buffer: string) : GuildActivityLoadReq;
		
	}
}


declare module pb {

	var GuildActivityLoadAck: GuildActivityLoadAck;
	export interface GuildActivityLoadAck extends ProtoBufModel {
		new(obj?: any): GuildActivityLoadAck;
		guildActivityId?: number;
		endTime?: number;
		isClose?: boolean;
		
	}

	export interface GuildActivityLoadAckBuilder {
		new(): GuildActivityLoadAck;
		decode(buffer: ArrayBuffer) : GuildActivityLoadAck;
		//decode(buffer: NodeBuffer) : GuildActivityLoadAck;
		//decode(buffer: ByteArrayBuffer) : GuildActivityLoadAck;
		decode64(buffer: string) : GuildActivityLoadAck;
		
	}
}


declare module pb {

	var GuildBonfireLoadReq: GuildBonfireLoadReq;
	export interface GuildBonfireLoadReq extends ProtoBufModel {
		new(obj?: any): GuildBonfireLoadReq;
		
	}

	export interface GuildBonfireLoadReqBuilder {
		new(): GuildBonfireLoadReq;
		decode(buffer: ArrayBuffer) : GuildBonfireLoadReq;
		//decode(buffer: NodeBuffer) : GuildBonfireLoadReq;
		//decode(buffer: ByteArrayBuffer) : GuildBonfireLoadReq;
		decode64(buffer: string) : GuildBonfireLoadReq;
		
	}
}


declare module pb {

	var GuildBonfireLoadAck: GuildBonfireLoadAck;
	export interface GuildBonfireLoadAck extends ProtoBufModel {
		new(obj?: any): GuildBonfireLoadAck;
		expAddPercent?: number;
		peopleList: WoodPeople[];
		
	}

	export interface GuildBonfireLoadAckBuilder {
		new(): GuildBonfireLoadAck;
		decode(buffer: ArrayBuffer) : GuildBonfireLoadAck;
		//decode(buffer: NodeBuffer) : GuildBonfireLoadAck;
		//decode(buffer: ByteArrayBuffer) : GuildBonfireLoadAck;
		decode64(buffer: string) : GuildBonfireLoadAck;
		
	}
}


declare module pb {

	var GuildBonfireAddExpReq: GuildBonfireAddExpReq;
	export interface GuildBonfireAddExpReq extends ProtoBufModel {
		new(obj?: any): GuildBonfireAddExpReq;
		consumptionType?: number;
		
	}

	export interface GuildBonfireAddExpReqBuilder {
		new(): GuildBonfireAddExpReq;
		decode(buffer: ArrayBuffer) : GuildBonfireAddExpReq;
		//decode(buffer: NodeBuffer) : GuildBonfireAddExpReq;
		//decode(buffer: ByteArrayBuffer) : GuildBonfireAddExpReq;
		decode64(buffer: string) : GuildBonfireAddExpReq;
		
	}
}


declare module pb {

	var GuildBonfireAddExpAck: GuildBonfireAddExpAck;
	export interface GuildBonfireAddExpAck extends ProtoBufModel {
		new(obj?: any): GuildBonfireAddExpAck;
		expAddPercent?: number;
		peopleList: WoodPeople[];
		
	}

	export interface GuildBonfireAddExpAckBuilder {
		new(): GuildBonfireAddExpAck;
		decode(buffer: ArrayBuffer) : GuildBonfireAddExpAck;
		//decode(buffer: NodeBuffer) : GuildBonfireAddExpAck;
		//decode(buffer: ByteArrayBuffer) : GuildBonfireAddExpAck;
		decode64(buffer: string) : GuildBonfireAddExpAck;
		
	}
}


declare module pb {

	var WoodPeople: WoodPeople;
	export interface WoodPeople extends ProtoBufModel {
		new(obj?: any): WoodPeople;
		nickName?: string;
		avatar?: string;
		times?: number;
		types?: number;
		
	}

	export interface WoodPeopleBuilder {
		new(): WoodPeople;
		decode(buffer: ArrayBuffer) : WoodPeople;
		//decode(buffer: NodeBuffer) : WoodPeople;
		//decode(buffer: ByteArrayBuffer) : WoodPeople;
		decode64(buffer: string) : WoodPeople;
		
	}
}


declare module pb {

	var EnterGuildBonfireFightReq: EnterGuildBonfireFightReq;
	export interface EnterGuildBonfireFightReq extends ProtoBufModel {
		new(obj?: any): EnterGuildBonfireFightReq;
		
	}

	export interface EnterGuildBonfireFightReqBuilder {
		new(): EnterGuildBonfireFightReq;
		decode(buffer: ArrayBuffer) : EnterGuildBonfireFightReq;
		//decode(buffer: NodeBuffer) : EnterGuildBonfireFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterGuildBonfireFightReq;
		decode64(buffer: string) : EnterGuildBonfireFightReq;
		
	}
}


declare module pb {

	var GuildBonfireFightNtf: GuildBonfireFightNtf;
	export interface GuildBonfireFightNtf extends ProtoBufModel {
		new(obj?: any): GuildBonfireFightNtf;
		result?: number;
		
	}

	export interface GuildBonfireFightNtfBuilder {
		new(): GuildBonfireFightNtf;
		decode(buffer: ArrayBuffer) : GuildBonfireFightNtf;
		//decode(buffer: NodeBuffer) : GuildBonfireFightNtf;
		//decode(buffer: ByteArrayBuffer) : GuildBonfireFightNtf;
		decode64(buffer: string) : GuildBonfireFightNtf;
		
	}
}


declare module pb {

	var GuildBonfireOpenStateNtf: GuildBonfireOpenStateNtf;
	export interface GuildBonfireOpenStateNtf extends ProtoBufModel {
		new(obj?: any): GuildBonfireOpenStateNtf;
		isOpen?: boolean;
		
	}

	export interface GuildBonfireOpenStateNtfBuilder {
		new(): GuildBonfireOpenStateNtf;
		decode(buffer: ArrayBuffer) : GuildBonfireOpenStateNtf;
		//decode(buffer: NodeBuffer) : GuildBonfireOpenStateNtf;
		//decode(buffer: ByteArrayBuffer) : GuildBonfireOpenStateNtf;
		decode64(buffer: string) : GuildBonfireOpenStateNtf;
		
	}
}


declare module pb {

	var HellBossLoadReq: HellBossLoadReq;
	export interface HellBossLoadReq extends ProtoBufModel {
		new(obj?: any): HellBossLoadReq;
		floor?: number;
		
	}

	export interface HellBossLoadReqBuilder {
		new(): HellBossLoadReq;
		decode(buffer: ArrayBuffer) : HellBossLoadReq;
		//decode(buffer: NodeBuffer) : HellBossLoadReq;
		//decode(buffer: ByteArrayBuffer) : HellBossLoadReq;
		decode64(buffer: string) : HellBossLoadReq;
		
	}
}


declare module pb {

	var HellBossLoadAck: HellBossLoadAck;
	export interface HellBossLoadAck extends ProtoBufModel {
		new(obj?: any): HellBossLoadAck;
		floor?: number;
		list: HellBossNtf[];
		
	}

	export interface HellBossLoadAckBuilder {
		new(): HellBossLoadAck;
		decode(buffer: ArrayBuffer) : HellBossLoadAck;
		//decode(buffer: NodeBuffer) : HellBossLoadAck;
		//decode(buffer: ByteArrayBuffer) : HellBossLoadAck;
		decode64(buffer: string) : HellBossLoadAck;
		
	}
}


declare module pb {

	var HellBossBuyNumReq: HellBossBuyNumReq;
	export interface HellBossBuyNumReq extends ProtoBufModel {
		new(obj?: any): HellBossBuyNumReq;
		use?: boolean;
		buyNum?: number;
		
	}

	export interface HellBossBuyNumReqBuilder {
		new(): HellBossBuyNumReq;
		decode(buffer: ArrayBuffer) : HellBossBuyNumReq;
		//decode(buffer: NodeBuffer) : HellBossBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : HellBossBuyNumReq;
		decode64(buffer: string) : HellBossBuyNumReq;
		
	}
}


declare module pb {

	var HellBossBuyNumAck: HellBossBuyNumAck;
	export interface HellBossBuyNumAck extends ProtoBufModel {
		new(obj?: any): HellBossBuyNumAck;
		buyNum?: number;
		
	}

	export interface HellBossBuyNumAckBuilder {
		new(): HellBossBuyNumAck;
		decode(buffer: ArrayBuffer) : HellBossBuyNumAck;
		//decode(buffer: NodeBuffer) : HellBossBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : HellBossBuyNumAck;
		decode64(buffer: string) : HellBossBuyNumAck;
		
	}
}


declare module pb {

	var HellBossDareNumNtf: HellBossDareNumNtf;
	export interface HellBossDareNumNtf extends ProtoBufModel {
		new(obj?: any): HellBossDareNumNtf;
		dareNum?: number;
		
	}

	export interface HellBossDareNumNtfBuilder {
		new(): HellBossDareNumNtf;
		decode(buffer: ArrayBuffer) : HellBossDareNumNtf;
		//decode(buffer: NodeBuffer) : HellBossDareNumNtf;
		//decode(buffer: ByteArrayBuffer) : HellBossDareNumNtf;
		decode64(buffer: string) : HellBossDareNumNtf;
		
	}
}


declare module pb {

	var EnterHellBossFightReq: EnterHellBossFightReq;
	export interface EnterHellBossFightReq extends ProtoBufModel {
		new(obj?: any): EnterHellBossFightReq;
		stageId?: number;
		
	}

	export interface EnterHellBossFightReqBuilder {
		new(): EnterHellBossFightReq;
		decode(buffer: ArrayBuffer) : EnterHellBossFightReq;
		//decode(buffer: NodeBuffer) : EnterHellBossFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterHellBossFightReq;
		decode64(buffer: string) : EnterHellBossFightReq;
		
	}
}


declare module pb {

	var HellBossFightResultNtf: HellBossFightResultNtf;
	export interface HellBossFightResultNtf extends ProtoBufModel {
		new(obj?: any): HellBossFightResultNtf;
		stageId?: number;
		result?: number;
		dareNum?: number;
		goods?: GoodsChangeNtf;
		winner?: BriefUserInfo;
		isHelper?: boolean;
		helpNum?: number;
		
	}

	export interface HellBossFightResultNtfBuilder {
		new(): HellBossFightResultNtf;
		decode(buffer: ArrayBuffer) : HellBossFightResultNtf;
		//decode(buffer: NodeBuffer) : HellBossFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : HellBossFightResultNtf;
		decode64(buffer: string) : HellBossFightResultNtf;
		
	}
}


declare module pb {

	var HellBossNtf: HellBossNtf;
	export interface HellBossNtf extends ProtoBufModel {
		new(obj?: any): HellBossNtf;
		stageId?: number;
		blood?: number;
		reliveTime?: number;
		
	}

	export interface HellBossNtfBuilder {
		new(): HellBossNtf;
		decode(buffer: ArrayBuffer) : HellBossNtf;
		//decode(buffer: NodeBuffer) : HellBossNtf;
		//decode(buffer: ByteArrayBuffer) : HellBossNtf;
		decode64(buffer: string) : HellBossNtf;
		
	}
}


declare module pb {

	var HolyBeastLoadInfoReq: HolyBeastLoadInfoReq;
	export interface HolyBeastLoadInfoReq extends ProtoBufModel {
		new(obj?: any): HolyBeastLoadInfoReq;
		
	}

	export interface HolyBeastLoadInfoReqBuilder {
		new(): HolyBeastLoadInfoReq;
		decode(buffer: ArrayBuffer) : HolyBeastLoadInfoReq;
		//decode(buffer: NodeBuffer) : HolyBeastLoadInfoReq;
		//decode(buffer: ByteArrayBuffer) : HolyBeastLoadInfoReq;
		decode64(buffer: string) : HolyBeastLoadInfoReq;
		
	}
}


declare module pb {

	var HolyBeastLoadInfoAck: HolyBeastLoadInfoAck;
	export interface HolyBeastLoadInfoAck extends ProtoBufModel {
		new(obj?: any): HolyBeastLoadInfoAck;
		holyBeastInfos: dcodeIO.ProtoBuf.Map<number,HolyBeastInfos>;
		
	}

	export interface HolyBeastLoadInfoAckBuilder {
		new(): HolyBeastLoadInfoAck;
		decode(buffer: ArrayBuffer) : HolyBeastLoadInfoAck;
		//decode(buffer: NodeBuffer) : HolyBeastLoadInfoAck;
		//decode(buffer: ByteArrayBuffer) : HolyBeastLoadInfoAck;
		decode64(buffer: string) : HolyBeastLoadInfoAck;
		
	}
}


declare module pb {

	var HolyBeastActivateReq: HolyBeastActivateReq;
	export interface HolyBeastActivateReq extends ProtoBufModel {
		new(obj?: any): HolyBeastActivateReq;
		heroIndex?: number;
		type?: number;
		
	}

	export interface HolyBeastActivateReqBuilder {
		new(): HolyBeastActivateReq;
		decode(buffer: ArrayBuffer) : HolyBeastActivateReq;
		//decode(buffer: NodeBuffer) : HolyBeastActivateReq;
		//decode(buffer: ByteArrayBuffer) : HolyBeastActivateReq;
		decode64(buffer: string) : HolyBeastActivateReq;
		
	}
}


declare module pb {

	var HolyBeastActivateAck: HolyBeastActivateAck;
	export interface HolyBeastActivateAck extends ProtoBufModel {
		new(obj?: any): HolyBeastActivateAck;
		holyBeastInfos: dcodeIO.ProtoBuf.Map<number,HolyBeastInfos>;
		HolyPoint?: number;
		
	}

	export interface HolyBeastActivateAckBuilder {
		new(): HolyBeastActivateAck;
		decode(buffer: ArrayBuffer) : HolyBeastActivateAck;
		//decode(buffer: NodeBuffer) : HolyBeastActivateAck;
		//decode(buffer: ByteArrayBuffer) : HolyBeastActivateAck;
		decode64(buffer: string) : HolyBeastActivateAck;
		
	}
}


declare module pb {

	var HolyBeastUpStarReq: HolyBeastUpStarReq;
	export interface HolyBeastUpStarReq extends ProtoBufModel {
		new(obj?: any): HolyBeastUpStarReq;
		heroIndex?: number;
		type?: number;
		
	}

	export interface HolyBeastUpStarReqBuilder {
		new(): HolyBeastUpStarReq;
		decode(buffer: ArrayBuffer) : HolyBeastUpStarReq;
		//decode(buffer: NodeBuffer) : HolyBeastUpStarReq;
		//decode(buffer: ByteArrayBuffer) : HolyBeastUpStarReq;
		decode64(buffer: string) : HolyBeastUpStarReq;
		
	}
}


declare module pb {

	var HolyBeastUpStarAck: HolyBeastUpStarAck;
	export interface HolyBeastUpStarAck extends ProtoBufModel {
		new(obj?: any): HolyBeastUpStarAck;
		holyBeastInfos: dcodeIO.ProtoBuf.Map<number,HolyBeastInfos>;
		HolyPoint?: number;
		
	}

	export interface HolyBeastUpStarAckBuilder {
		new(): HolyBeastUpStarAck;
		decode(buffer: ArrayBuffer) : HolyBeastUpStarAck;
		//decode(buffer: NodeBuffer) : HolyBeastUpStarAck;
		//decode(buffer: ByteArrayBuffer) : HolyBeastUpStarAck;
		decode64(buffer: string) : HolyBeastUpStarAck;
		
	}
}


declare module pb {

	var HolyBeastPointAddReq: HolyBeastPointAddReq;
	export interface HolyBeastPointAddReq extends ProtoBufModel {
		new(obj?: any): HolyBeastPointAddReq;
		heroIndex?: number;
		useItemId?: number;
		count?: number;
		
	}

	export interface HolyBeastPointAddReqBuilder {
		new(): HolyBeastPointAddReq;
		decode(buffer: ArrayBuffer) : HolyBeastPointAddReq;
		//decode(buffer: NodeBuffer) : HolyBeastPointAddReq;
		//decode(buffer: ByteArrayBuffer) : HolyBeastPointAddReq;
		decode64(buffer: string) : HolyBeastPointAddReq;
		
	}
}


declare module pb {

	var HolyBeastPointAddAck: HolyBeastPointAddAck;
	export interface HolyBeastPointAddAck extends ProtoBufModel {
		new(obj?: any): HolyBeastPointAddAck;
		heroIndex?: number;
		HolyPoint?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface HolyBeastPointAddAckBuilder {
		new(): HolyBeastPointAddAck;
		decode(buffer: ArrayBuffer) : HolyBeastPointAddAck;
		//decode(buffer: NodeBuffer) : HolyBeastPointAddAck;
		//decode(buffer: ByteArrayBuffer) : HolyBeastPointAddAck;
		decode64(buffer: string) : HolyBeastPointAddAck;
		
	}
}


declare module pb {

	var HolyBeastChoosePropReq: HolyBeastChoosePropReq;
	export interface HolyBeastChoosePropReq extends ProtoBufModel {
		new(obj?: any): HolyBeastChoosePropReq;
		heroIndex?: number;
		type?: number;
		index?: number;
		
	}

	export interface HolyBeastChoosePropReqBuilder {
		new(): HolyBeastChoosePropReq;
		decode(buffer: ArrayBuffer) : HolyBeastChoosePropReq;
		//decode(buffer: NodeBuffer) : HolyBeastChoosePropReq;
		//decode(buffer: ByteArrayBuffer) : HolyBeastChoosePropReq;
		decode64(buffer: string) : HolyBeastChoosePropReq;
		
	}
}


declare module pb {

	var HolyBeastChoosePropAck: HolyBeastChoosePropAck;
	export interface HolyBeastChoosePropAck extends ProtoBufModel {
		new(obj?: any): HolyBeastChoosePropAck;
		holyBeastInfos: dcodeIO.ProtoBuf.Map<number,HolyBeastInfos>;
		
	}

	export interface HolyBeastChoosePropAckBuilder {
		new(): HolyBeastChoosePropAck;
		decode(buffer: ArrayBuffer) : HolyBeastChoosePropAck;
		//decode(buffer: NodeBuffer) : HolyBeastChoosePropAck;
		//decode(buffer: ByteArrayBuffer) : HolyBeastChoosePropAck;
		decode64(buffer: string) : HolyBeastChoosePropAck;
		
	}
}


declare module pb {

	var HolyBeastRestReq: HolyBeastRestReq;
	export interface HolyBeastRestReq extends ProtoBufModel {
		new(obj?: any): HolyBeastRestReq;
		heroIndex?: number;
		type?: number;
		
	}

	export interface HolyBeastRestReqBuilder {
		new(): HolyBeastRestReq;
		decode(buffer: ArrayBuffer) : HolyBeastRestReq;
		//decode(buffer: NodeBuffer) : HolyBeastRestReq;
		//decode(buffer: ByteArrayBuffer) : HolyBeastRestReq;
		decode64(buffer: string) : HolyBeastRestReq;
		
	}
}


declare module pb {

	var HolyBeastRestAck: HolyBeastRestAck;
	export interface HolyBeastRestAck extends ProtoBufModel {
		new(obj?: any): HolyBeastRestAck;
		holyBeastInfos: dcodeIO.ProtoBuf.Map<number,HolyBeastInfos>;
		HolyPoint?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface HolyBeastRestAckBuilder {
		new(): HolyBeastRestAck;
		decode(buffer: ArrayBuffer) : HolyBeastRestAck;
		//decode(buffer: NodeBuffer) : HolyBeastRestAck;
		//decode(buffer: ByteArrayBuffer) : HolyBeastRestAck;
		decode64(buffer: string) : HolyBeastRestAck;
		
	}
}


declare module pb {

	var HolyBeastInfos: HolyBeastInfos;
	export interface HolyBeastInfos extends ProtoBufModel {
		new(obj?: any): HolyBeastInfos;
		holyBeastInfo: HolyBeastInfo[];
		allPonts?: number;
		heroIndex?: number;
		
	}

	export interface HolyBeastInfosBuilder {
		new(): HolyBeastInfos;
		decode(buffer: ArrayBuffer) : HolyBeastInfos;
		//decode(buffer: NodeBuffer) : HolyBeastInfos;
		//decode(buffer: ByteArrayBuffer) : HolyBeastInfos;
		decode64(buffer: string) : HolyBeastInfos;
		
	}
}


declare module pb {

	var HolyBeastInfo: HolyBeastInfo;
	export interface HolyBeastInfo extends ProtoBufModel {
		new(obj?: any): HolyBeastInfo;
		type?: number;
		star?: number;
		chooseProperty: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface HolyBeastInfoBuilder {
		new(): HolyBeastInfo;
		decode(buffer: ArrayBuffer) : HolyBeastInfo;
		//decode(buffer: NodeBuffer) : HolyBeastInfo;
		//decode(buffer: ByteArrayBuffer) : HolyBeastInfo;
		decode64(buffer: string) : HolyBeastInfo;
		
	}
}


declare module pb {

	var HolyActiveReq: HolyActiveReq;
	export interface HolyActiveReq extends ProtoBufModel {
		new(obj?: any): HolyActiveReq;
		id?: number;
		
	}

	export interface HolyActiveReqBuilder {
		new(): HolyActiveReq;
		decode(buffer: ArrayBuffer) : HolyActiveReq;
		//decode(buffer: NodeBuffer) : HolyActiveReq;
		//decode(buffer: ByteArrayBuffer) : HolyActiveReq;
		decode64(buffer: string) : HolyActiveReq;
		
	}
}


declare module pb {

	var HolyActiveAck: HolyActiveAck;
	export interface HolyActiveAck extends ProtoBufModel {
		new(obj?: any): HolyActiveAck;
		holy?: Holy;
		
	}

	export interface HolyActiveAckBuilder {
		new(): HolyActiveAck;
		decode(buffer: ArrayBuffer) : HolyActiveAck;
		//decode(buffer: NodeBuffer) : HolyActiveAck;
		//decode(buffer: ByteArrayBuffer) : HolyActiveAck;
		decode64(buffer: string) : HolyActiveAck;
		
	}
}


declare module pb {

	var HolyUpLevelReq: HolyUpLevelReq;
	export interface HolyUpLevelReq extends ProtoBufModel {
		new(obj?: any): HolyUpLevelReq;
		id?: number;
		itemId?: number;
		
	}

	export interface HolyUpLevelReqBuilder {
		new(): HolyUpLevelReq;
		decode(buffer: ArrayBuffer) : HolyUpLevelReq;
		//decode(buffer: NodeBuffer) : HolyUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : HolyUpLevelReq;
		decode64(buffer: string) : HolyUpLevelReq;
		
	}
}


declare module pb {

	var HolyUpLevelAck: HolyUpLevelAck;
	export interface HolyUpLevelAck extends ProtoBufModel {
		new(obj?: any): HolyUpLevelAck;
		holy?: Holy;
		
	}

	export interface HolyUpLevelAckBuilder {
		new(): HolyUpLevelAck;
		decode(buffer: ArrayBuffer) : HolyUpLevelAck;
		//decode(buffer: NodeBuffer) : HolyUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : HolyUpLevelAck;
		decode64(buffer: string) : HolyUpLevelAck;
		
	}
}


declare module pb {

	var HolySkillActiveReq: HolySkillActiveReq;
	export interface HolySkillActiveReq extends ProtoBufModel {
		new(obj?: any): HolySkillActiveReq;
		hid?: number;
		hlv?: number;
		
	}

	export interface HolySkillActiveReqBuilder {
		new(): HolySkillActiveReq;
		decode(buffer: ArrayBuffer) : HolySkillActiveReq;
		//decode(buffer: NodeBuffer) : HolySkillActiveReq;
		//decode(buffer: ByteArrayBuffer) : HolySkillActiveReq;
		decode64(buffer: string) : HolySkillActiveReq;
		
	}
}


declare module pb {

	var HolySkillActiveAck: HolySkillActiveAck;
	export interface HolySkillActiveAck extends ProtoBufModel {
		new(obj?: any): HolySkillActiveAck;
		holy?: Holy;
		
	}

	export interface HolySkillActiveAckBuilder {
		new(): HolySkillActiveAck;
		decode(buffer: ArrayBuffer) : HolySkillActiveAck;
		//decode(buffer: NodeBuffer) : HolySkillActiveAck;
		//decode(buffer: ByteArrayBuffer) : HolySkillActiveAck;
		decode64(buffer: string) : HolySkillActiveAck;
		
	}
}


declare module pb {

	var HolySkillUpLvReq: HolySkillUpLvReq;
	export interface HolySkillUpLvReq extends ProtoBufModel {
		new(obj?: any): HolySkillUpLvReq;
		hid?: number;
		hlv?: number;
		
	}

	export interface HolySkillUpLvReqBuilder {
		new(): HolySkillUpLvReq;
		decode(buffer: ArrayBuffer) : HolySkillUpLvReq;
		//decode(buffer: NodeBuffer) : HolySkillUpLvReq;
		//decode(buffer: ByteArrayBuffer) : HolySkillUpLvReq;
		decode64(buffer: string) : HolySkillUpLvReq;
		
	}
}


declare module pb {

	var HolySkillUpLvAck: HolySkillUpLvAck;
	export interface HolySkillUpLvAck extends ProtoBufModel {
		new(obj?: any): HolySkillUpLvAck;
		holy?: Holy;
		
	}

	export interface HolySkillUpLvAckBuilder {
		new(): HolySkillUpLvAck;
		decode(buffer: ArrayBuffer) : HolySkillUpLvAck;
		//decode(buffer: NodeBuffer) : HolySkillUpLvAck;
		//decode(buffer: ByteArrayBuffer) : HolySkillUpLvAck;
		decode64(buffer: string) : HolySkillUpLvAck;
		
	}
}


declare module pb {

	var InsideUpStarReq: InsideUpStarReq;
	export interface InsideUpStarReq extends ProtoBufModel {
		new(obj?: any): InsideUpStarReq;
		heroIndex?: number;
		
	}

	export interface InsideUpStarReqBuilder {
		new(): InsideUpStarReq;
		decode(buffer: ArrayBuffer) : InsideUpStarReq;
		//decode(buffer: NodeBuffer) : InsideUpStarReq;
		//decode(buffer: ByteArrayBuffer) : InsideUpStarReq;
		decode64(buffer: string) : InsideUpStarReq;
		
	}
}


declare module pb {

	var InsideUpStarAck: InsideUpStarAck;
	export interface InsideUpStarAck extends ProtoBufModel {
		new(obj?: any): InsideUpStarAck;
		heroIndex?: number;
		insideInfo?: InsideInfo;
		
	}

	export interface InsideUpStarAckBuilder {
		new(): InsideUpStarAck;
		decode(buffer: ArrayBuffer) : InsideUpStarAck;
		//decode(buffer: NodeBuffer) : InsideUpStarAck;
		//decode(buffer: ByteArrayBuffer) : InsideUpStarAck;
		decode64(buffer: string) : InsideUpStarAck;
		
	}
}


declare module pb {

	var InsideUpGradeReq: InsideUpGradeReq;
	export interface InsideUpGradeReq extends ProtoBufModel {
		new(obj?: any): InsideUpGradeReq;
		heroIndex?: number;
		
	}

	export interface InsideUpGradeReqBuilder {
		new(): InsideUpGradeReq;
		decode(buffer: ArrayBuffer) : InsideUpGradeReq;
		//decode(buffer: NodeBuffer) : InsideUpGradeReq;
		//decode(buffer: ByteArrayBuffer) : InsideUpGradeReq;
		decode64(buffer: string) : InsideUpGradeReq;
		
	}
}


declare module pb {

	var InsideUpGradeAck: InsideUpGradeAck;
	export interface InsideUpGradeAck extends ProtoBufModel {
		new(obj?: any): InsideUpGradeAck;
		heroIndex?: number;
		insideInfo?: InsideInfo;
		res?: boolean;
		
	}

	export interface InsideUpGradeAckBuilder {
		new(): InsideUpGradeAck;
		decode(buffer: ArrayBuffer) : InsideUpGradeAck;
		//decode(buffer: NodeBuffer) : InsideUpGradeAck;
		//decode(buffer: ByteArrayBuffer) : InsideUpGradeAck;
		decode64(buffer: string) : InsideUpGradeAck;
		
	}
}


declare module pb {

	var InsideUpOrderReq: InsideUpOrderReq;
	export interface InsideUpOrderReq extends ProtoBufModel {
		new(obj?: any): InsideUpOrderReq;
		heroIndex?: number;
		
	}

	export interface InsideUpOrderReqBuilder {
		new(): InsideUpOrderReq;
		decode(buffer: ArrayBuffer) : InsideUpOrderReq;
		//decode(buffer: NodeBuffer) : InsideUpOrderReq;
		//decode(buffer: ByteArrayBuffer) : InsideUpOrderReq;
		decode64(buffer: string) : InsideUpOrderReq;
		
	}
}


declare module pb {

	var InsideUpOrderAck: InsideUpOrderAck;
	export interface InsideUpOrderAck extends ProtoBufModel {
		new(obj?: any): InsideUpOrderAck;
		heroIndex?: number;
		insideInfo?: InsideInfo;
		
	}

	export interface InsideUpOrderAckBuilder {
		new(): InsideUpOrderAck;
		decode(buffer: ArrayBuffer) : InsideUpOrderAck;
		//decode(buffer: NodeBuffer) : InsideUpOrderAck;
		//decode(buffer: ByteArrayBuffer) : InsideUpOrderAck;
		decode64(buffer: string) : InsideUpOrderAck;
		
	}
}


declare module pb {

	var InsideSkillUpLvReq: InsideSkillUpLvReq;
	export interface InsideSkillUpLvReq extends ProtoBufModel {
		new(obj?: any): InsideSkillUpLvReq;
		heroIndex?: number;
		skillId?: number;
		
	}

	export interface InsideSkillUpLvReqBuilder {
		new(): InsideSkillUpLvReq;
		decode(buffer: ArrayBuffer) : InsideSkillUpLvReq;
		//decode(buffer: NodeBuffer) : InsideSkillUpLvReq;
		//decode(buffer: ByteArrayBuffer) : InsideSkillUpLvReq;
		decode64(buffer: string) : InsideSkillUpLvReq;
		
	}
}


declare module pb {

	var InsideSkillUpLvAck: InsideSkillUpLvAck;
	export interface InsideSkillUpLvAck extends ProtoBufModel {
		new(obj?: any): InsideSkillUpLvAck;
		heroIndex?: number;
		insideInfo?: InsideInfo;
		
	}

	export interface InsideSkillUpLvAckBuilder {
		new(): InsideSkillUpLvAck;
		decode(buffer: ArrayBuffer) : InsideSkillUpLvAck;
		//decode(buffer: NodeBuffer) : InsideSkillUpLvAck;
		//decode(buffer: ByteArrayBuffer) : InsideSkillUpLvAck;
		decode64(buffer: string) : InsideSkillUpLvAck;
		
	}
}


declare module pb {

	var InsideAutoUpReq: InsideAutoUpReq;
	export interface InsideAutoUpReq extends ProtoBufModel {
		new(obj?: any): InsideAutoUpReq;
		heroIndex?: number;
		
	}

	export interface InsideAutoUpReqBuilder {
		new(): InsideAutoUpReq;
		decode(buffer: ArrayBuffer) : InsideAutoUpReq;
		//decode(buffer: NodeBuffer) : InsideAutoUpReq;
		//decode(buffer: ByteArrayBuffer) : InsideAutoUpReq;
		decode64(buffer: string) : InsideAutoUpReq;
		
	}
}


declare module pb {

	var InsideAutoUpAck: InsideAutoUpAck;
	export interface InsideAutoUpAck extends ProtoBufModel {
		new(obj?: any): InsideAutoUpAck;
		heroIndex?: number;
		insideInfo?: InsideInfo;
		
	}

	export interface InsideAutoUpAckBuilder {
		new(): InsideAutoUpAck;
		decode(buffer: ArrayBuffer) : InsideAutoUpAck;
		//decode(buffer: NodeBuffer) : InsideAutoUpAck;
		//decode(buffer: ByteArrayBuffer) : InsideAutoUpAck;
		decode64(buffer: string) : InsideAutoUpAck;
		
	}
}


declare module pb {

	var JewelMakeReq: JewelMakeReq;
	export interface JewelMakeReq extends ProtoBufModel {
		new(obj?: any): JewelMakeReq;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		itemId?: number;
		
	}

	export interface JewelMakeReqBuilder {
		new(): JewelMakeReq;
		decode(buffer: ArrayBuffer) : JewelMakeReq;
		//decode(buffer: NodeBuffer) : JewelMakeReq;
		//decode(buffer: ByteArrayBuffer) : JewelMakeReq;
		decode64(buffer: string) : JewelMakeReq;
		
	}
}


declare module pb {

	var JewelMakeAck: JewelMakeAck;
	export interface JewelMakeAck extends ProtoBufModel {
		new(obj?: any): JewelMakeAck;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		jewel?: JewelInfo;
		
	}

	export interface JewelMakeAckBuilder {
		new(): JewelMakeAck;
		decode(buffer: ArrayBuffer) : JewelMakeAck;
		//decode(buffer: NodeBuffer) : JewelMakeAck;
		//decode(buffer: ByteArrayBuffer) : JewelMakeAck;
		decode64(buffer: string) : JewelMakeAck;
		
	}
}


declare module pb {

	var JewelUpLvReq: JewelUpLvReq;
	export interface JewelUpLvReq extends ProtoBufModel {
		new(obj?: any): JewelUpLvReq;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		
	}

	export interface JewelUpLvReqBuilder {
		new(): JewelUpLvReq;
		decode(buffer: ArrayBuffer) : JewelUpLvReq;
		//decode(buffer: NodeBuffer) : JewelUpLvReq;
		//decode(buffer: ByteArrayBuffer) : JewelUpLvReq;
		decode64(buffer: string) : JewelUpLvReq;
		
	}
}


declare module pb {

	var JewelUpLvAck: JewelUpLvAck;
	export interface JewelUpLvAck extends ProtoBufModel {
		new(obj?: any): JewelUpLvAck;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		jewel?: JewelInfo;
		
	}

	export interface JewelUpLvAckBuilder {
		new(): JewelUpLvAck;
		decode(buffer: ArrayBuffer) : JewelUpLvAck;
		//decode(buffer: NodeBuffer) : JewelUpLvAck;
		//decode(buffer: ByteArrayBuffer) : JewelUpLvAck;
		decode64(buffer: string) : JewelUpLvAck;
		
	}
}


declare module pb {

	var JewelChangeReq: JewelChangeReq;
	export interface JewelChangeReq extends ProtoBufModel {
		new(obj?: any): JewelChangeReq;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		itemId?: number;
		
	}

	export interface JewelChangeReqBuilder {
		new(): JewelChangeReq;
		decode(buffer: ArrayBuffer) : JewelChangeReq;
		//decode(buffer: NodeBuffer) : JewelChangeReq;
		//decode(buffer: ByteArrayBuffer) : JewelChangeReq;
		decode64(buffer: string) : JewelChangeReq;
		
	}
}


declare module pb {

	var JewelChangeAck: JewelChangeAck;
	export interface JewelChangeAck extends ProtoBufModel {
		new(obj?: any): JewelChangeAck;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		jewel?: JewelInfo;
		
	}

	export interface JewelChangeAckBuilder {
		new(): JewelChangeAck;
		decode(buffer: ArrayBuffer) : JewelChangeAck;
		//decode(buffer: NodeBuffer) : JewelChangeAck;
		//decode(buffer: ByteArrayBuffer) : JewelChangeAck;
		decode64(buffer: string) : JewelChangeAck;
		
	}
}


declare module pb {

	var JewelRemoveReq: JewelRemoveReq;
	export interface JewelRemoveReq extends ProtoBufModel {
		new(obj?: any): JewelRemoveReq;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		
	}

	export interface JewelRemoveReqBuilder {
		new(): JewelRemoveReq;
		decode(buffer: ArrayBuffer) : JewelRemoveReq;
		//decode(buffer: NodeBuffer) : JewelRemoveReq;
		//decode(buffer: ByteArrayBuffer) : JewelRemoveReq;
		decode64(buffer: string) : JewelRemoveReq;
		
	}
}


declare module pb {

	var JewelRemoveAck: JewelRemoveAck;
	export interface JewelRemoveAck extends ProtoBufModel {
		new(obj?: any): JewelRemoveAck;
		heroIndex?: number;
		equipPos?: number;
		jewelPos?: number;
		jewel?: JewelInfo;
		
	}

	export interface JewelRemoveAckBuilder {
		new(): JewelRemoveAck;
		decode(buffer: ArrayBuffer) : JewelRemoveAck;
		//decode(buffer: NodeBuffer) : JewelRemoveAck;
		//decode(buffer: ByteArrayBuffer) : JewelRemoveAck;
		decode64(buffer: string) : JewelRemoveAck;
		
	}
}


declare module pb {

	var JewelMakeAllReq: JewelMakeAllReq;
	export interface JewelMakeAllReq extends ProtoBufModel {
		new(obj?: any): JewelMakeAllReq;
		heroIndex?: number;
		
	}

	export interface JewelMakeAllReqBuilder {
		new(): JewelMakeAllReq;
		decode(buffer: ArrayBuffer) : JewelMakeAllReq;
		//decode(buffer: NodeBuffer) : JewelMakeAllReq;
		//decode(buffer: ByteArrayBuffer) : JewelMakeAllReq;
		decode64(buffer: string) : JewelMakeAllReq;
		
	}
}


declare module pb {

	var JewelMakeAllAck: JewelMakeAllAck;
	export interface JewelMakeAllAck extends ProtoBufModel {
		new(obj?: any): JewelMakeAllAck;
		heroIndex?: number;
		jewels: dcodeIO.ProtoBuf.Map<number,JewelInfo>;
		
	}

	export interface JewelMakeAllAckBuilder {
		new(): JewelMakeAllAck;
		decode(buffer: ArrayBuffer) : JewelMakeAllAck;
		//decode(buffer: NodeBuffer) : JewelMakeAllAck;
		//decode(buffer: ByteArrayBuffer) : JewelMakeAllAck;
		decode64(buffer: string) : JewelMakeAllAck;
		
	}
}


declare module pb {

	var JuexueUpLevelReq: JuexueUpLevelReq;
	export interface JuexueUpLevelReq extends ProtoBufModel {
		new(obj?: any): JuexueUpLevelReq;
		id?: number;
		
	}

	export interface JuexueUpLevelReqBuilder {
		new(): JuexueUpLevelReq;
		decode(buffer: ArrayBuffer) : JuexueUpLevelReq;
		//decode(buffer: NodeBuffer) : JuexueUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : JuexueUpLevelReq;
		decode64(buffer: string) : JuexueUpLevelReq;
		
	}
}


declare module pb {

	var JuexueUpLevelAck: JuexueUpLevelAck;
	export interface JuexueUpLevelAck extends ProtoBufModel {
		new(obj?: any): JuexueUpLevelAck;
		juexue?: Juexue;
		
	}

	export interface JuexueUpLevelAckBuilder {
		new(): JuexueUpLevelAck;
		decode(buffer: ArrayBuffer) : JuexueUpLevelAck;
		//decode(buffer: NodeBuffer) : JuexueUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : JuexueUpLevelAck;
		decode64(buffer: string) : JuexueUpLevelAck;
		
	}
}


declare module pb {

	var KillMonsterUniLoadReq: KillMonsterUniLoadReq;
	export interface KillMonsterUniLoadReq extends ProtoBufModel {
		new(obj?: any): KillMonsterUniLoadReq;
		
	}

	export interface KillMonsterUniLoadReqBuilder {
		new(): KillMonsterUniLoadReq;
		decode(buffer: ArrayBuffer) : KillMonsterUniLoadReq;
		//decode(buffer: NodeBuffer) : KillMonsterUniLoadReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniLoadReq;
		decode64(buffer: string) : KillMonsterUniLoadReq;
		
	}
}


declare module pb {

	var KillMonsterUniLoadAck: KillMonsterUniLoadAck;
	export interface KillMonsterUniLoadAck extends ProtoBufModel {
		new(obj?: any): KillMonsterUniLoadAck;
		list: KillMonsterUniInfo[];
		
	}

	export interface KillMonsterUniLoadAckBuilder {
		new(): KillMonsterUniLoadAck;
		decode(buffer: ArrayBuffer) : KillMonsterUniLoadAck;
		//decode(buffer: NodeBuffer) : KillMonsterUniLoadAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniLoadAck;
		decode64(buffer: string) : KillMonsterUniLoadAck;
		
	}
}


declare module pb {

	var KillMonsterUniFirstDrawReq: KillMonsterUniFirstDrawReq;
	export interface KillMonsterUniFirstDrawReq extends ProtoBufModel {
		new(obj?: any): KillMonsterUniFirstDrawReq;
		stageId?: number;
		
	}

	export interface KillMonsterUniFirstDrawReqBuilder {
		new(): KillMonsterUniFirstDrawReq;
		decode(buffer: ArrayBuffer) : KillMonsterUniFirstDrawReq;
		//decode(buffer: NodeBuffer) : KillMonsterUniFirstDrawReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniFirstDrawReq;
		decode64(buffer: string) : KillMonsterUniFirstDrawReq;
		
	}
}


declare module pb {

	var KillMonsterUniFirstDrawAck: KillMonsterUniFirstDrawAck;
	export interface KillMonsterUniFirstDrawAck extends ProtoBufModel {
		new(obj?: any): KillMonsterUniFirstDrawAck;
		stageId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface KillMonsterUniFirstDrawAckBuilder {
		new(): KillMonsterUniFirstDrawAck;
		decode(buffer: ArrayBuffer) : KillMonsterUniFirstDrawAck;
		//decode(buffer: NodeBuffer) : KillMonsterUniFirstDrawAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniFirstDrawAck;
		decode64(buffer: string) : KillMonsterUniFirstDrawAck;
		
	}
}


declare module pb {

	var KillMonsterUniDrawReq: KillMonsterUniDrawReq;
	export interface KillMonsterUniDrawReq extends ProtoBufModel {
		new(obj?: any): KillMonsterUniDrawReq;
		stageId?: number;
		
	}

	export interface KillMonsterUniDrawReqBuilder {
		new(): KillMonsterUniDrawReq;
		decode(buffer: ArrayBuffer) : KillMonsterUniDrawReq;
		//decode(buffer: NodeBuffer) : KillMonsterUniDrawReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniDrawReq;
		decode64(buffer: string) : KillMonsterUniDrawReq;
		
	}
}


declare module pb {

	var KillMonsterUniDrawAck: KillMonsterUniDrawAck;
	export interface KillMonsterUniDrawAck extends ProtoBufModel {
		new(obj?: any): KillMonsterUniDrawAck;
		stageId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface KillMonsterUniDrawAckBuilder {
		new(): KillMonsterUniDrawAck;
		decode(buffer: ArrayBuffer) : KillMonsterUniDrawAck;
		//decode(buffer: NodeBuffer) : KillMonsterUniDrawAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniDrawAck;
		decode64(buffer: string) : KillMonsterUniDrawAck;
		
	}
}


declare module pb {

	var KillMonsterUniKillNtf: KillMonsterUniKillNtf;
	export interface KillMonsterUniKillNtf extends ProtoBufModel {
		new(obj?: any): KillMonsterUniKillNtf;
		stageId?: number;
		klillUserId?: number;
		killUserName?: string;
		
	}

	export interface KillMonsterUniKillNtfBuilder {
		new(): KillMonsterUniKillNtf;
		decode(buffer: ArrayBuffer) : KillMonsterUniKillNtf;
		//decode(buffer: NodeBuffer) : KillMonsterUniKillNtf;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniKillNtf;
		decode64(buffer: string) : KillMonsterUniKillNtf;
		
	}
}


declare module pb {

	var KillMonsterPerLoadReq: KillMonsterPerLoadReq;
	export interface KillMonsterPerLoadReq extends ProtoBufModel {
		new(obj?: any): KillMonsterPerLoadReq;
		
	}

	export interface KillMonsterPerLoadReqBuilder {
		new(): KillMonsterPerLoadReq;
		decode(buffer: ArrayBuffer) : KillMonsterPerLoadReq;
		//decode(buffer: NodeBuffer) : KillMonsterPerLoadReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterPerLoadReq;
		decode64(buffer: string) : KillMonsterPerLoadReq;
		
	}
}


declare module pb {

	var KillMonsterPerLoadAck: KillMonsterPerLoadAck;
	export interface KillMonsterPerLoadAck extends ProtoBufModel {
		new(obj?: any): KillMonsterPerLoadAck;
		list: KillMonsterPerInfo[];
		
	}

	export interface KillMonsterPerLoadAckBuilder {
		new(): KillMonsterPerLoadAck;
		decode(buffer: ArrayBuffer) : KillMonsterPerLoadAck;
		//decode(buffer: NodeBuffer) : KillMonsterPerLoadAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterPerLoadAck;
		decode64(buffer: string) : KillMonsterPerLoadAck;
		
	}
}


declare module pb {

	var KillMonsterPerDrawReq: KillMonsterPerDrawReq;
	export interface KillMonsterPerDrawReq extends ProtoBufModel {
		new(obj?: any): KillMonsterPerDrawReq;
		stageId?: number;
		
	}

	export interface KillMonsterPerDrawReqBuilder {
		new(): KillMonsterPerDrawReq;
		decode(buffer: ArrayBuffer) : KillMonsterPerDrawReq;
		//decode(buffer: NodeBuffer) : KillMonsterPerDrawReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterPerDrawReq;
		decode64(buffer: string) : KillMonsterPerDrawReq;
		
	}
}


declare module pb {

	var KillMonsterPerDrawAck: KillMonsterPerDrawAck;
	export interface KillMonsterPerDrawAck extends ProtoBufModel {
		new(obj?: any): KillMonsterPerDrawAck;
		stageId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface KillMonsterPerDrawAckBuilder {
		new(): KillMonsterPerDrawAck;
		decode(buffer: ArrayBuffer) : KillMonsterPerDrawAck;
		//decode(buffer: NodeBuffer) : KillMonsterPerDrawAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterPerDrawAck;
		decode64(buffer: string) : KillMonsterPerDrawAck;
		
	}
}


declare module pb {

	var KillMonsterPerKillNtf: KillMonsterPerKillNtf;
	export interface KillMonsterPerKillNtf extends ProtoBufModel {
		new(obj?: any): KillMonsterPerKillNtf;
		stageId?: number;
		
	}

	export interface KillMonsterPerKillNtfBuilder {
		new(): KillMonsterPerKillNtf;
		decode(buffer: ArrayBuffer) : KillMonsterPerKillNtf;
		//decode(buffer: NodeBuffer) : KillMonsterPerKillNtf;
		//decode(buffer: ByteArrayBuffer) : KillMonsterPerKillNtf;
		decode64(buffer: string) : KillMonsterPerKillNtf;
		
	}
}


declare module pb {

	var KillMonsterMilLoadReq: KillMonsterMilLoadReq;
	export interface KillMonsterMilLoadReq extends ProtoBufModel {
		new(obj?: any): KillMonsterMilLoadReq;
		
	}

	export interface KillMonsterMilLoadReqBuilder {
		new(): KillMonsterMilLoadReq;
		decode(buffer: ArrayBuffer) : KillMonsterMilLoadReq;
		//decode(buffer: NodeBuffer) : KillMonsterMilLoadReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterMilLoadReq;
		decode64(buffer: string) : KillMonsterMilLoadReq;
		
	}
}


declare module pb {

	var KillMonsterMilLoadAck: KillMonsterMilLoadAck;
	export interface KillMonsterMilLoadAck extends ProtoBufModel {
		new(obj?: any): KillMonsterMilLoadAck;
		list: KillMonsterMilInfo[];
		
	}

	export interface KillMonsterMilLoadAckBuilder {
		new(): KillMonsterMilLoadAck;
		decode(buffer: ArrayBuffer) : KillMonsterMilLoadAck;
		//decode(buffer: NodeBuffer) : KillMonsterMilLoadAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterMilLoadAck;
		decode64(buffer: string) : KillMonsterMilLoadAck;
		
	}
}


declare module pb {

	var KillMonsterMilDrawReq: KillMonsterMilDrawReq;
	export interface KillMonsterMilDrawReq extends ProtoBufModel {
		new(obj?: any): KillMonsterMilDrawReq;
		type?: number;
		
	}

	export interface KillMonsterMilDrawReqBuilder {
		new(): KillMonsterMilDrawReq;
		decode(buffer: ArrayBuffer) : KillMonsterMilDrawReq;
		//decode(buffer: NodeBuffer) : KillMonsterMilDrawReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterMilDrawReq;
		decode64(buffer: string) : KillMonsterMilDrawReq;
		
	}
}


declare module pb {

	var KillMonsterMilDrawAck: KillMonsterMilDrawAck;
	export interface KillMonsterMilDrawAck extends ProtoBufModel {
		new(obj?: any): KillMonsterMilDrawAck;
		type?: number;
		level?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface KillMonsterMilDrawAckBuilder {
		new(): KillMonsterMilDrawAck;
		decode(buffer: ArrayBuffer) : KillMonsterMilDrawAck;
		//decode(buffer: NodeBuffer) : KillMonsterMilDrawAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterMilDrawAck;
		decode64(buffer: string) : KillMonsterMilDrawAck;
		
	}
}


declare module pb {

	var KillMonsterMilKillNtf: KillMonsterMilKillNtf;
	export interface KillMonsterMilKillNtf extends ProtoBufModel {
		new(obj?: any): KillMonsterMilKillNtf;
		stageId?: number;
		killNum?: number;
		
	}

	export interface KillMonsterMilKillNtfBuilder {
		new(): KillMonsterMilKillNtf;
		decode(buffer: ArrayBuffer) : KillMonsterMilKillNtf;
		//decode(buffer: NodeBuffer) : KillMonsterMilKillNtf;
		//decode(buffer: ByteArrayBuffer) : KillMonsterMilKillNtf;
		decode64(buffer: string) : KillMonsterMilKillNtf;
		
	}
}


declare module pb {

	var KillMonsterUniInfo: KillMonsterUniInfo;
	export interface KillMonsterUniInfo extends ProtoBufModel {
		new(obj?: any): KillMonsterUniInfo;
		stageId?: number;
		klillUserId?: number;
		killUserName?: string;
		serverFirstKill?: boolean;
		serverKill?: boolean;
		
	}

	export interface KillMonsterUniInfoBuilder {
		new(): KillMonsterUniInfo;
		decode(buffer: ArrayBuffer) : KillMonsterUniInfo;
		//decode(buffer: NodeBuffer) : KillMonsterUniInfo;
		//decode(buffer: ByteArrayBuffer) : KillMonsterUniInfo;
		decode64(buffer: string) : KillMonsterUniInfo;
		
	}
}


declare module pb {

	var KillMonsterPerInfo: KillMonsterPerInfo;
	export interface KillMonsterPerInfo extends ProtoBufModel {
		new(obj?: any): KillMonsterPerInfo;
		stageId?: number;
		kill?: boolean;
		receive?: boolean;
		
	}

	export interface KillMonsterPerInfoBuilder {
		new(): KillMonsterPerInfo;
		decode(buffer: ArrayBuffer) : KillMonsterPerInfo;
		//decode(buffer: NodeBuffer) : KillMonsterPerInfo;
		//decode(buffer: ByteArrayBuffer) : KillMonsterPerInfo;
		decode64(buffer: string) : KillMonsterPerInfo;
		
	}
}


declare module pb {

	var KillMonsterMilInfo: KillMonsterMilInfo;
	export interface KillMonsterMilInfo extends ProtoBufModel {
		new(obj?: any): KillMonsterMilInfo;
		type?: number;
		level?: number;
		killNum?: number;
		receive?: boolean;
		
	}

	export interface KillMonsterMilInfoBuilder {
		new(): KillMonsterMilInfo;
		decode(buffer: ArrayBuffer) : KillMonsterMilInfo;
		//decode(buffer: NodeBuffer) : KillMonsterMilInfo;
		//decode(buffer: ByteArrayBuffer) : KillMonsterMilInfo;
		decode64(buffer: string) : KillMonsterMilInfo;
		
	}
}


declare module pb {

	var LabelUpReq: LabelUpReq;
	export interface LabelUpReq extends ProtoBufModel {
		new(obj?: any): LabelUpReq;
		
	}

	export interface LabelUpReqBuilder {
		new(): LabelUpReq;
		decode(buffer: ArrayBuffer) : LabelUpReq;
		//decode(buffer: NodeBuffer) : LabelUpReq;
		//decode(buffer: ByteArrayBuffer) : LabelUpReq;
		decode64(buffer: string) : LabelUpReq;
		
	}
}


declare module pb {

	var LabelUpAck: LabelUpAck;
	export interface LabelUpAck extends ProtoBufModel {
		new(obj?: any): LabelUpAck;
		id?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface LabelUpAckBuilder {
		new(): LabelUpAck;
		decode(buffer: ArrayBuffer) : LabelUpAck;
		//decode(buffer: NodeBuffer) : LabelUpAck;
		//decode(buffer: ByteArrayBuffer) : LabelUpAck;
		decode64(buffer: string) : LabelUpAck;
		
	}
}


declare module pb {

	var LabelTransferReq: LabelTransferReq;
	export interface LabelTransferReq extends ProtoBufModel {
		new(obj?: any): LabelTransferReq;
		job?: number;
		
	}

	export interface LabelTransferReqBuilder {
		new(): LabelTransferReq;
		decode(buffer: ArrayBuffer) : LabelTransferReq;
		//decode(buffer: NodeBuffer) : LabelTransferReq;
		//decode(buffer: ByteArrayBuffer) : LabelTransferReq;
		decode64(buffer: string) : LabelTransferReq;
		
	}
}


declare module pb {

	var LabelTransferAck: LabelTransferAck;
	export interface LabelTransferAck extends ProtoBufModel {
		new(obj?: any): LabelTransferAck;
		job?: number;
		transfer?: number;
		
	}

	export interface LabelTransferAckBuilder {
		new(): LabelTransferAck;
		decode(buffer: ArrayBuffer) : LabelTransferAck;
		//decode(buffer: NodeBuffer) : LabelTransferAck;
		//decode(buffer: ByteArrayBuffer) : LabelTransferAck;
		decode64(buffer: string) : LabelTransferAck;
		
	}
}


declare module pb {

	var LabelDayRewardReq: LabelDayRewardReq;
	export interface LabelDayRewardReq extends ProtoBufModel {
		new(obj?: any): LabelDayRewardReq;
		
	}

	export interface LabelDayRewardReqBuilder {
		new(): LabelDayRewardReq;
		decode(buffer: ArrayBuffer) : LabelDayRewardReq;
		//decode(buffer: NodeBuffer) : LabelDayRewardReq;
		//decode(buffer: ByteArrayBuffer) : LabelDayRewardReq;
		decode64(buffer: string) : LabelDayRewardReq;
		
	}
}


declare module pb {

	var LabelDayRewardAck: LabelDayRewardAck;
	export interface LabelDayRewardAck extends ProtoBufModel {
		new(obj?: any): LabelDayRewardAck;
		dayReward?: boolean;
		goods?: GoodsChangeNtf;
		
	}

	export interface LabelDayRewardAckBuilder {
		new(): LabelDayRewardAck;
		decode(buffer: ArrayBuffer) : LabelDayRewardAck;
		//decode(buffer: NodeBuffer) : LabelDayRewardAck;
		//decode(buffer: ByteArrayBuffer) : LabelDayRewardAck;
		decode64(buffer: string) : LabelDayRewardAck;
		
	}
}


declare module pb {

	var LabelTaskReq: LabelTaskReq;
	export interface LabelTaskReq extends ProtoBufModel {
		new(obj?: any): LabelTaskReq;
		
	}

	export interface LabelTaskReqBuilder {
		new(): LabelTaskReq;
		decode(buffer: ArrayBuffer) : LabelTaskReq;
		//decode(buffer: NodeBuffer) : LabelTaskReq;
		//decode(buffer: ByteArrayBuffer) : LabelTaskReq;
		decode64(buffer: string) : LabelTaskReq;
		
	}
}


declare module pb {

	var LabelTaskNtf: LabelTaskNtf;
	export interface LabelTaskNtf extends ProtoBufModel {
		new(obj?: any): LabelTaskNtf;
		labelId?: number;
		taskInfo: dcodeIO.ProtoBuf.Map<number,LabelTaskUnit>;
		
	}

	export interface LabelTaskNtfBuilder {
		new(): LabelTaskNtf;
		decode(buffer: ArrayBuffer) : LabelTaskNtf;
		//decode(buffer: NodeBuffer) : LabelTaskNtf;
		//decode(buffer: ByteArrayBuffer) : LabelTaskNtf;
		decode64(buffer: string) : LabelTaskNtf;
		
	}
}


declare module pb {

	var LabelTaskUnit: LabelTaskUnit;
	export interface LabelTaskUnit extends ProtoBufModel {
		new(obj?: any): LabelTaskUnit;
		taskId?: number;
		value: number[];
		cfgVal: number[];
		isOver?: boolean;
		
	}

	export interface LabelTaskUnitBuilder {
		new(): LabelTaskUnit;
		decode(buffer: ArrayBuffer) : LabelTaskUnit;
		//decode(buffer: NodeBuffer) : LabelTaskUnit;
		//decode(buffer: ByteArrayBuffer) : LabelTaskUnit;
		decode64(buffer: string) : LabelTaskUnit;
		
	}
}


declare module pb {

	var LotteryInfoReq: LotteryInfoReq;
	export interface LotteryInfoReq extends ProtoBufModel {
		new(obj?: any): LotteryInfoReq;
		
	}

	export interface LotteryInfoReqBuilder {
		new(): LotteryInfoReq;
		decode(buffer: ArrayBuffer) : LotteryInfoReq;
		//decode(buffer: NodeBuffer) : LotteryInfoReq;
		//decode(buffer: ByteArrayBuffer) : LotteryInfoReq;
		decode64(buffer: string) : LotteryInfoReq;
		
	}
}


declare module pb {

	var LotteryInfoAck: LotteryInfoAck;
	export interface LotteryInfoAck extends ProtoBufModel {
		new(obj?: any): LotteryInfoAck;
		myLotteryInfos: LotteryInfo[];
		allLotteryInfos: LotteryInfo[];
		winLotteryInfos: LotteryInfo[];
		PopUpState?: number;
		goodLuckState?: number;
		winUserInfo?: BriefUserInfo;
		isGetAward?: boolean;
		
	}

	export interface LotteryInfoAckBuilder {
		new(): LotteryInfoAck;
		decode(buffer: ArrayBuffer) : LotteryInfoAck;
		//decode(buffer: NodeBuffer) : LotteryInfoAck;
		//decode(buffer: ByteArrayBuffer) : LotteryInfoAck;
		decode64(buffer: string) : LotteryInfoAck;
		
	}
}


declare module pb {

	var GetGoodLuckReq: GetGoodLuckReq;
	export interface GetGoodLuckReq extends ProtoBufModel {
		new(obj?: any): GetGoodLuckReq;
		
	}

	export interface GetGoodLuckReqBuilder {
		new(): GetGoodLuckReq;
		decode(buffer: ArrayBuffer) : GetGoodLuckReq;
		//decode(buffer: NodeBuffer) : GetGoodLuckReq;
		//decode(buffer: ByteArrayBuffer) : GetGoodLuckReq;
		decode64(buffer: string) : GetGoodLuckReq;
		
	}
}


declare module pb {

	var GetGoodLuckAck: GetGoodLuckAck;
	export interface GetGoodLuckAck extends ProtoBufModel {
		new(obj?: any): GetGoodLuckAck;
		state?: number;
		
	}

	export interface GetGoodLuckAckBuilder {
		new(): GetGoodLuckAck;
		decode(buffer: ArrayBuffer) : GetGoodLuckAck;
		//decode(buffer: NodeBuffer) : GetGoodLuckAck;
		//decode(buffer: ByteArrayBuffer) : GetGoodLuckAck;
		decode64(buffer: string) : GetGoodLuckAck;
		
	}
}


declare module pb {

	var SetLotteryPopUpStateReq: SetLotteryPopUpStateReq;
	export interface SetLotteryPopUpStateReq extends ProtoBufModel {
		new(obj?: any): SetLotteryPopUpStateReq;
		state?: number;
		
	}

	export interface SetLotteryPopUpStateReqBuilder {
		new(): SetLotteryPopUpStateReq;
		decode(buffer: ArrayBuffer) : SetLotteryPopUpStateReq;
		//decode(buffer: NodeBuffer) : SetLotteryPopUpStateReq;
		//decode(buffer: ByteArrayBuffer) : SetLotteryPopUpStateReq;
		decode64(buffer: string) : SetLotteryPopUpStateReq;
		
	}
}


declare module pb {

	var SetLotteryPopUpStateAck: SetLotteryPopUpStateAck;
	export interface SetLotteryPopUpStateAck extends ProtoBufModel {
		new(obj?: any): SetLotteryPopUpStateAck;
		state?: number;
		
	}

	export interface SetLotteryPopUpStateAckBuilder {
		new(): SetLotteryPopUpStateAck;
		decode(buffer: ArrayBuffer) : SetLotteryPopUpStateAck;
		//decode(buffer: NodeBuffer) : SetLotteryPopUpStateAck;
		//decode(buffer: ByteArrayBuffer) : SetLotteryPopUpStateAck;
		decode64(buffer: string) : SetLotteryPopUpStateAck;
		
	}
}


declare module pb {

	var LotteryBuyNumsReq: LotteryBuyNumsReq;
	export interface LotteryBuyNumsReq extends ProtoBufModel {
		new(obj?: any): LotteryBuyNumsReq;
		num?: number;
		
	}

	export interface LotteryBuyNumsReqBuilder {
		new(): LotteryBuyNumsReq;
		decode(buffer: ArrayBuffer) : LotteryBuyNumsReq;
		//decode(buffer: NodeBuffer) : LotteryBuyNumsReq;
		//decode(buffer: ByteArrayBuffer) : LotteryBuyNumsReq;
		decode64(buffer: string) : LotteryBuyNumsReq;
		
	}
}


declare module pb {

	var LotteryBuyNumsAck: LotteryBuyNumsAck;
	export interface LotteryBuyNumsAck extends ProtoBufModel {
		new(obj?: any): LotteryBuyNumsAck;
		LotteryInfos: LotteryInfo[];
		
	}

	export interface LotteryBuyNumsAckBuilder {
		new(): LotteryBuyNumsAck;
		decode(buffer: ArrayBuffer) : LotteryBuyNumsAck;
		//decode(buffer: NodeBuffer) : LotteryBuyNumsAck;
		//decode(buffer: ByteArrayBuffer) : LotteryBuyNumsAck;
		decode64(buffer: string) : LotteryBuyNumsAck;
		
	}
}


declare module pb {

	var BrocastBuyNumsNtf: BrocastBuyNumsNtf;
	export interface BrocastBuyNumsNtf extends ProtoBufModel {
		new(obj?: any): BrocastBuyNumsNtf;
		LotteryInfos: LotteryInfo[];
		
	}

	export interface BrocastBuyNumsNtfBuilder {
		new(): BrocastBuyNumsNtf;
		decode(buffer: ArrayBuffer) : BrocastBuyNumsNtf;
		//decode(buffer: NodeBuffer) : BrocastBuyNumsNtf;
		//decode(buffer: ByteArrayBuffer) : BrocastBuyNumsNtf;
		decode64(buffer: string) : BrocastBuyNumsNtf;
		
	}
}


declare module pb {

	var LotteryInfo: LotteryInfo;
	export interface LotteryInfo extends ProtoBufModel {
		new(obj?: any): LotteryInfo;
		userId?: number;
		userName?: string;
		awardNumber?: number;
		shareNum?: number;
		combat?: number;
		
	}

	export interface LotteryInfoBuilder {
		new(): LotteryInfo;
		decode(buffer: ArrayBuffer) : LotteryInfo;
		//decode(buffer: NodeBuffer) : LotteryInfo;
		//decode(buffer: ByteArrayBuffer) : LotteryInfo;
		decode64(buffer: string) : LotteryInfo;
		
	}
}


declare module pb {

	var LotteryEnd: LotteryEnd;
	export interface LotteryEnd extends ProtoBufModel {
		new(obj?: any): LotteryEnd;
		winLotteryInfos: LotteryInfo[];
		winUserInfo?: BriefUserInfo;
		
	}

	export interface LotteryEndBuilder {
		new(): LotteryEnd;
		decode(buffer: ArrayBuffer) : LotteryEnd;
		//decode(buffer: NodeBuffer) : LotteryEnd;
		//decode(buffer: ByteArrayBuffer) : LotteryEnd;
		decode64(buffer: string) : LotteryEnd;
		
	}
}


declare module pb {

	var LotteryInfo1Req: LotteryInfo1Req;
	export interface LotteryInfo1Req extends ProtoBufModel {
		new(obj?: any): LotteryInfo1Req;
		
	}

	export interface LotteryInfo1ReqBuilder {
		new(): LotteryInfo1Req;
		decode(buffer: ArrayBuffer) : LotteryInfo1Req;
		//decode(buffer: NodeBuffer) : LotteryInfo1Req;
		//decode(buffer: ByteArrayBuffer) : LotteryInfo1Req;
		decode64(buffer: string) : LotteryInfo1Req;
		
	}
}


declare module pb {

	var LotteryInfo1Ack: LotteryInfo1Ack;
	export interface LotteryInfo1Ack extends ProtoBufModel {
		new(obj?: any): LotteryInfo1Ack;
		isWin?: number;
		items: itemUnit[];
		winLotteryInfos: LotteryInfo[];
		
	}

	export interface LotteryInfo1AckBuilder {
		new(): LotteryInfo1Ack;
		decode(buffer: ArrayBuffer) : LotteryInfo1Ack;
		//decode(buffer: NodeBuffer) : LotteryInfo1Ack;
		//decode(buffer: ByteArrayBuffer) : LotteryInfo1Ack;
		decode64(buffer: string) : LotteryInfo1Ack;
		
	}
}


declare module pb {

	var LotteryGetEndAwardReq: LotteryGetEndAwardReq;
	export interface LotteryGetEndAwardReq extends ProtoBufModel {
		new(obj?: any): LotteryGetEndAwardReq;
		
	}

	export interface LotteryGetEndAwardReqBuilder {
		new(): LotteryGetEndAwardReq;
		decode(buffer: ArrayBuffer) : LotteryGetEndAwardReq;
		//decode(buffer: NodeBuffer) : LotteryGetEndAwardReq;
		//decode(buffer: ByteArrayBuffer) : LotteryGetEndAwardReq;
		decode64(buffer: string) : LotteryGetEndAwardReq;
		
	}
}


declare module pb {

	var LotteryGetEndAwardAck: LotteryGetEndAwardAck;
	export interface LotteryGetEndAwardAck extends ProtoBufModel {
		new(obj?: any): LotteryGetEndAwardAck;
		getState?: number;
		items: itemUnit[];
		
	}

	export interface LotteryGetEndAwardAckBuilder {
		new(): LotteryGetEndAwardAck;
		decode(buffer: ArrayBuffer) : LotteryGetEndAwardAck;
		//decode(buffer: NodeBuffer) : LotteryGetEndAwardAck;
		//decode(buffer: ByteArrayBuffer) : LotteryGetEndAwardAck;
		decode64(buffer: string) : LotteryGetEndAwardAck;
		
	}
}


declare module pb {

	var MagicCircleUpLvReq: MagicCircleUpLvReq;
	export interface MagicCircleUpLvReq extends ProtoBufModel {
		new(obj?: any): MagicCircleUpLvReq;
		heroIndex?: number;
		magicCircleType?: number;
		
	}

	export interface MagicCircleUpLvReqBuilder {
		new(): MagicCircleUpLvReq;
		decode(buffer: ArrayBuffer) : MagicCircleUpLvReq;
		//decode(buffer: NodeBuffer) : MagicCircleUpLvReq;
		//decode(buffer: ByteArrayBuffer) : MagicCircleUpLvReq;
		decode64(buffer: string) : MagicCircleUpLvReq;
		
	}
}


declare module pb {

	var MagicCircleUpLvAck: MagicCircleUpLvAck;
	export interface MagicCircleUpLvAck extends ProtoBufModel {
		new(obj?: any): MagicCircleUpLvAck;
		heroIndex?: number;
		magicCircleType?: number;
		excelId?: number;
		
	}

	export interface MagicCircleUpLvAckBuilder {
		new(): MagicCircleUpLvAck;
		decode(buffer: ArrayBuffer) : MagicCircleUpLvAck;
		//decode(buffer: NodeBuffer) : MagicCircleUpLvAck;
		//decode(buffer: ByteArrayBuffer) : MagicCircleUpLvAck;
		decode64(buffer: string) : MagicCircleUpLvAck;
		
	}
}


declare module pb {

	var MagicCircleChangeWearReq: MagicCircleChangeWearReq;
	export interface MagicCircleChangeWearReq extends ProtoBufModel {
		new(obj?: any): MagicCircleChangeWearReq;
		heroIndex?: number;
		magicCircleLvId?: number;
		
	}

	export interface MagicCircleChangeWearReqBuilder {
		new(): MagicCircleChangeWearReq;
		decode(buffer: ArrayBuffer) : MagicCircleChangeWearReq;
		//decode(buffer: NodeBuffer) : MagicCircleChangeWearReq;
		//decode(buffer: ByteArrayBuffer) : MagicCircleChangeWearReq;
		decode64(buffer: string) : MagicCircleChangeWearReq;
		
	}
}


declare module pb {

	var MagicCircleChangeWearAck: MagicCircleChangeWearAck;
	export interface MagicCircleChangeWearAck extends ProtoBufModel {
		new(obj?: any): MagicCircleChangeWearAck;
		heroIndex?: number;
		magicCircleLvId?: number;
		
	}

	export interface MagicCircleChangeWearAckBuilder {
		new(): MagicCircleChangeWearAck;
		decode(buffer: ArrayBuffer) : MagicCircleChangeWearAck;
		//decode(buffer: NodeBuffer) : MagicCircleChangeWearAck;
		//decode(buffer: ByteArrayBuffer) : MagicCircleChangeWearAck;
		decode64(buffer: string) : MagicCircleChangeWearAck;
		
	}
}


declare module pb {

	var MagicTowerEndNtf: MagicTowerEndNtf;
	export interface MagicTowerEndNtf extends ProtoBufModel {
		new(obj?: any): MagicTowerEndNtf;
		rank?: number;
		
	}

	export interface MagicTowerEndNtfBuilder {
		new(): MagicTowerEndNtf;
		decode(buffer: ArrayBuffer) : MagicTowerEndNtf;
		//decode(buffer: NodeBuffer) : MagicTowerEndNtf;
		//decode(buffer: ByteArrayBuffer) : MagicTowerEndNtf;
		decode64(buffer: string) : MagicTowerEndNtf;
		
	}
}


declare module pb {

	var MagicTowerGetUserInfoReq: MagicTowerGetUserInfoReq;
	export interface MagicTowerGetUserInfoReq extends ProtoBufModel {
		new(obj?: any): MagicTowerGetUserInfoReq;
		
	}

	export interface MagicTowerGetUserInfoReqBuilder {
		new(): MagicTowerGetUserInfoReq;
		decode(buffer: ArrayBuffer) : MagicTowerGetUserInfoReq;
		//decode(buffer: NodeBuffer) : MagicTowerGetUserInfoReq;
		//decode(buffer: ByteArrayBuffer) : MagicTowerGetUserInfoReq;
		decode64(buffer: string) : MagicTowerGetUserInfoReq;
		
	}
}


declare module pb {

	var MagicTowerGetUserInfoAck: MagicTowerGetUserInfoAck;
	export interface MagicTowerGetUserInfoAck extends ProtoBufModel {
		new(obj?: any): MagicTowerGetUserInfoAck;
		score?: number;
		isGetAward?: number;
		
	}

	export interface MagicTowerGetUserInfoAckBuilder {
		new(): MagicTowerGetUserInfoAck;
		decode(buffer: ArrayBuffer) : MagicTowerGetUserInfoAck;
		//decode(buffer: NodeBuffer) : MagicTowerGetUserInfoAck;
		//decode(buffer: ByteArrayBuffer) : MagicTowerGetUserInfoAck;
		decode64(buffer: string) : MagicTowerGetUserInfoAck;
		
	}
}


declare module pb {

	var MagicTowerlayerAwardReq: MagicTowerlayerAwardReq;
	export interface MagicTowerlayerAwardReq extends ProtoBufModel {
		new(obj?: any): MagicTowerlayerAwardReq;
		
	}

	export interface MagicTowerlayerAwardReqBuilder {
		new(): MagicTowerlayerAwardReq;
		decode(buffer: ArrayBuffer) : MagicTowerlayerAwardReq;
		//decode(buffer: NodeBuffer) : MagicTowerlayerAwardReq;
		//decode(buffer: ByteArrayBuffer) : MagicTowerlayerAwardReq;
		decode64(buffer: string) : MagicTowerlayerAwardReq;
		
	}
}


declare module pb {

	var MagicTowerlayerAwardAck: MagicTowerlayerAwardAck;
	export interface MagicTowerlayerAwardAck extends ProtoBufModel {
		new(obj?: any): MagicTowerlayerAwardAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface MagicTowerlayerAwardAckBuilder {
		new(): MagicTowerlayerAwardAck;
		decode(buffer: ArrayBuffer) : MagicTowerlayerAwardAck;
		//decode(buffer: NodeBuffer) : MagicTowerlayerAwardAck;
		//decode(buffer: ByteArrayBuffer) : MagicTowerlayerAwardAck;
		decode64(buffer: string) : MagicTowerlayerAwardAck;
		
	}
}


declare module pb {

	var MailReadReq: MailReadReq;
	export interface MailReadReq extends ProtoBufModel {
		new(obj?: any): MailReadReq;
		id?: number;
		
	}

	export interface MailReadReqBuilder {
		new(): MailReadReq;
		decode(buffer: ArrayBuffer) : MailReadReq;
		//decode(buffer: NodeBuffer) : MailReadReq;
		//decode(buffer: ByteArrayBuffer) : MailReadReq;
		decode64(buffer: string) : MailReadReq;
		
	}
}


declare module pb {

	var MailReadAck: MailReadAck;
	export interface MailReadAck extends ProtoBufModel {
		new(obj?: any): MailReadAck;
		id?: number;
		
	}

	export interface MailReadAckBuilder {
		new(): MailReadAck;
		decode(buffer: ArrayBuffer) : MailReadAck;
		//decode(buffer: NodeBuffer) : MailReadAck;
		//decode(buffer: ByteArrayBuffer) : MailReadAck;
		decode64(buffer: string) : MailReadAck;
		
	}
}


declare module pb {

	var MailRedeemReq: MailRedeemReq;
	export interface MailRedeemReq extends ProtoBufModel {
		new(obj?: any): MailRedeemReq;
		id?: number;
		
	}

	export interface MailRedeemReqBuilder {
		new(): MailRedeemReq;
		decode(buffer: ArrayBuffer) : MailRedeemReq;
		//decode(buffer: NodeBuffer) : MailRedeemReq;
		//decode(buffer: ByteArrayBuffer) : MailRedeemReq;
		decode64(buffer: string) : MailRedeemReq;
		
	}
}


declare module pb {

	var MailRedeemAck: MailRedeemAck;
	export interface MailRedeemAck extends ProtoBufModel {
		new(obj?: any): MailRedeemAck;
		id?: number;
		goodsChanges?: GoodsChangeNtf;
		mail?: MailNtf;
		
	}

	export interface MailRedeemAckBuilder {
		new(): MailRedeemAck;
		decode(buffer: ArrayBuffer) : MailRedeemAck;
		//decode(buffer: NodeBuffer) : MailRedeemAck;
		//decode(buffer: ByteArrayBuffer) : MailRedeemAck;
		decode64(buffer: string) : MailRedeemAck;
		
	}
}


declare module pb {

	var MailRedeemAllReq: MailRedeemAllReq;
	export interface MailRedeemAllReq extends ProtoBufModel {
		new(obj?: any): MailRedeemAllReq;
		
	}

	export interface MailRedeemAllReqBuilder {
		new(): MailRedeemAllReq;
		decode(buffer: ArrayBuffer) : MailRedeemAllReq;
		//decode(buffer: NodeBuffer) : MailRedeemAllReq;
		//decode(buffer: ByteArrayBuffer) : MailRedeemAllReq;
		decode64(buffer: string) : MailRedeemAllReq;
		
	}
}


declare module pb {

	var MailRedeemAllAck: MailRedeemAllAck;
	export interface MailRedeemAllAck extends ProtoBufModel {
		new(obj?: any): MailRedeemAllAck;
		ids: number[];
		goodsChanges?: GoodsChangeNtf;
		mail: MailNtf[];
		
	}

	export interface MailRedeemAllAckBuilder {
		new(): MailRedeemAllAck;
		decode(buffer: ArrayBuffer) : MailRedeemAllAck;
		//decode(buffer: NodeBuffer) : MailRedeemAllAck;
		//decode(buffer: ByteArrayBuffer) : MailRedeemAllAck;
		decode64(buffer: string) : MailRedeemAllAck;
		
	}
}


declare module pb {

	var MailNtf: MailNtf;
	export interface MailNtf extends ProtoBufModel {
		new(obj?: any): MailNtf;
		id?: number;
		type?: number;
		sender?: string;
		title?: string;
		Content?: string;
		status?: number;
		expireAt?: number;
		createdAt?: number;
		redeemedAt?: number;
		args: string[];
		items: itemUnit[];
		
	}

	export interface MailNtfBuilder {
		new(): MailNtf;
		decode(buffer: ArrayBuffer) : MailNtf;
		//decode(buffer: NodeBuffer) : MailNtf;
		//decode(buffer: ByteArrayBuffer) : MailNtf;
		decode64(buffer: string) : MailNtf;
		
	}
}


declare module pb {

	var MailLoadReq: MailLoadReq;
	export interface MailLoadReq extends ProtoBufModel {
		new(obj?: any): MailLoadReq;
		
	}

	export interface MailLoadReqBuilder {
		new(): MailLoadReq;
		decode(buffer: ArrayBuffer) : MailLoadReq;
		//decode(buffer: NodeBuffer) : MailLoadReq;
		//decode(buffer: ByteArrayBuffer) : MailLoadReq;
		decode64(buffer: string) : MailLoadReq;
		
	}
}


declare module pb {

	var MailLoadAck: MailLoadAck;
	export interface MailLoadAck extends ProtoBufModel {
		new(obj?: any): MailLoadAck;
		mails: MailNtf[];
		
	}

	export interface MailLoadAckBuilder {
		new(): MailLoadAck;
		decode(buffer: ArrayBuffer) : MailLoadAck;
		//decode(buffer: NodeBuffer) : MailLoadAck;
		//decode(buffer: ByteArrayBuffer) : MailLoadAck;
		decode64(buffer: string) : MailLoadAck;
		
	}
}


declare module pb {

	var MailDeleteReq: MailDeleteReq;
	export interface MailDeleteReq extends ProtoBufModel {
		new(obj?: any): MailDeleteReq;
		id?: number;
		
	}

	export interface MailDeleteReqBuilder {
		new(): MailDeleteReq;
		decode(buffer: ArrayBuffer) : MailDeleteReq;
		//decode(buffer: NodeBuffer) : MailDeleteReq;
		//decode(buffer: ByteArrayBuffer) : MailDeleteReq;
		decode64(buffer: string) : MailDeleteReq;
		
	}
}


declare module pb {

	var MailDeleteAck: MailDeleteAck;
	export interface MailDeleteAck extends ProtoBufModel {
		new(obj?: any): MailDeleteAck;
		mail?: MailNtf;
		
	}

	export interface MailDeleteAckBuilder {
		new(): MailDeleteAck;
		decode(buffer: ArrayBuffer) : MailDeleteAck;
		//decode(buffer: NodeBuffer) : MailDeleteAck;
		//decode(buffer: ByteArrayBuffer) : MailDeleteAck;
		decode64(buffer: string) : MailDeleteAck;
		
	}
}


declare module pb {

	var MailDeleteAllReq: MailDeleteAllReq;
	export interface MailDeleteAllReq extends ProtoBufModel {
		new(obj?: any): MailDeleteAllReq;
		
	}

	export interface MailDeleteAllReqBuilder {
		new(): MailDeleteAllReq;
		decode(buffer: ArrayBuffer) : MailDeleteAllReq;
		//decode(buffer: NodeBuffer) : MailDeleteAllReq;
		//decode(buffer: ByteArrayBuffer) : MailDeleteAllReq;
		decode64(buffer: string) : MailDeleteAllReq;
		
	}
}


declare module pb {

	var MailDeleteAllAck: MailDeleteAllAck;
	export interface MailDeleteAllAck extends ProtoBufModel {
		new(obj?: any): MailDeleteAllAck;
		mails: MailNtf[];
		
	}

	export interface MailDeleteAllAckBuilder {
		new(): MailDeleteAllAck;
		decode(buffer: ArrayBuffer) : MailDeleteAllAck;
		//decode(buffer: NodeBuffer) : MailDeleteAllAck;
		//decode(buffer: ByteArrayBuffer) : MailDeleteAllAck;
		decode64(buffer: string) : MailDeleteAllAck;
		
	}
}


declare module pb {

	var MaterialStageLoadReq: MaterialStageLoadReq;
	export interface MaterialStageLoadReq extends ProtoBufModel {
		new(obj?: any): MaterialStageLoadReq;
		
	}

	export interface MaterialStageLoadReqBuilder {
		new(): MaterialStageLoadReq;
		decode(buffer: ArrayBuffer) : MaterialStageLoadReq;
		//decode(buffer: NodeBuffer) : MaterialStageLoadReq;
		//decode(buffer: ByteArrayBuffer) : MaterialStageLoadReq;
		decode64(buffer: string) : MaterialStageLoadReq;
		
	}
}


declare module pb {

	var MaterialStageLoadAck: MaterialStageLoadAck;
	export interface MaterialStageLoadAck extends ProtoBufModel {
		new(obj?: any): MaterialStageLoadAck;
		materialStage: dcodeIO.ProtoBuf.Map<number,MaterialStage>;
		
	}

	export interface MaterialStageLoadAckBuilder {
		new(): MaterialStageLoadAck;
		decode(buffer: ArrayBuffer) : MaterialStageLoadAck;
		//decode(buffer: NodeBuffer) : MaterialStageLoadAck;
		//decode(buffer: ByteArrayBuffer) : MaterialStageLoadAck;
		decode64(buffer: string) : MaterialStageLoadAck;
		
	}
}


declare module pb {

	var EnterMaterialStageFightReq: EnterMaterialStageFightReq;
	export interface EnterMaterialStageFightReq extends ProtoBufModel {
		new(obj?: any): EnterMaterialStageFightReq;
		stageId?: number;
		
	}

	export interface EnterMaterialStageFightReqBuilder {
		new(): EnterMaterialStageFightReq;
		decode(buffer: ArrayBuffer) : EnterMaterialStageFightReq;
		//decode(buffer: NodeBuffer) : EnterMaterialStageFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterMaterialStageFightReq;
		decode64(buffer: string) : EnterMaterialStageFightReq;
		
	}
}


declare module pb {

	var MaterialStageFightResultNtf: MaterialStageFightResultNtf;
	export interface MaterialStageFightResultNtf extends ProtoBufModel {
		new(obj?: any): MaterialStageFightResultNtf;
		materialType?: number;
		stageId?: number;
		result?: number;
		dareNum?: number;
		goods?: GoodsChangeNtf;
		nowLayer?: number;
		lastLayer?: number;
		
	}

	export interface MaterialStageFightResultNtfBuilder {
		new(): MaterialStageFightResultNtf;
		decode(buffer: ArrayBuffer) : MaterialStageFightResultNtf;
		//decode(buffer: NodeBuffer) : MaterialStageFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : MaterialStageFightResultNtf;
		decode64(buffer: string) : MaterialStageFightResultNtf;
		
	}
}


declare module pb {

	var MaterialStageSweepReq: MaterialStageSweepReq;
	export interface MaterialStageSweepReq extends ProtoBufModel {
		new(obj?: any): MaterialStageSweepReq;
		stageId?: number;
		
	}

	export interface MaterialStageSweepReqBuilder {
		new(): MaterialStageSweepReq;
		decode(buffer: ArrayBuffer) : MaterialStageSweepReq;
		//decode(buffer: NodeBuffer) : MaterialStageSweepReq;
		//decode(buffer: ByteArrayBuffer) : MaterialStageSweepReq;
		decode64(buffer: string) : MaterialStageSweepReq;
		
	}
}


declare module pb {

	var MaterialStageSweepAck: MaterialStageSweepAck;
	export interface MaterialStageSweepAck extends ProtoBufModel {
		new(obj?: any): MaterialStageSweepAck;
		materialType?: number;
		sweepNum?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface MaterialStageSweepAckBuilder {
		new(): MaterialStageSweepAck;
		decode(buffer: ArrayBuffer) : MaterialStageSweepAck;
		//decode(buffer: NodeBuffer) : MaterialStageSweepAck;
		//decode(buffer: ByteArrayBuffer) : MaterialStageSweepAck;
		decode64(buffer: string) : MaterialStageSweepAck;
		
	}
}


declare module pb {

	var MaterialStageBuyNumNtf: MaterialStageBuyNumNtf;
	export interface MaterialStageBuyNumNtf extends ProtoBufModel {
		new(obj?: any): MaterialStageBuyNumNtf;
		materialType?: number;
		buyNum?: number;
		
	}

	export interface MaterialStageBuyNumNtfBuilder {
		new(): MaterialStageBuyNumNtf;
		decode(buffer: ArrayBuffer) : MaterialStageBuyNumNtf;
		//decode(buffer: NodeBuffer) : MaterialStageBuyNumNtf;
		//decode(buffer: ByteArrayBuffer) : MaterialStageBuyNumNtf;
		decode64(buffer: string) : MaterialStageBuyNumNtf;
		
	}
}


declare module pb {

	var MaterialStageBuyNumReq: MaterialStageBuyNumReq;
	export interface MaterialStageBuyNumReq extends ProtoBufModel {
		new(obj?: any): MaterialStageBuyNumReq;
		materialType?: number;
		use?: boolean;
		
	}

	export interface MaterialStageBuyNumReqBuilder {
		new(): MaterialStageBuyNumReq;
		decode(buffer: ArrayBuffer) : MaterialStageBuyNumReq;
		//decode(buffer: NodeBuffer) : MaterialStageBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : MaterialStageBuyNumReq;
		decode64(buffer: string) : MaterialStageBuyNumReq;
		
	}
}


declare module pb {

	var MaterialStageBuyNumAck: MaterialStageBuyNumAck;
	export interface MaterialStageBuyNumAck extends ProtoBufModel {
		new(obj?: any): MaterialStageBuyNumAck;
		materialType?: number;
		buyNum?: number;
		
	}

	export interface MaterialStageBuyNumAckBuilder {
		new(): MaterialStageBuyNumAck;
		decode(buffer: ArrayBuffer) : MaterialStageBuyNumAck;
		//decode(buffer: NodeBuffer) : MaterialStageBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : MaterialStageBuyNumAck;
		decode64(buffer: string) : MaterialStageBuyNumAck;
		
	}
}


declare module pb {

	var MiJiUpReq: MiJiUpReq;
	export interface MiJiUpReq extends ProtoBufModel {
		new(obj?: any): MiJiUpReq;
		id?: number;
		
	}

	export interface MiJiUpReqBuilder {
		new(): MiJiUpReq;
		decode(buffer: ArrayBuffer) : MiJiUpReq;
		//decode(buffer: NodeBuffer) : MiJiUpReq;
		//decode(buffer: ByteArrayBuffer) : MiJiUpReq;
		decode64(buffer: string) : MiJiUpReq;
		
	}
}


declare module pb {

	var MiJiUpAck: MiJiUpAck;
	export interface MiJiUpAck extends ProtoBufModel {
		new(obj?: any): MiJiUpAck;
		id?: number;
		lv?: number;
		
	}

	export interface MiJiUpAckBuilder {
		new(): MiJiUpAck;
		decode(buffer: ArrayBuffer) : MiJiUpAck;
		//decode(buffer: NodeBuffer) : MiJiUpAck;
		//decode(buffer: ByteArrayBuffer) : MiJiUpAck;
		decode64(buffer: string) : MiJiUpAck;
		
	}
}


declare module pb {

	var MiningLoadReq: MiningLoadReq;
	export interface MiningLoadReq extends ProtoBufModel {
		new(obj?: any): MiningLoadReq;
		
	}

	export interface MiningLoadReqBuilder {
		new(): MiningLoadReq;
		decode(buffer: ArrayBuffer) : MiningLoadReq;
		//decode(buffer: NodeBuffer) : MiningLoadReq;
		//decode(buffer: ByteArrayBuffer) : MiningLoadReq;
		decode64(buffer: string) : MiningLoadReq;
		
	}
}


declare module pb {

	var MiningLoadAck: MiningLoadAck;
	export interface MiningLoadAck extends ProtoBufModel {
		new(obj?: any): MiningLoadAck;
		mining?: MiningInfo;
		
	}

	export interface MiningLoadAckBuilder {
		new(): MiningLoadAck;
		decode(buffer: ArrayBuffer) : MiningLoadAck;
		//decode(buffer: NodeBuffer) : MiningLoadAck;
		//decode(buffer: ByteArrayBuffer) : MiningLoadAck;
		decode64(buffer: string) : MiningLoadAck;
		
	}
}


declare module pb {

	var MiningUpMinerReq: MiningUpMinerReq;
	export interface MiningUpMinerReq extends ProtoBufModel {
		new(obj?: any): MiningUpMinerReq;
		isMax?: boolean;
		
	}

	export interface MiningUpMinerReqBuilder {
		new(): MiningUpMinerReq;
		decode(buffer: ArrayBuffer) : MiningUpMinerReq;
		//decode(buffer: NodeBuffer) : MiningUpMinerReq;
		//decode(buffer: ByteArrayBuffer) : MiningUpMinerReq;
		decode64(buffer: string) : MiningUpMinerReq;
		
	}
}


declare module pb {

	var MiningUpMinerAck: MiningUpMinerAck;
	export interface MiningUpMinerAck extends ProtoBufModel {
		new(obj?: any): MiningUpMinerAck;
		miner?: number;
		luck?: number;
		isUp?: boolean;
		
	}

	export interface MiningUpMinerAckBuilder {
		new(): MiningUpMinerAck;
		decode(buffer: ArrayBuffer) : MiningUpMinerAck;
		//decode(buffer: NodeBuffer) : MiningUpMinerAck;
		//decode(buffer: ByteArrayBuffer) : MiningUpMinerAck;
		decode64(buffer: string) : MiningUpMinerAck;
		
	}
}


declare module pb {

	var MiningBuyNumReq: MiningBuyNumReq;
	export interface MiningBuyNumReq extends ProtoBufModel {
		new(obj?: any): MiningBuyNumReq;
		
	}

	export interface MiningBuyNumReqBuilder {
		new(): MiningBuyNumReq;
		decode(buffer: ArrayBuffer) : MiningBuyNumReq;
		//decode(buffer: NodeBuffer) : MiningBuyNumReq;
		//decode(buffer: ByteArrayBuffer) : MiningBuyNumReq;
		decode64(buffer: string) : MiningBuyNumReq;
		
	}
}


declare module pb {

	var MiningBuyNumAck: MiningBuyNumAck;
	export interface MiningBuyNumAck extends ProtoBufModel {
		new(obj?: any): MiningBuyNumAck;
		buyNum?: number;
		
	}

	export interface MiningBuyNumAckBuilder {
		new(): MiningBuyNumAck;
		decode(buffer: ArrayBuffer) : MiningBuyNumAck;
		//decode(buffer: NodeBuffer) : MiningBuyNumAck;
		//decode(buffer: ByteArrayBuffer) : MiningBuyNumAck;
		decode64(buffer: string) : MiningBuyNumAck;
		
	}
}


declare module pb {

	var MiningStartReq: MiningStartReq;
	export interface MiningStartReq extends ProtoBufModel {
		new(obj?: any): MiningStartReq;
		
	}

	export interface MiningStartReqBuilder {
		new(): MiningStartReq;
		decode(buffer: ArrayBuffer) : MiningStartReq;
		//decode(buffer: NodeBuffer) : MiningStartReq;
		//decode(buffer: ByteArrayBuffer) : MiningStartReq;
		decode64(buffer: string) : MiningStartReq;
		
	}
}


declare module pb {

	var MiningStartAck: MiningStartAck;
	export interface MiningStartAck extends ProtoBufModel {
		new(obj?: any): MiningStartAck;
		workTime?: number;
		workNum?: number;
		
	}

	export interface MiningStartAckBuilder {
		new(): MiningStartAck;
		decode(buffer: ArrayBuffer) : MiningStartAck;
		//decode(buffer: NodeBuffer) : MiningStartAck;
		//decode(buffer: ByteArrayBuffer) : MiningStartAck;
		decode64(buffer: string) : MiningStartAck;
		
	}
}


declare module pb {

	var MiningRobReq: MiningRobReq;
	export interface MiningRobReq extends ProtoBufModel {
		new(obj?: any): MiningRobReq;
		id?: number;
		
	}

	export interface MiningRobReqBuilder {
		new(): MiningRobReq;
		decode(buffer: ArrayBuffer) : MiningRobReq;
		//decode(buffer: NodeBuffer) : MiningRobReq;
		//decode(buffer: ByteArrayBuffer) : MiningRobReq;
		decode64(buffer: string) : MiningRobReq;
		
	}
}


declare module pb {

	var MiningRobAck: MiningRobAck;
	export interface MiningRobAck extends ProtoBufModel {
		new(obj?: any): MiningRobAck;
		result?: number;
		goods?: GoodsChangeNtf;
		robNum?: number;
		
	}

	export interface MiningRobAckBuilder {
		new(): MiningRobAck;
		decode(buffer: ArrayBuffer) : MiningRobAck;
		//decode(buffer: NodeBuffer) : MiningRobAck;
		//decode(buffer: ByteArrayBuffer) : MiningRobAck;
		decode64(buffer: string) : MiningRobAck;
		
	}
}


declare module pb {

	var MiningRobFightAck: MiningRobFightAck;
	export interface MiningRobFightAck extends ProtoBufModel {
		new(obj?: any): MiningRobFightAck;
		id?: number;
		
	}

	export interface MiningRobFightAckBuilder {
		new(): MiningRobFightAck;
		decode(buffer: ArrayBuffer) : MiningRobFightAck;
		//decode(buffer: NodeBuffer) : MiningRobFightAck;
		//decode(buffer: ByteArrayBuffer) : MiningRobFightAck;
		decode64(buffer: string) : MiningRobFightAck;
		
	}
}


declare module pb {

	var MiningRobBackReq: MiningRobBackReq;
	export interface MiningRobBackReq extends ProtoBufModel {
		new(obj?: any): MiningRobBackReq;
		id?: number;
		
	}

	export interface MiningRobBackReqBuilder {
		new(): MiningRobBackReq;
		decode(buffer: ArrayBuffer) : MiningRobBackReq;
		//decode(buffer: NodeBuffer) : MiningRobBackReq;
		//decode(buffer: ByteArrayBuffer) : MiningRobBackReq;
		decode64(buffer: string) : MiningRobBackReq;
		
	}
}


declare module pb {

	var MiningRobBackAck: MiningRobBackAck;
	export interface MiningRobBackAck extends ProtoBufModel {
		new(obj?: any): MiningRobBackAck;
		result?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface MiningRobBackAckBuilder {
		new(): MiningRobBackAck;
		decode(buffer: ArrayBuffer) : MiningRobBackAck;
		//decode(buffer: NodeBuffer) : MiningRobBackAck;
		//decode(buffer: ByteArrayBuffer) : MiningRobBackAck;
		decode64(buffer: string) : MiningRobBackAck;
		
	}
}


declare module pb {

	var MiningRobBackFightAck: MiningRobBackFightAck;
	export interface MiningRobBackFightAck extends ProtoBufModel {
		new(obj?: any): MiningRobBackFightAck;
		id?: number;
		
	}

	export interface MiningRobBackFightAckBuilder {
		new(): MiningRobBackFightAck;
		decode(buffer: ArrayBuffer) : MiningRobBackFightAck;
		//decode(buffer: NodeBuffer) : MiningRobBackFightAck;
		//decode(buffer: ByteArrayBuffer) : MiningRobBackFightAck;
		decode64(buffer: string) : MiningRobBackFightAck;
		
	}
}


declare module pb {

	var MiningRobListReq: MiningRobListReq;
	export interface MiningRobListReq extends ProtoBufModel {
		new(obj?: any): MiningRobListReq;
		
	}

	export interface MiningRobListReqBuilder {
		new(): MiningRobListReq;
		decode(buffer: ArrayBuffer) : MiningRobListReq;
		//decode(buffer: NodeBuffer) : MiningRobListReq;
		//decode(buffer: ByteArrayBuffer) : MiningRobListReq;
		decode64(buffer: string) : MiningRobListReq;
		
	}
}


declare module pb {

	var MiningRobListAck: MiningRobListAck;
	export interface MiningRobListAck extends ProtoBufModel {
		new(obj?: any): MiningRobListAck;
		mineRob: dcodeIO.ProtoBuf.Map<number,MiningRob>;
		
	}

	export interface MiningRobListAckBuilder {
		new(): MiningRobListAck;
		decode(buffer: ArrayBuffer) : MiningRobListAck;
		//decode(buffer: NodeBuffer) : MiningRobListAck;
		//decode(buffer: ByteArrayBuffer) : MiningRobListAck;
		decode64(buffer: string) : MiningRobListAck;
		
	}
}


declare module pb {

	var MiningListReq: MiningListReq;
	export interface MiningListReq extends ProtoBufModel {
		new(obj?: any): MiningListReq;
		
	}

	export interface MiningListReqBuilder {
		new(): MiningListReq;
		decode(buffer: ArrayBuffer) : MiningListReq;
		//decode(buffer: NodeBuffer) : MiningListReq;
		//decode(buffer: ByteArrayBuffer) : MiningListReq;
		decode64(buffer: string) : MiningListReq;
		
	}
}


declare module pb {

	var MiningListAck: MiningListAck;
	export interface MiningListAck extends ProtoBufModel {
		new(obj?: any): MiningListAck;
		miningList: dcodeIO.ProtoBuf.Map<number,MiningListInfo>;
		
	}

	export interface MiningListAckBuilder {
		new(): MiningListAck;
		decode(buffer: ArrayBuffer) : MiningListAck;
		//decode(buffer: NodeBuffer) : MiningListAck;
		//decode(buffer: ByteArrayBuffer) : MiningListAck;
		decode64(buffer: string) : MiningListAck;
		
	}
}


declare module pb {

	var MiningDrawLoadReq: MiningDrawLoadReq;
	export interface MiningDrawLoadReq extends ProtoBufModel {
		new(obj?: any): MiningDrawLoadReq;
		
	}

	export interface MiningDrawLoadReqBuilder {
		new(): MiningDrawLoadReq;
		decode(buffer: ArrayBuffer) : MiningDrawLoadReq;
		//decode(buffer: NodeBuffer) : MiningDrawLoadReq;
		//decode(buffer: ByteArrayBuffer) : MiningDrawLoadReq;
		decode64(buffer: string) : MiningDrawLoadReq;
		
	}
}


declare module pb {

	var MiningDrawLoadAck: MiningDrawLoadAck;
	export interface MiningDrawLoadAck extends ProtoBufModel {
		new(obj?: any): MiningDrawLoadAck;
		status?: boolean;
		robId?: number;
		robName?: string;
		robTime?: number;
		rId?: number;
		
	}

	export interface MiningDrawLoadAckBuilder {
		new(): MiningDrawLoadAck;
		decode(buffer: ArrayBuffer) : MiningDrawLoadAck;
		//decode(buffer: NodeBuffer) : MiningDrawLoadAck;
		//decode(buffer: ByteArrayBuffer) : MiningDrawLoadAck;
		decode64(buffer: string) : MiningDrawLoadAck;
		
	}
}


declare module pb {

	var MiningDrawReq: MiningDrawReq;
	export interface MiningDrawReq extends ProtoBufModel {
		new(obj?: any): MiningDrawReq;
		
	}

	export interface MiningDrawReqBuilder {
		new(): MiningDrawReq;
		decode(buffer: ArrayBuffer) : MiningDrawReq;
		//decode(buffer: NodeBuffer) : MiningDrawReq;
		//decode(buffer: ByteArrayBuffer) : MiningDrawReq;
		decode64(buffer: string) : MiningDrawReq;
		
	}
}


declare module pb {

	var MiningDrawAck: MiningDrawAck;
	export interface MiningDrawAck extends ProtoBufModel {
		new(obj?: any): MiningDrawAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface MiningDrawAckBuilder {
		new(): MiningDrawAck;
		decode(buffer: ArrayBuffer) : MiningDrawAck;
		//decode(buffer: NodeBuffer) : MiningDrawAck;
		//decode(buffer: ByteArrayBuffer) : MiningDrawAck;
		decode64(buffer: string) : MiningDrawAck;
		
	}
}


declare module pb {

	var MiningInReq: MiningInReq;
	export interface MiningInReq extends ProtoBufModel {
		new(obj?: any): MiningInReq;
		
	}

	export interface MiningInReqBuilder {
		new(): MiningInReq;
		decode(buffer: ArrayBuffer) : MiningInReq;
		//decode(buffer: NodeBuffer) : MiningInReq;
		//decode(buffer: ByteArrayBuffer) : MiningInReq;
		decode64(buffer: string) : MiningInReq;
		
	}
}


declare module pb {

	var MiningInAck: MiningInAck;
	export interface MiningInAck extends ProtoBufModel {
		new(obj?: any): MiningInAck;
		
	}

	export interface MiningInAckBuilder {
		new(): MiningInAck;
		decode(buffer: ArrayBuffer) : MiningInAck;
		//decode(buffer: NodeBuffer) : MiningInAck;
		//decode(buffer: ByteArrayBuffer) : MiningInAck;
		decode64(buffer: string) : MiningInAck;
		
	}
}


declare module pb {

	var MiningInfo: MiningInfo;
	export interface MiningInfo extends ProtoBufModel {
		new(obj?: any): MiningInfo;
		workTime?: number;
		workNum?: number;
		robNum?: number;
		buyNum?: number;
		miner?: number;
		luck?: number;
		
	}

	export interface MiningInfoBuilder {
		new(): MiningInfo;
		decode(buffer: ArrayBuffer) : MiningInfo;
		//decode(buffer: NodeBuffer) : MiningInfo;
		//decode(buffer: ByteArrayBuffer) : MiningInfo;
		decode64(buffer: string) : MiningInfo;
		
	}
}


declare module pb {

	var MiningRob: MiningRob;
	export interface MiningRob extends ProtoBufModel {
		new(obj?: any): MiningRob;
		name?: string;
		combat?: number;
		miner?: number;
		robTime?: number;
		id?: number;
		
	}

	export interface MiningRobBuilder {
		new(): MiningRob;
		decode(buffer: ArrayBuffer) : MiningRob;
		//decode(buffer: NodeBuffer) : MiningRob;
		//decode(buffer: ByteArrayBuffer) : MiningRob;
		decode64(buffer: string) : MiningRob;
		
	}
}


declare module pb {

	var MiningListInfo: MiningListInfo;
	export interface MiningListInfo extends ProtoBufModel {
		new(obj?: any): MiningListInfo;
		uid?: number;
		name?: string;
		combat?: number;
		time?: number;
		miner?: number;
		id?: number;
		
	}

	export interface MiningListInfoBuilder {
		new(): MiningListInfo;
		decode(buffer: ArrayBuffer) : MiningListInfo;
		//decode(buffer: NodeBuffer) : MiningListInfo;
		//decode(buffer: ByteArrayBuffer) : MiningListInfo;
		decode64(buffer: string) : MiningListInfo;
		
	}
}


declare module pb {

	var MonthCardBuyReq: MonthCardBuyReq;
	export interface MonthCardBuyReq extends ProtoBufModel {
		new(obj?: any): MonthCardBuyReq;
		id?: number;
		
	}

	export interface MonthCardBuyReqBuilder {
		new(): MonthCardBuyReq;
		decode(buffer: ArrayBuffer) : MonthCardBuyReq;
		//decode(buffer: NodeBuffer) : MonthCardBuyReq;
		//decode(buffer: ByteArrayBuffer) : MonthCardBuyReq;
		decode64(buffer: string) : MonthCardBuyReq;
		
	}
}


declare module pb {

	var MonthCardBuyAck: MonthCardBuyAck;
	export interface MonthCardBuyAck extends ProtoBufModel {
		new(obj?: any): MonthCardBuyAck;
		id?: number;
		monthCardType?: number;
		monthCard?: MonthCardUnit;
		
	}

	export interface MonthCardBuyAckBuilder {
		new(): MonthCardBuyAck;
		decode(buffer: ArrayBuffer) : MonthCardBuyAck;
		//decode(buffer: NodeBuffer) : MonthCardBuyAck;
		//decode(buffer: ByteArrayBuffer) : MonthCardBuyAck;
		decode64(buffer: string) : MonthCardBuyAck;
		
	}
}


declare module pb {

	var MonthCardDailyRewardReq: MonthCardDailyRewardReq;
	export interface MonthCardDailyRewardReq extends ProtoBufModel {
		new(obj?: any): MonthCardDailyRewardReq;
		monthCardType?: number;
		
	}

	export interface MonthCardDailyRewardReqBuilder {
		new(): MonthCardDailyRewardReq;
		decode(buffer: ArrayBuffer) : MonthCardDailyRewardReq;
		//decode(buffer: NodeBuffer) : MonthCardDailyRewardReq;
		//decode(buffer: ByteArrayBuffer) : MonthCardDailyRewardReq;
		decode64(buffer: string) : MonthCardDailyRewardReq;
		
	}
}


declare module pb {

	var MonthCardDailyRewardAck: MonthCardDailyRewardAck;
	export interface MonthCardDailyRewardAck extends ProtoBufModel {
		new(obj?: any): MonthCardDailyRewardAck;
		monthCardType?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface MonthCardDailyRewardAckBuilder {
		new(): MonthCardDailyRewardAck;
		decode(buffer: ArrayBuffer) : MonthCardDailyRewardAck;
		//decode(buffer: NodeBuffer) : MonthCardDailyRewardAck;
		//decode(buffer: ByteArrayBuffer) : MonthCardDailyRewardAck;
		decode64(buffer: string) : MonthCardDailyRewardAck;
		
	}
}


declare module pb {

	var OfficialUpLevelReq: OfficialUpLevelReq;
	export interface OfficialUpLevelReq extends ProtoBufModel {
		new(obj?: any): OfficialUpLevelReq;
		
	}

	export interface OfficialUpLevelReqBuilder {
		new(): OfficialUpLevelReq;
		decode(buffer: ArrayBuffer) : OfficialUpLevelReq;
		//decode(buffer: NodeBuffer) : OfficialUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : OfficialUpLevelReq;
		decode64(buffer: string) : OfficialUpLevelReq;
		
	}
}


declare module pb {

	var OfficialUpLevelAck: OfficialUpLevelAck;
	export interface OfficialUpLevelAck extends ProtoBufModel {
		new(obj?: any): OfficialUpLevelAck;
		newLv?: number;
		
	}

	export interface OfficialUpLevelAckBuilder {
		new(): OfficialUpLevelAck;
		decode(buffer: ArrayBuffer) : OfficialUpLevelAck;
		//decode(buffer: NodeBuffer) : OfficialUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : OfficialUpLevelAck;
		decode64(buffer: string) : OfficialUpLevelAck;
		
	}
}


declare module pb {

	var OfflineAwardLoadReq: OfflineAwardLoadReq;
	export interface OfflineAwardLoadReq extends ProtoBufModel {
		new(obj?: any): OfflineAwardLoadReq;
		
	}

	export interface OfflineAwardLoadReqBuilder {
		new(): OfflineAwardLoadReq;
		decode(buffer: ArrayBuffer) : OfflineAwardLoadReq;
		//decode(buffer: NodeBuffer) : OfflineAwardLoadReq;
		//decode(buffer: ByteArrayBuffer) : OfflineAwardLoadReq;
		decode64(buffer: string) : OfflineAwardLoadReq;
		
	}
}


declare module pb {

	var OfflineAwardLoadAck: OfflineAwardLoadAck;
	export interface OfflineAwardLoadAck extends ProtoBufModel {
		new(obj?: any): OfflineAwardLoadAck;
		offlineTimes?: number;
		getExpNum?: number;
		
	}

	export interface OfflineAwardLoadAckBuilder {
		new(): OfflineAwardLoadAck;
		decode(buffer: ArrayBuffer) : OfflineAwardLoadAck;
		//decode(buffer: NodeBuffer) : OfflineAwardLoadAck;
		//decode(buffer: ByteArrayBuffer) : OfflineAwardLoadAck;
		decode64(buffer: string) : OfflineAwardLoadAck;
		
	}
}


declare module pb {

	var OfflineAwardGetReq: OfflineAwardGetReq;
	export interface OfflineAwardGetReq extends ProtoBufModel {
		new(obj?: any): OfflineAwardGetReq;
		
	}

	export interface OfflineAwardGetReqBuilder {
		new(): OfflineAwardGetReq;
		decode(buffer: ArrayBuffer) : OfflineAwardGetReq;
		//decode(buffer: NodeBuffer) : OfflineAwardGetReq;
		//decode(buffer: ByteArrayBuffer) : OfflineAwardGetReq;
		decode64(buffer: string) : OfflineAwardGetReq;
		
	}
}


declare module pb {

	var OfflineAwardGetAck: OfflineAwardGetAck;
	export interface OfflineAwardGetAck extends ProtoBufModel {
		new(obj?: any): OfflineAwardGetAck;
		goods?: GoodsChangeNtf;
		isGet?: boolean;
		
	}

	export interface OfflineAwardGetAckBuilder {
		new(): OfflineAwardGetAck;
		decode(buffer: ArrayBuffer) : OfflineAwardGetAck;
		//decode(buffer: NodeBuffer) : OfflineAwardGetAck;
		//decode(buffer: ByteArrayBuffer) : OfflineAwardGetAck;
		decode64(buffer: string) : OfflineAwardGetAck;
		
	}
}


declare module pb {

	var GetOnlineAwardInfoReq: GetOnlineAwardInfoReq;
	export interface GetOnlineAwardInfoReq extends ProtoBufModel {
		new(obj?: any): GetOnlineAwardInfoReq;
		
	}

	export interface GetOnlineAwardInfoReqBuilder {
		new(): GetOnlineAwardInfoReq;
		decode(buffer: ArrayBuffer) : GetOnlineAwardInfoReq;
		//decode(buffer: NodeBuffer) : GetOnlineAwardInfoReq;
		//decode(buffer: ByteArrayBuffer) : GetOnlineAwardInfoReq;
		decode64(buffer: string) : GetOnlineAwardInfoReq;
		
	}
}


declare module pb {

	var GetOnlineAwardInfoAck: GetOnlineAwardInfoAck;
	export interface GetOnlineAwardInfoAck extends ProtoBufModel {
		new(obj?: any): GetOnlineAwardInfoAck;
		onlineTime?: number;
		getAwardId: number[];
		
	}

	export interface GetOnlineAwardInfoAckBuilder {
		new(): GetOnlineAwardInfoAck;
		decode(buffer: ArrayBuffer) : GetOnlineAwardInfoAck;
		//decode(buffer: NodeBuffer) : GetOnlineAwardInfoAck;
		//decode(buffer: ByteArrayBuffer) : GetOnlineAwardInfoAck;
		decode64(buffer: string) : GetOnlineAwardInfoAck;
		
	}
}


declare module pb {

	var GetOnlineAwardReq: GetOnlineAwardReq;
	export interface GetOnlineAwardReq extends ProtoBufModel {
		new(obj?: any): GetOnlineAwardReq;
		awardId?: number;
		
	}

	export interface GetOnlineAwardReqBuilder {
		new(): GetOnlineAwardReq;
		decode(buffer: ArrayBuffer) : GetOnlineAwardReq;
		//decode(buffer: NodeBuffer) : GetOnlineAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetOnlineAwardReq;
		decode64(buffer: string) : GetOnlineAwardReq;
		
	}
}


declare module pb {

	var GetOnlineAwardAck: GetOnlineAwardAck;
	export interface GetOnlineAwardAck extends ProtoBufModel {
		new(obj?: any): GetOnlineAwardAck;
		getAwardId: number[];
		
	}

	export interface GetOnlineAwardAckBuilder {
		new(): GetOnlineAwardAck;
		decode(buffer: ArrayBuffer) : GetOnlineAwardAck;
		//decode(buffer: NodeBuffer) : GetOnlineAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetOnlineAwardAck;
		decode64(buffer: string) : GetOnlineAwardAck;
		
	}
}


declare module pb {

	var PanaceaUseReq: PanaceaUseReq;
	export interface PanaceaUseReq extends ProtoBufModel {
		new(obj?: any): PanaceaUseReq;
		id?: number;
		
	}

	export interface PanaceaUseReqBuilder {
		new(): PanaceaUseReq;
		decode(buffer: ArrayBuffer) : PanaceaUseReq;
		//decode(buffer: NodeBuffer) : PanaceaUseReq;
		//decode(buffer: ByteArrayBuffer) : PanaceaUseReq;
		decode64(buffer: string) : PanaceaUseReq;
		
	}
}


declare module pb {

	var PanaceaUseAck: PanaceaUseAck;
	export interface PanaceaUseAck extends ProtoBufModel {
		new(obj?: any): PanaceaUseAck;
		id?: number;
		panacea?: PanaceaInfo;
		
	}

	export interface PanaceaUseAckBuilder {
		new(): PanaceaUseAck;
		decode(buffer: ArrayBuffer) : PanaceaUseAck;
		//decode(buffer: NodeBuffer) : PanaceaUseAck;
		//decode(buffer: ByteArrayBuffer) : PanaceaUseAck;
		decode64(buffer: string) : PanaceaUseAck;
		
	}
}


declare module pb {

	var PersonBossLoadReq: PersonBossLoadReq;
	export interface PersonBossLoadReq extends ProtoBufModel {
		new(obj?: any): PersonBossLoadReq;
		
	}

	export interface PersonBossLoadReqBuilder {
		new(): PersonBossLoadReq;
		decode(buffer: ArrayBuffer) : PersonBossLoadReq;
		//decode(buffer: NodeBuffer) : PersonBossLoadReq;
		//decode(buffer: ByteArrayBuffer) : PersonBossLoadReq;
		decode64(buffer: string) : PersonBossLoadReq;
		
	}
}


declare module pb {

	var PersonBossLoadAck: PersonBossLoadAck;
	export interface PersonBossLoadAck extends ProtoBufModel {
		new(obj?: any): PersonBossLoadAck;
		PersonBoss: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface PersonBossLoadAckBuilder {
		new(): PersonBossLoadAck;
		decode(buffer: ArrayBuffer) : PersonBossLoadAck;
		//decode(buffer: NodeBuffer) : PersonBossLoadAck;
		//decode(buffer: ByteArrayBuffer) : PersonBossLoadAck;
		decode64(buffer: string) : PersonBossLoadAck;
		
	}
}


declare module pb {

	var EnterPersonBossFightReq: EnterPersonBossFightReq;
	export interface EnterPersonBossFightReq extends ProtoBufModel {
		new(obj?: any): EnterPersonBossFightReq;
		stageId?: number;
		
	}

	export interface EnterPersonBossFightReqBuilder {
		new(): EnterPersonBossFightReq;
		decode(buffer: ArrayBuffer) : EnterPersonBossFightReq;
		//decode(buffer: NodeBuffer) : EnterPersonBossFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterPersonBossFightReq;
		decode64(buffer: string) : EnterPersonBossFightReq;
		
	}
}


declare module pb {

	var EnterPersonBossFightAck: EnterPersonBossFightAck;
	export interface EnterPersonBossFightAck extends ProtoBufModel {
		new(obj?: any): EnterPersonBossFightAck;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface EnterPersonBossFightAckBuilder {
		new(): EnterPersonBossFightAck;
		decode(buffer: ArrayBuffer) : EnterPersonBossFightAck;
		//decode(buffer: NodeBuffer) : EnterPersonBossFightAck;
		//decode(buffer: ByteArrayBuffer) : EnterPersonBossFightAck;
		decode64(buffer: string) : EnterPersonBossFightAck;
		
	}
}


declare module pb {

	var PersonBossFightResultNtf: PersonBossFightResultNtf;
	export interface PersonBossFightResultNtf extends ProtoBufModel {
		new(obj?: any): PersonBossFightResultNtf;
		stageId?: number;
		dareNum?: number;
		result?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface PersonBossFightResultNtfBuilder {
		new(): PersonBossFightResultNtf;
		decode(buffer: ArrayBuffer) : PersonBossFightResultNtf;
		//decode(buffer: NodeBuffer) : PersonBossFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : PersonBossFightResultNtf;
		decode64(buffer: string) : PersonBossFightResultNtf;
		
	}
}


declare module pb {

	var PersonBossSweepReq: PersonBossSweepReq;
	export interface PersonBossSweepReq extends ProtoBufModel {
		new(obj?: any): PersonBossSweepReq;
		stageId?: number;
		
	}

	export interface PersonBossSweepReqBuilder {
		new(): PersonBossSweepReq;
		decode(buffer: ArrayBuffer) : PersonBossSweepReq;
		//decode(buffer: NodeBuffer) : PersonBossSweepReq;
		//decode(buffer: ByteArrayBuffer) : PersonBossSweepReq;
		decode64(buffer: string) : PersonBossSweepReq;
		
	}
}


declare module pb {

	var PersonBossSweepAck: PersonBossSweepAck;
	export interface PersonBossSweepAck extends ProtoBufModel {
		new(obj?: any): PersonBossSweepAck;
		stageId?: number;
		dareNum?: number;
		goods?: GoodsChangeNtf;
		isBagFull?: number;
		
	}

	export interface PersonBossSweepAckBuilder {
		new(): PersonBossSweepAck;
		decode(buffer: ArrayBuffer) : PersonBossSweepAck;
		//decode(buffer: NodeBuffer) : PersonBossSweepAck;
		//decode(buffer: ByteArrayBuffer) : PersonBossSweepAck;
		decode64(buffer: string) : PersonBossSweepAck;
		
	}
}


declare module pb {

	var PersonBossDareNumNtf: PersonBossDareNumNtf;
	export interface PersonBossDareNumNtf extends ProtoBufModel {
		new(obj?: any): PersonBossDareNumNtf;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface PersonBossDareNumNtfBuilder {
		new(): PersonBossDareNumNtf;
		decode(buffer: ArrayBuffer) : PersonBossDareNumNtf;
		//decode(buffer: NodeBuffer) : PersonBossDareNumNtf;
		//decode(buffer: ByteArrayBuffer) : PersonBossDareNumNtf;
		decode64(buffer: string) : PersonBossDareNumNtf;
		
	}
}


declare module pb {

	var PetActiveReq: PetActiveReq;
	export interface PetActiveReq extends ProtoBufModel {
		new(obj?: any): PetActiveReq;
		id?: number;
		
	}

	export interface PetActiveReqBuilder {
		new(): PetActiveReq;
		decode(buffer: ArrayBuffer) : PetActiveReq;
		//decode(buffer: NodeBuffer) : PetActiveReq;
		//decode(buffer: ByteArrayBuffer) : PetActiveReq;
		decode64(buffer: string) : PetActiveReq;
		
	}
}


declare module pb {

	var PetActiveAck: PetActiveAck;
	export interface PetActiveAck extends ProtoBufModel {
		new(obj?: any): PetActiveAck;
		id?: number;
		petInfo?: PetInfo;
		
	}

	export interface PetActiveAckBuilder {
		new(): PetActiveAck;
		decode(buffer: ArrayBuffer) : PetActiveAck;
		//decode(buffer: NodeBuffer) : PetActiveAck;
		//decode(buffer: ByteArrayBuffer) : PetActiveAck;
		decode64(buffer: string) : PetActiveAck;
		
	}
}


declare module pb {

	var PetUpLvReq: PetUpLvReq;
	export interface PetUpLvReq extends ProtoBufModel {
		new(obj?: any): PetUpLvReq;
		id?: number;
		itemId?: number;
		itemNum?: number;
		
	}

	export interface PetUpLvReqBuilder {
		new(): PetUpLvReq;
		decode(buffer: ArrayBuffer) : PetUpLvReq;
		//decode(buffer: NodeBuffer) : PetUpLvReq;
		//decode(buffer: ByteArrayBuffer) : PetUpLvReq;
		decode64(buffer: string) : PetUpLvReq;
		
	}
}


declare module pb {

	var PetUpLvAck: PetUpLvAck;
	export interface PetUpLvAck extends ProtoBufModel {
		new(obj?: any): PetUpLvAck;
		id?: number;
		lv?: number;
		exp?: number;
		
	}

	export interface PetUpLvAckBuilder {
		new(): PetUpLvAck;
		decode(buffer: ArrayBuffer) : PetUpLvAck;
		//decode(buffer: NodeBuffer) : PetUpLvAck;
		//decode(buffer: ByteArrayBuffer) : PetUpLvAck;
		decode64(buffer: string) : PetUpLvAck;
		
	}
}


declare module pb {

	var PetUpGradeReq: PetUpGradeReq;
	export interface PetUpGradeReq extends ProtoBufModel {
		new(obj?: any): PetUpGradeReq;
		id?: number;
		
	}

	export interface PetUpGradeReqBuilder {
		new(): PetUpGradeReq;
		decode(buffer: ArrayBuffer) : PetUpGradeReq;
		//decode(buffer: NodeBuffer) : PetUpGradeReq;
		//decode(buffer: ByteArrayBuffer) : PetUpGradeReq;
		decode64(buffer: string) : PetUpGradeReq;
		
	}
}


declare module pb {

	var PetUpGradeAck: PetUpGradeAck;
	export interface PetUpGradeAck extends ProtoBufModel {
		new(obj?: any): PetUpGradeAck;
		id?: number;
		grade?: number;
		
	}

	export interface PetUpGradeAckBuilder {
		new(): PetUpGradeAck;
		decode(buffer: ArrayBuffer) : PetUpGradeAck;
		//decode(buffer: NodeBuffer) : PetUpGradeAck;
		//decode(buffer: ByteArrayBuffer) : PetUpGradeAck;
		decode64(buffer: string) : PetUpGradeAck;
		
	}
}


declare module pb {

	var PetBreakReq: PetBreakReq;
	export interface PetBreakReq extends ProtoBufModel {
		new(obj?: any): PetBreakReq;
		id?: number;
		
	}

	export interface PetBreakReqBuilder {
		new(): PetBreakReq;
		decode(buffer: ArrayBuffer) : PetBreakReq;
		//decode(buffer: NodeBuffer) : PetBreakReq;
		//decode(buffer: ByteArrayBuffer) : PetBreakReq;
		decode64(buffer: string) : PetBreakReq;
		
	}
}


declare module pb {

	var PetBreakAck: PetBreakAck;
	export interface PetBreakAck extends ProtoBufModel {
		new(obj?: any): PetBreakAck;
		id?: number;
		break?: number;
		
	}

	export interface PetBreakAckBuilder {
		new(): PetBreakAck;
		decode(buffer: ArrayBuffer) : PetBreakAck;
		//decode(buffer: NodeBuffer) : PetBreakAck;
		//decode(buffer: ByteArrayBuffer) : PetBreakAck;
		decode64(buffer: string) : PetBreakAck;
		
	}
}


declare module pb {

	var PetChangeWearReq: PetChangeWearReq;
	export interface PetChangeWearReq extends ProtoBufModel {
		new(obj?: any): PetChangeWearReq;
		id?: number;
		
	}

	export interface PetChangeWearReqBuilder {
		new(): PetChangeWearReq;
		decode(buffer: ArrayBuffer) : PetChangeWearReq;
		//decode(buffer: NodeBuffer) : PetChangeWearReq;
		//decode(buffer: ByteArrayBuffer) : PetChangeWearReq;
		decode64(buffer: string) : PetChangeWearReq;
		
	}
}


declare module pb {

	var PetChangeWearAck: PetChangeWearAck;
	export interface PetChangeWearAck extends ProtoBufModel {
		new(obj?: any): PetChangeWearAck;
		petId?: number;
		
	}

	export interface PetChangeWearAckBuilder {
		new(): PetChangeWearAck;
		decode(buffer: ArrayBuffer) : PetChangeWearAck;
		//decode(buffer: NodeBuffer) : PetChangeWearAck;
		//decode(buffer: ByteArrayBuffer) : PetChangeWearAck;
		decode64(buffer: string) : PetChangeWearAck;
		
	}
}


declare module pb {

	var PetAppendageReq: PetAppendageReq;
	export interface PetAppendageReq extends ProtoBufModel {
		new(obj?: any): PetAppendageReq;
		petId?: number;
		
	}

	export interface PetAppendageReqBuilder {
		new(): PetAppendageReq;
		decode(buffer: ArrayBuffer) : PetAppendageReq;
		//decode(buffer: NodeBuffer) : PetAppendageReq;
		//decode(buffer: ByteArrayBuffer) : PetAppendageReq;
		decode64(buffer: string) : PetAppendageReq;
		
	}
}


declare module pb {

	var PetAppendageAck: PetAppendageAck;
	export interface PetAppendageAck extends ProtoBufModel {
		new(obj?: any): PetAppendageAck;
		petId?: number;
		lv?: number;
		
	}

	export interface PetAppendageAckBuilder {
		new(): PetAppendageAck;
		decode(buffer: ArrayBuffer) : PetAppendageAck;
		//decode(buffer: NodeBuffer) : PetAppendageAck;
		//decode(buffer: ByteArrayBuffer) : PetAppendageAck;
		decode64(buffer: string) : PetAppendageAck;
		
	}
}


declare module pb {

	var PreviewFunctionLoadReq: PreviewFunctionLoadReq;
	export interface PreviewFunctionLoadReq extends ProtoBufModel {
		new(obj?: any): PreviewFunctionLoadReq;
		
	}

	export interface PreviewFunctionLoadReqBuilder {
		new(): PreviewFunctionLoadReq;
		decode(buffer: ArrayBuffer) : PreviewFunctionLoadReq;
		//decode(buffer: NodeBuffer) : PreviewFunctionLoadReq;
		//decode(buffer: ByteArrayBuffer) : PreviewFunctionLoadReq;
		decode64(buffer: string) : PreviewFunctionLoadReq;
		
	}
}


declare module pb {

	var PreviewFunctionLoadAck: PreviewFunctionLoadAck;
	export interface PreviewFunctionLoadAck extends ProtoBufModel {
		new(obj?: any): PreviewFunctionLoadAck;
		haveBuyIds: number[];
		havePointIds: number[];
		
	}

	export interface PreviewFunctionLoadAckBuilder {
		new(): PreviewFunctionLoadAck;
		decode(buffer: ArrayBuffer) : PreviewFunctionLoadAck;
		//decode(buffer: NodeBuffer) : PreviewFunctionLoadAck;
		//decode(buffer: ByteArrayBuffer) : PreviewFunctionLoadAck;
		decode64(buffer: string) : PreviewFunctionLoadAck;
		
	}
}


declare module pb {

	var PreviewFunctionGetReq: PreviewFunctionGetReq;
	export interface PreviewFunctionGetReq extends ProtoBufModel {
		new(obj?: any): PreviewFunctionGetReq;
		id?: number;
		
	}

	export interface PreviewFunctionGetReqBuilder {
		new(): PreviewFunctionGetReq;
		decode(buffer: ArrayBuffer) : PreviewFunctionGetReq;
		//decode(buffer: NodeBuffer) : PreviewFunctionGetReq;
		//decode(buffer: ByteArrayBuffer) : PreviewFunctionGetReq;
		decode64(buffer: string) : PreviewFunctionGetReq;
		
	}
}


declare module pb {

	var PreviewFunctionGetAck: PreviewFunctionGetAck;
	export interface PreviewFunctionGetAck extends ProtoBufModel {
		new(obj?: any): PreviewFunctionGetAck;
		id?: number;
		haveBuyIds: number[];
		havePointIds: number[];
		
	}

	export interface PreviewFunctionGetAckBuilder {
		new(): PreviewFunctionGetAck;
		decode(buffer: ArrayBuffer) : PreviewFunctionGetAck;
		//decode(buffer: NodeBuffer) : PreviewFunctionGetAck;
		//decode(buffer: ByteArrayBuffer) : PreviewFunctionGetAck;
		decode64(buffer: string) : PreviewFunctionGetAck;
		
	}
}


declare module pb {

	var PreviewFunctionPointReq: PreviewFunctionPointReq;
	export interface PreviewFunctionPointReq extends ProtoBufModel {
		new(obj?: any): PreviewFunctionPointReq;
		id?: number;
		
	}

	export interface PreviewFunctionPointReqBuilder {
		new(): PreviewFunctionPointReq;
		decode(buffer: ArrayBuffer) : PreviewFunctionPointReq;
		//decode(buffer: NodeBuffer) : PreviewFunctionPointReq;
		//decode(buffer: ByteArrayBuffer) : PreviewFunctionPointReq;
		decode64(buffer: string) : PreviewFunctionPointReq;
		
	}
}


declare module pb {

	var PreviewFunctionPointAck: PreviewFunctionPointAck;
	export interface PreviewFunctionPointAck extends ProtoBufModel {
		new(obj?: any): PreviewFunctionPointAck;
		havePointIds: number[];
		
	}

	export interface PreviewFunctionPointAckBuilder {
		new(): PreviewFunctionPointAck;
		decode(buffer: ArrayBuffer) : PreviewFunctionPointAck;
		//decode(buffer: NodeBuffer) : PreviewFunctionPointAck;
		//decode(buffer: ByteArrayBuffer) : PreviewFunctionPointAck;
		decode64(buffer: string) : PreviewFunctionPointAck;
		
	}
}


declare module pb {

	var PrivilegeBuyReq: PrivilegeBuyReq;
	export interface PrivilegeBuyReq extends ProtoBufModel {
		new(obj?: any): PrivilegeBuyReq;
		privilegeId?: number;
		
	}

	export interface PrivilegeBuyReqBuilder {
		new(): PrivilegeBuyReq;
		decode(buffer: ArrayBuffer) : PrivilegeBuyReq;
		//decode(buffer: NodeBuffer) : PrivilegeBuyReq;
		//decode(buffer: ByteArrayBuffer) : PrivilegeBuyReq;
		decode64(buffer: string) : PrivilegeBuyReq;
		
	}
}


declare module pb {

	var PrivilegeBuyAck: PrivilegeBuyAck;
	export interface PrivilegeBuyAck extends ProtoBufModel {
		new(obj?: any): PrivilegeBuyAck;
		privilegeId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface PrivilegeBuyAckBuilder {
		new(): PrivilegeBuyAck;
		decode(buffer: ArrayBuffer) : PrivilegeBuyAck;
		//decode(buffer: NodeBuffer) : PrivilegeBuyAck;
		//decode(buffer: ByteArrayBuffer) : PrivilegeBuyAck;
		decode64(buffer: string) : PrivilegeBuyAck;
		
	}
}


declare module pb {

	var RankLoadReq: RankLoadReq;
	export interface RankLoadReq extends ProtoBufModel {
		new(obj?: any): RankLoadReq;
		type?: number;
		
	}

	export interface RankLoadReqBuilder {
		new(): RankLoadReq;
		decode(buffer: ArrayBuffer) : RankLoadReq;
		//decode(buffer: NodeBuffer) : RankLoadReq;
		//decode(buffer: ByteArrayBuffer) : RankLoadReq;
		decode64(buffer: string) : RankLoadReq;
		
	}
}


declare module pb {

	var RankLoadAck: RankLoadAck;
	export interface RankLoadAck extends ProtoBufModel {
		new(obj?: any): RankLoadAck;
		ranks: RankInfo[];
		self?: number;
		type?: number;
		
	}

	export interface RankLoadAckBuilder {
		new(): RankLoadAck;
		decode(buffer: ArrayBuffer) : RankLoadAck;
		//decode(buffer: NodeBuffer) : RankLoadAck;
		//decode(buffer: ByteArrayBuffer) : RankLoadAck;
		decode64(buffer: string) : RankLoadAck;
		
	}
}


declare module pb {

	var RankWorshipReq: RankWorshipReq;
	export interface RankWorshipReq extends ProtoBufModel {
		new(obj?: any): RankWorshipReq;
		
	}

	export interface RankWorshipReqBuilder {
		new(): RankWorshipReq;
		decode(buffer: ArrayBuffer) : RankWorshipReq;
		//decode(buffer: NodeBuffer) : RankWorshipReq;
		//decode(buffer: ByteArrayBuffer) : RankWorshipReq;
		decode64(buffer: string) : RankWorshipReq;
		
	}
}


declare module pb {

	var RankWorshipAck: RankWorshipAck;
	export interface RankWorshipAck extends ProtoBufModel {
		new(obj?: any): RankWorshipAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface RankWorshipAckBuilder {
		new(): RankWorshipAck;
		decode(buffer: ArrayBuffer) : RankWorshipAck;
		//decode(buffer: NodeBuffer) : RankWorshipAck;
		//decode(buffer: ByteArrayBuffer) : RankWorshipAck;
		decode64(buffer: string) : RankWorshipAck;
		
	}
}


declare module pb {

	var RechargFulfilledNtf: RechargFulfilledNtf;
	export interface RechargFulfilledNtf extends ProtoBufModel {
		new(obj?: any): RechargFulfilledNtf;
		ingot?: number;
		payMoney?: number;
		vip?: number;
		vipExp?: number;
		rechargedAll?: number;
		rechargeId?: number;
		
	}

	export interface RechargFulfilledNtfBuilder {
		new(): RechargFulfilledNtf;
		decode(buffer: ArrayBuffer) : RechargFulfilledNtf;
		//decode(buffer: NodeBuffer) : RechargFulfilledNtf;
		//decode(buffer: ByteArrayBuffer) : RechargFulfilledNtf;
		decode64(buffer: string) : RechargFulfilledNtf;
		
	}
}


declare module pb {

	var RechargeApplyPayReq: RechargeApplyPayReq;
	export interface RechargeApplyPayReq extends ProtoBufModel {
		new(obj?: any): RechargeApplyPayReq;
		payNum?: number;
		rechargeId?: number;
		
	}

	export interface RechargeApplyPayReqBuilder {
		new(): RechargeApplyPayReq;
		decode(buffer: ArrayBuffer) : RechargeApplyPayReq;
		//decode(buffer: NodeBuffer) : RechargeApplyPayReq;
		//decode(buffer: ByteArrayBuffer) : RechargeApplyPayReq;
		decode64(buffer: string) : RechargeApplyPayReq;
		
	}
}


declare module pb {

	var RechargeApplyPayAck: RechargeApplyPayAck;
	export interface RechargeApplyPayAck extends ProtoBufModel {
		new(obj?: any): RechargeApplyPayAck;
		result?: boolean;
		payData?: string;
		rechargeId?: number;
		isPayToken?: boolean;
		
	}

	export interface RechargeApplyPayAckBuilder {
		new(): RechargeApplyPayAck;
		decode(buffer: ArrayBuffer) : RechargeApplyPayAck;
		//decode(buffer: NodeBuffer) : RechargeApplyPayAck;
		//decode(buffer: ByteArrayBuffer) : RechargeApplyPayAck;
		decode64(buffer: string) : RechargeApplyPayAck;
		
	}
}


declare module pb {

	var MoneyPayReq: MoneyPayReq;
	export interface MoneyPayReq extends ProtoBufModel {
		new(obj?: any): MoneyPayReq;
		payType?: number;
		payNum?: number;
		typeId?: number;
		
	}

	export interface MoneyPayReqBuilder {
		new(): MoneyPayReq;
		decode(buffer: ArrayBuffer) : MoneyPayReq;
		//decode(buffer: NodeBuffer) : MoneyPayReq;
		//decode(buffer: ByteArrayBuffer) : MoneyPayReq;
		decode64(buffer: string) : MoneyPayReq;
		
	}
}


declare module pb {

	var MoneyPayAck: MoneyPayAck;
	export interface MoneyPayAck extends ProtoBufModel {
		new(obj?: any): MoneyPayAck;
		result?: boolean;
		payData?: string;
		payType?: number;
		payNum?: number;
		typeId?: number;
		isPayToken?: boolean;
		
	}

	export interface MoneyPayAckBuilder {
		new(): MoneyPayAck;
		decode(buffer: ArrayBuffer) : MoneyPayAck;
		//decode(buffer: NodeBuffer) : MoneyPayAck;
		//decode(buffer: ByteArrayBuffer) : MoneyPayAck;
		decode64(buffer: string) : MoneyPayAck;
		
	}
}


declare module pb {

	var RechargeResetNtf: RechargeResetNtf;
	export interface RechargeResetNtf extends ProtoBufModel {
		new(obj?: any): RechargeResetNtf;
		recharge: number[];
		
	}

	export interface RechargeResetNtfBuilder {
		new(): RechargeResetNtf;
		decode(buffer: ArrayBuffer) : RechargeResetNtf;
		//decode(buffer: NodeBuffer) : RechargeResetNtf;
		//decode(buffer: ByteArrayBuffer) : RechargeResetNtf;
		decode64(buffer: string) : RechargeResetNtf;
		
	}
}


declare module pb {

	var ContRechargeCycleNtf: ContRechargeCycleNtf;
	export interface ContRechargeCycleNtf extends ProtoBufModel {
		new(obj?: any): ContRechargeCycleNtf;
		cycle?: number;
		
	}

	export interface ContRechargeCycleNtfBuilder {
		new(): ContRechargeCycleNtf;
		decode(buffer: ArrayBuffer) : ContRechargeCycleNtf;
		//decode(buffer: NodeBuffer) : ContRechargeCycleNtf;
		//decode(buffer: ByteArrayBuffer) : ContRechargeCycleNtf;
		decode64(buffer: string) : ContRechargeCycleNtf;
		
	}
}


declare module pb {

	var ContRechargeNtf: ContRechargeNtf;
	export interface ContRechargeNtf extends ProtoBufModel {
		new(obj?: any): ContRechargeNtf;
		recharge: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface ContRechargeNtfBuilder {
		new(): ContRechargeNtf;
		decode(buffer: ArrayBuffer) : ContRechargeNtf;
		//decode(buffer: NodeBuffer) : ContRechargeNtf;
		//decode(buffer: ByteArrayBuffer) : ContRechargeNtf;
		decode64(buffer: string) : ContRechargeNtf;
		
	}
}


declare module pb {

	var ContRechargeReceiveReq: ContRechargeReceiveReq;
	export interface ContRechargeReceiveReq extends ProtoBufModel {
		new(obj?: any): ContRechargeReceiveReq;
		contRechargeId?: number;
		
	}

	export interface ContRechargeReceiveReqBuilder {
		new(): ContRechargeReceiveReq;
		decode(buffer: ArrayBuffer) : ContRechargeReceiveReq;
		//decode(buffer: NodeBuffer) : ContRechargeReceiveReq;
		//decode(buffer: ByteArrayBuffer) : ContRechargeReceiveReq;
		decode64(buffer: string) : ContRechargeReceiveReq;
		
	}
}


declare module pb {

	var ContRechargeReceiveAck: ContRechargeReceiveAck;
	export interface ContRechargeReceiveAck extends ProtoBufModel {
		new(obj?: any): ContRechargeReceiveAck;
		contRechargeId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface ContRechargeReceiveAckBuilder {
		new(): ContRechargeReceiveAck;
		decode(buffer: ArrayBuffer) : ContRechargeReceiveAck;
		//decode(buffer: NodeBuffer) : ContRechargeReceiveAck;
		//decode(buffer: ByteArrayBuffer) : ContRechargeReceiveAck;
		decode64(buffer: string) : ContRechargeReceiveAck;
		
	}
}


declare module pb {

	var RechargeAllGetReq: RechargeAllGetReq;
	export interface RechargeAllGetReq extends ProtoBufModel {
		new(obj?: any): RechargeAllGetReq;
		id?: number;
		
	}

	export interface RechargeAllGetReqBuilder {
		new(): RechargeAllGetReq;
		decode(buffer: ArrayBuffer) : RechargeAllGetReq;
		//decode(buffer: NodeBuffer) : RechargeAllGetReq;
		//decode(buffer: ByteArrayBuffer) : RechargeAllGetReq;
		decode64(buffer: string) : RechargeAllGetReq;
		
	}
}


declare module pb {

	var RechargeAllGetAck: RechargeAllGetAck;
	export interface RechargeAllGetAck extends ProtoBufModel {
		new(obj?: any): RechargeAllGetAck;
		rechargeGetGetIds: number[];
		rechargeAll?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface RechargeAllGetAckBuilder {
		new(): RechargeAllGetAck;
		decode(buffer: ArrayBuffer) : RechargeAllGetAck;
		//decode(buffer: NodeBuffer) : RechargeAllGetAck;
		//decode(buffer: ByteArrayBuffer) : RechargeAllGetAck;
		decode64(buffer: string) : RechargeAllGetAck;
		
	}
}


declare module pb {

	var ReinActiveReq: ReinActiveReq;
	export interface ReinActiveReq extends ProtoBufModel {
		new(obj?: any): ReinActiveReq;
		
	}

	export interface ReinActiveReqBuilder {
		new(): ReinActiveReq;
		decode(buffer: ArrayBuffer) : ReinActiveReq;
		//decode(buffer: NodeBuffer) : ReinActiveReq;
		//decode(buffer: ByteArrayBuffer) : ReinActiveReq;
		decode64(buffer: string) : ReinActiveReq;
		
	}
}


declare module pb {

	var ReinActiveAck: ReinActiveAck;
	export interface ReinActiveAck extends ProtoBufModel {
		new(obj?: any): ReinActiveAck;
		rein?: Rein;
		
	}

	export interface ReinActiveAckBuilder {
		new(): ReinActiveAck;
		decode(buffer: ArrayBuffer) : ReinActiveAck;
		//decode(buffer: NodeBuffer) : ReinActiveAck;
		//decode(buffer: ByteArrayBuffer) : ReinActiveAck;
		decode64(buffer: string) : ReinActiveAck;
		
	}
}


declare module pb {

	var ReincarnationReq: ReincarnationReq;
	export interface ReincarnationReq extends ProtoBufModel {
		new(obj?: any): ReincarnationReq;
		
	}

	export interface ReincarnationReqBuilder {
		new(): ReincarnationReq;
		decode(buffer: ArrayBuffer) : ReincarnationReq;
		//decode(buffer: NodeBuffer) : ReincarnationReq;
		//decode(buffer: ByteArrayBuffer) : ReincarnationReq;
		decode64(buffer: string) : ReincarnationReq;
		
	}
}


declare module pb {

	var ReincarnationAck: ReincarnationAck;
	export interface ReincarnationAck extends ProtoBufModel {
		new(obj?: any): ReincarnationAck;
		rein?: Rein;
		
	}

	export interface ReincarnationAckBuilder {
		new(): ReincarnationAck;
		decode(buffer: ArrayBuffer) : ReincarnationAck;
		//decode(buffer: NodeBuffer) : ReincarnationAck;
		//decode(buffer: ByteArrayBuffer) : ReincarnationAck;
		decode64(buffer: string) : ReincarnationAck;
		
	}
}


declare module pb {

	var ReinCostBuyReq: ReinCostBuyReq;
	export interface ReinCostBuyReq extends ProtoBufModel {
		new(obj?: any): ReinCostBuyReq;
		id?: number;
		num?: number;
		use?: boolean;
		
	}

	export interface ReinCostBuyReqBuilder {
		new(): ReinCostBuyReq;
		decode(buffer: ArrayBuffer) : ReinCostBuyReq;
		//decode(buffer: NodeBuffer) : ReinCostBuyReq;
		//decode(buffer: ByteArrayBuffer) : ReinCostBuyReq;
		decode64(buffer: string) : ReinCostBuyReq;
		
	}
}


declare module pb {

	var ReinCostBuyAck: ReinCostBuyAck;
	export interface ReinCostBuyAck extends ProtoBufModel {
		new(obj?: any): ReinCostBuyAck;
		rein?: Rein;
		reinCost?: ReinCost;
		
	}

	export interface ReinCostBuyAckBuilder {
		new(): ReinCostBuyAck;
		decode(buffer: ArrayBuffer) : ReinCostBuyAck;
		//decode(buffer: NodeBuffer) : ReinCostBuyAck;
		//decode(buffer: ByteArrayBuffer) : ReinCostBuyAck;
		decode64(buffer: string) : ReinCostBuyAck;
		
	}
}


declare module pb {

	var ReinCostUseReq: ReinCostUseReq;
	export interface ReinCostUseReq extends ProtoBufModel {
		new(obj?: any): ReinCostUseReq;
		id?: number;
		
	}

	export interface ReinCostUseReqBuilder {
		new(): ReinCostUseReq;
		decode(buffer: ArrayBuffer) : ReinCostUseReq;
		//decode(buffer: NodeBuffer) : ReinCostUseReq;
		//decode(buffer: ByteArrayBuffer) : ReinCostUseReq;
		decode64(buffer: string) : ReinCostUseReq;
		
	}
}


declare module pb {

	var ReinCostUseAck: ReinCostUseAck;
	export interface ReinCostUseAck extends ProtoBufModel {
		new(obj?: any): ReinCostUseAck;
		rein?: Rein;
		reinCost?: ReinCost;
		
	}

	export interface ReinCostUseAckBuilder {
		new(): ReinCostUseAck;
		decode(buffer: ArrayBuffer) : ReinCostUseAck;
		//decode(buffer: NodeBuffer) : ReinCostUseAck;
		//decode(buffer: ByteArrayBuffer) : ReinCostUseAck;
		decode64(buffer: string) : ReinCostUseAck;
		
	}
}


declare module pb {

	var ReinCostBuyNumRefNtf: ReinCostBuyNumRefNtf;
	export interface ReinCostBuyNumRefNtf extends ProtoBufModel {
		new(obj?: any): ReinCostBuyNumRefNtf;
		reinCost: ReinCost[];
		
	}

	export interface ReinCostBuyNumRefNtfBuilder {
		new(): ReinCostBuyNumRefNtf;
		decode(buffer: ArrayBuffer) : ReinCostBuyNumRefNtf;
		//decode(buffer: NodeBuffer) : ReinCostBuyNumRefNtf;
		//decode(buffer: ByteArrayBuffer) : ReinCostBuyNumRefNtf;
		decode64(buffer: string) : ReinCostBuyNumRefNtf;
		
	}
}


declare module pb {

	var RingWearReq: RingWearReq;
	export interface RingWearReq extends ProtoBufModel {
		new(obj?: any): RingWearReq;
		heroIndex?: number;
		ringPos?: number;
		bagPos?: number;
		
	}

	export interface RingWearReqBuilder {
		new(): RingWearReq;
		decode(buffer: ArrayBuffer) : RingWearReq;
		//decode(buffer: NodeBuffer) : RingWearReq;
		//decode(buffer: ByteArrayBuffer) : RingWearReq;
		decode64(buffer: string) : RingWearReq;
		
	}
}


declare module pb {

	var RingWearAck: RingWearAck;
	export interface RingWearAck extends ProtoBufModel {
		new(obj?: any): RingWearAck;
		heroIndex?: number;
		ringPos?: number;
		ring?: Ring;
		
	}

	export interface RingWearAckBuilder {
		new(): RingWearAck;
		decode(buffer: ArrayBuffer) : RingWearAck;
		//decode(buffer: NodeBuffer) : RingWearAck;
		//decode(buffer: ByteArrayBuffer) : RingWearAck;
		decode64(buffer: string) : RingWearAck;
		
	}
}


declare module pb {

	var RingRemoveReq: RingRemoveReq;
	export interface RingRemoveReq extends ProtoBufModel {
		new(obj?: any): RingRemoveReq;
		heroIndex?: number;
		ringPos?: number;
		
	}

	export interface RingRemoveReqBuilder {
		new(): RingRemoveReq;
		decode(buffer: ArrayBuffer) : RingRemoveReq;
		//decode(buffer: NodeBuffer) : RingRemoveReq;
		//decode(buffer: ByteArrayBuffer) : RingRemoveReq;
		decode64(buffer: string) : RingRemoveReq;
		
	}
}


declare module pb {

	var RingRemoveAck: RingRemoveAck;
	export interface RingRemoveAck extends ProtoBufModel {
		new(obj?: any): RingRemoveAck;
		heroIndex?: number;
		ringPos?: number;
		ring?: Ring;
		
	}

	export interface RingRemoveAckBuilder {
		new(): RingRemoveAck;
		decode(buffer: ArrayBuffer) : RingRemoveAck;
		//decode(buffer: NodeBuffer) : RingRemoveAck;
		//decode(buffer: ByteArrayBuffer) : RingRemoveAck;
		decode64(buffer: string) : RingRemoveAck;
		
	}
}


declare module pb {

	var RingStrengthenReq: RingStrengthenReq;
	export interface RingStrengthenReq extends ProtoBufModel {
		new(obj?: any): RingStrengthenReq;
		heroIndex?: number;
		ringPos?: number;
		
	}

	export interface RingStrengthenReqBuilder {
		new(): RingStrengthenReq;
		decode(buffer: ArrayBuffer) : RingStrengthenReq;
		//decode(buffer: NodeBuffer) : RingStrengthenReq;
		//decode(buffer: ByteArrayBuffer) : RingStrengthenReq;
		decode64(buffer: string) : RingStrengthenReq;
		
	}
}


declare module pb {

	var RingStrengthenAck: RingStrengthenAck;
	export interface RingStrengthenAck extends ProtoBufModel {
		new(obj?: any): RingStrengthenAck;
		heroIndex?: number;
		ringPos?: number;
		ring?: Ring;
		
	}

	export interface RingStrengthenAckBuilder {
		new(): RingStrengthenAck;
		decode(buffer: ArrayBuffer) : RingStrengthenAck;
		//decode(buffer: NodeBuffer) : RingStrengthenAck;
		//decode(buffer: ByteArrayBuffer) : RingStrengthenAck;
		decode64(buffer: string) : RingStrengthenAck;
		
	}
}


declare module pb {

	var RingPhantomReq: RingPhantomReq;
	export interface RingPhantomReq extends ProtoBufModel {
		new(obj?: any): RingPhantomReq;
		heroIndex?: number;
		ringPos?: number;
		
	}

	export interface RingPhantomReqBuilder {
		new(): RingPhantomReq;
		decode(buffer: ArrayBuffer) : RingPhantomReq;
		//decode(buffer: NodeBuffer) : RingPhantomReq;
		//decode(buffer: ByteArrayBuffer) : RingPhantomReq;
		decode64(buffer: string) : RingPhantomReq;
		
	}
}


declare module pb {

	var RingPhantomAck: RingPhantomAck;
	export interface RingPhantomAck extends ProtoBufModel {
		new(obj?: any): RingPhantomAck;
		heroIndex?: number;
		ringPos?: number;
		ring?: Ring;
		
	}

	export interface RingPhantomAckBuilder {
		new(): RingPhantomAck;
		decode(buffer: ArrayBuffer) : RingPhantomAck;
		//decode(buffer: NodeBuffer) : RingPhantomAck;
		//decode(buffer: ByteArrayBuffer) : RingPhantomAck;
		decode64(buffer: string) : RingPhantomAck;
		
	}
}


declare module pb {

	var RingSkillUpReq: RingSkillUpReq;
	export interface RingSkillUpReq extends ProtoBufModel {
		new(obj?: any): RingSkillUpReq;
		heroIndex?: number;
		ringPos?: number;
		phantomPos?: number;
		skillId?: number;
		
	}

	export interface RingSkillUpReqBuilder {
		new(): RingSkillUpReq;
		decode(buffer: ArrayBuffer) : RingSkillUpReq;
		//decode(buffer: NodeBuffer) : RingSkillUpReq;
		//decode(buffer: ByteArrayBuffer) : RingSkillUpReq;
		decode64(buffer: string) : RingSkillUpReq;
		
	}
}


declare module pb {

	var RingSkillUpAck: RingSkillUpAck;
	export interface RingSkillUpAck extends ProtoBufModel {
		new(obj?: any): RingSkillUpAck;
		heroIndex?: number;
		ringPos?: number;
		ring?: Ring;
		
	}

	export interface RingSkillUpAckBuilder {
		new(): RingSkillUpAck;
		decode(buffer: ArrayBuffer) : RingSkillUpAck;
		//decode(buffer: NodeBuffer) : RingSkillUpAck;
		//decode(buffer: ByteArrayBuffer) : RingSkillUpAck;
		decode64(buffer: string) : RingSkillUpAck;
		
	}
}


declare module pb {

	var RingFuseReq: RingFuseReq;
	export interface RingFuseReq extends ProtoBufModel {
		new(obj?: any): RingFuseReq;
		id?: number;
		bagPos1?: number;
		bagPos2?: number;
		
	}

	export interface RingFuseReqBuilder {
		new(): RingFuseReq;
		decode(buffer: ArrayBuffer) : RingFuseReq;
		//decode(buffer: NodeBuffer) : RingFuseReq;
		//decode(buffer: ByteArrayBuffer) : RingFuseReq;
		decode64(buffer: string) : RingFuseReq;
		
	}
}


declare module pb {

	var RingFuseAck: RingFuseAck;
	export interface RingFuseAck extends ProtoBufModel {
		new(obj?: any): RingFuseAck;
		id?: number;
		
	}

	export interface RingFuseAckBuilder {
		new(): RingFuseAck;
		decode(buffer: ArrayBuffer) : RingFuseAck;
		//decode(buffer: NodeBuffer) : RingFuseAck;
		//decode(buffer: ByteArrayBuffer) : RingFuseAck;
		decode64(buffer: string) : RingFuseAck;
		
	}
}


declare module pb {

	var RingSkillResetReq: RingSkillResetReq;
	export interface RingSkillResetReq extends ProtoBufModel {
		new(obj?: any): RingSkillResetReq;
		heroIndex?: number;
		ringPos?: number;
		phantomPos?: number;
		
	}

	export interface RingSkillResetReqBuilder {
		new(): RingSkillResetReq;
		decode(buffer: ArrayBuffer) : RingSkillResetReq;
		//decode(buffer: NodeBuffer) : RingSkillResetReq;
		//decode(buffer: ByteArrayBuffer) : RingSkillResetReq;
		decode64(buffer: string) : RingSkillResetReq;
		
	}
}


declare module pb {

	var RingSkillResetAck: RingSkillResetAck;
	export interface RingSkillResetAck extends ProtoBufModel {
		new(obj?: any): RingSkillResetAck;
		heroIndex?: number;
		ringPos?: number;
		ring?: Ring;
		
	}

	export interface RingSkillResetAckBuilder {
		new(): RingSkillResetAck;
		decode(buffer: ArrayBuffer) : RingSkillResetAck;
		//decode(buffer: NodeBuffer) : RingSkillResetAck;
		//decode(buffer: ByteArrayBuffer) : RingSkillResetAck;
		decode64(buffer: string) : RingSkillResetAck;
		
	}
}


declare module pb {

	var Point: Point;
	export interface Point extends ProtoBufModel {
		new(obj?: any): Point;
		x?: number;
		y?: number;
		
	}

	export interface PointBuilder {
		new(): Point;
		decode(buffer: ArrayBuffer) : Point;
		//decode(buffer: NodeBuffer) : Point;
		//decode(buffer: ByteArrayBuffer) : Point;
		decode64(buffer: string) : Point;
		
	}
}


declare module pb {

	var SceneObj: SceneObj;
	export interface SceneObj extends ProtoBufModel {
		new(obj?: any): SceneObj;
		objType?: number;
		point?: Point;
		dir?: number;
		objId?: number;
		teamId?: number;
		hp?: number;
		hpMax?: number;
		buffs: BuffInfo[];
		mp?: number;
		mpMax?: number;
		serverId?: number;
		user?: SceneUser;
		monster?: SceneMonster;
		item?: SceneItem;
		pet?: ScenePet;
		collection?: SceneCollection;
		fit?: SceneFit;
		summon?: SceneSummon;
		buff?: SceneBuff;
		
	}

	export interface SceneObjBuilder {
		new(): SceneObj;
		decode(buffer: ArrayBuffer) : SceneObj;
		//decode(buffer: NodeBuffer) : SceneObj;
		//decode(buffer: ByteArrayBuffer) : SceneObj;
		decode64(buffer: string) : SceneObj;
		
	}
}


declare module pb {

	var SceneUser: SceneUser;
	export interface SceneUser extends ProtoBufModel {
		new(obj?: any): SceneUser;
		userId?: number;
		name?: string;
		display?: Display;
		vip?: number;
		lvl?: number;
		sex?: number;
		combat?: number;
		avatar?: string;
		job?: number;
		heroIndex?: number;
		guildId?: number;
		guildName?: string;
		elfLv?: number;
		username?: string;
		usersex?: number;
		userjob?: number;
		userHpTotal?: number;
		toHelpUserId?: number;
		
	}

	export interface SceneUserBuilder {
		new(): SceneUser;
		decode(buffer: ArrayBuffer) : SceneUser;
		//decode(buffer: NodeBuffer) : SceneUser;
		//decode(buffer: ByteArrayBuffer) : SceneUser;
		decode64(buffer: string) : SceneUser;
		
	}
}


declare module pb {

	var SceneMonster: SceneMonster;
	export interface SceneMonster extends ProtoBufModel {
		new(obj?: any): SceneMonster;
		idx?: number;
		ownerUseId?: number;
		ownerUserName?: string;
		
	}

	export interface SceneMonsterBuilder {
		new(): SceneMonster;
		decode(buffer: ArrayBuffer) : SceneMonster;
		//decode(buffer: NodeBuffer) : SceneMonster;
		//decode(buffer: ByteArrayBuffer) : SceneMonster;
		decode64(buffer: string) : SceneMonster;
		
	}
}


declare module pb {

	var ScenePet: ScenePet;
	export interface ScenePet extends ProtoBufModel {
		new(obj?: any): ScenePet;
		userId?: number;
		idx?: number;
		
	}

	export interface ScenePetBuilder {
		new(): ScenePet;
		decode(buffer: ArrayBuffer) : ScenePet;
		//decode(buffer: NodeBuffer) : ScenePet;
		//decode(buffer: ByteArrayBuffer) : ScenePet;
		decode64(buffer: string) : ScenePet;
		
	}
}


declare module pb {

	var SceneCollection: SceneCollection;
	export interface SceneCollection extends ProtoBufModel {
		new(obj?: any): SceneCollection;
		id?: number;
		collectionObjId?: number;
		serverTime?: number;
		endTime?: number;
		
	}

	export interface SceneCollectionBuilder {
		new(): SceneCollection;
		decode(buffer: ArrayBuffer) : SceneCollection;
		//decode(buffer: NodeBuffer) : SceneCollection;
		//decode(buffer: ByteArrayBuffer) : SceneCollection;
		decode64(buffer: string) : SceneCollection;
		
	}
}


declare module pb {

	var SceneFit: SceneFit;
	export interface SceneFit extends ProtoBufModel {
		new(obj?: any): SceneFit;
		userId?: number;
		fitId?: number;
		fashionId?: number;
		fashionLv?: number;
		name?: string;
		fitLv?: number;
		guildId?: number;
		guildName?: string;
		leaderJob?: number;
		leaderSex?: number;
		
	}

	export interface SceneFitBuilder {
		new(): SceneFit;
		decode(buffer: ArrayBuffer) : SceneFit;
		//decode(buffer: NodeBuffer) : SceneFit;
		//decode(buffer: ByteArrayBuffer) : SceneFit;
		decode64(buffer: string) : SceneFit;
		
	}
}


declare module pb {

	var SceneSummon: SceneSummon;
	export interface SceneSummon extends ProtoBufModel {
		new(obj?: any): SceneSummon;
		userId?: number;
		summonId?: number;
		objId?: number;
		
	}

	export interface SceneSummonBuilder {
		new(): SceneSummon;
		decode(buffer: ArrayBuffer) : SceneSummon;
		//decode(buffer: NodeBuffer) : SceneSummon;
		//decode(buffer: ByteArrayBuffer) : SceneSummon;
		decode64(buffer: string) : SceneSummon;
		
	}
}


declare module pb {

	var SceneItem: SceneItem;
	export interface SceneItem extends ProtoBufModel {
		new(obj?: any): SceneItem;
		itemId?: number;
		itemNum?: number;
		owner?: number;
		ownerProtectedTime?: number;
		disappearTime?: number;
		
	}

	export interface SceneItemBuilder {
		new(): SceneItem;
		decode(buffer: ArrayBuffer) : SceneItem;
		//decode(buffer: NodeBuffer) : SceneItem;
		//decode(buffer: ByteArrayBuffer) : SceneItem;
		decode64(buffer: string) : SceneItem;
		
	}
}


declare module pb {

	var SceneBuff: SceneBuff;
	export interface SceneBuff extends ProtoBufModel {
		new(obj?: any): SceneBuff;
		buffId?: number;
		userId?: number;
		
	}

	export interface SceneBuffBuilder {
		new(): SceneBuff;
		decode(buffer: ArrayBuffer) : SceneBuff;
		//decode(buffer: NodeBuffer) : SceneBuff;
		//decode(buffer: ByteArrayBuffer) : SceneBuff;
		decode64(buffer: string) : SceneBuff;
		
	}
}


declare module pb {

	var SceneEnterNtf: SceneEnterNtf;
	export interface SceneEnterNtf extends ProtoBufModel {
		new(obj?: any): SceneEnterNtf;
		stageId?: number;
		objs: SceneObj[];
		enterType?: number;
		isTower?: boolean;
		
	}

	export interface SceneEnterNtfBuilder {
		new(): SceneEnterNtf;
		decode(buffer: ArrayBuffer) : SceneEnterNtf;
		//decode(buffer: NodeBuffer) : SceneEnterNtf;
		//decode(buffer: ByteArrayBuffer) : SceneEnterNtf;
		decode64(buffer: string) : SceneEnterNtf;
		
	}
}


declare module pb {

	var SceneEnterOverNtf: SceneEnterOverNtf;
	export interface SceneEnterOverNtf extends ProtoBufModel {
		new(obj?: any): SceneEnterOverNtf;
		
	}

	export interface SceneEnterOverNtfBuilder {
		new(): SceneEnterOverNtf;
		decode(buffer: ArrayBuffer) : SceneEnterOverNtf;
		//decode(buffer: NodeBuffer) : SceneEnterOverNtf;
		//decode(buffer: ByteArrayBuffer) : SceneEnterOverNtf;
		decode64(buffer: string) : SceneEnterOverNtf;
		
	}
}


declare module pb {

	var SceneLeaveNtf: SceneLeaveNtf;
	export interface SceneLeaveNtf extends ProtoBufModel {
		new(obj?: any): SceneLeaveNtf;
		objIds: number[];
		leaveType?: number;
		isTower?: boolean;
		
	}

	export interface SceneLeaveNtfBuilder {
		new(): SceneLeaveNtf;
		decode(buffer: ArrayBuffer) : SceneLeaveNtf;
		//decode(buffer: NodeBuffer) : SceneLeaveNtf;
		//decode(buffer: ByteArrayBuffer) : SceneLeaveNtf;
		decode64(buffer: string) : SceneLeaveNtf;
		
	}
}


declare module pb {

	var SceneDieNtf: SceneDieNtf;
	export interface SceneDieNtf extends ProtoBufModel {
		new(obj?: any): SceneDieNtf;
		objId?: number;
		dropItems: SceneObj[];
		
	}

	export interface SceneDieNtfBuilder {
		new(): SceneDieNtf;
		decode(buffer: ArrayBuffer) : SceneDieNtf;
		//decode(buffer: NodeBuffer) : SceneDieNtf;
		//decode(buffer: ByteArrayBuffer) : SceneDieNtf;
		decode64(buffer: string) : SceneDieNtf;
		
	}
}


declare module pb {

	var SceneMoveRpt: SceneMoveRpt;
	export interface SceneMoveRpt extends ProtoBufModel {
		new(obj?: any): SceneMoveRpt;
		objId?: number;
		point?: Point;
		moveType?: number;
		
	}

	export interface SceneMoveRptBuilder {
		new(): SceneMoveRpt;
		decode(buffer: ArrayBuffer) : SceneMoveRpt;
		//decode(buffer: NodeBuffer) : SceneMoveRpt;
		//decode(buffer: ByteArrayBuffer) : SceneMoveRpt;
		decode64(buffer: string) : SceneMoveRpt;
		
	}
}


declare module pb {

	var SceneMoveNtf: SceneMoveNtf;
	export interface SceneMoveNtf extends ProtoBufModel {
		new(obj?: any): SceneMoveNtf;
		objId?: number;
		point?: Point;
		force?: boolean;
		moveType?: number;
		
	}

	export interface SceneMoveNtfBuilder {
		new(): SceneMoveNtf;
		decode(buffer: ArrayBuffer) : SceneMoveNtf;
		//decode(buffer: NodeBuffer) : SceneMoveNtf;
		//decode(buffer: ByteArrayBuffer) : SceneMoveNtf;
		decode64(buffer: string) : SceneMoveNtf;
		
	}
}


declare module pb {

	var SceneUserReliveNtf: SceneUserReliveNtf;
	export interface SceneUserReliveNtf extends ProtoBufModel {
		new(obj?: any): SceneUserReliveNtf;
		obj?: SceneObj;
		reliveType?: number;
		
	}

	export interface SceneUserReliveNtfBuilder {
		new(): SceneUserReliveNtf;
		decode(buffer: ArrayBuffer) : SceneUserReliveNtf;
		//decode(buffer: NodeBuffer) : SceneUserReliveNtf;
		//decode(buffer: ByteArrayBuffer) : SceneUserReliveNtf;
		decode64(buffer: string) : SceneUserReliveNtf;
		
	}
}


declare module pb {

	var SceneUserUpdateNtf: SceneUserUpdateNtf;
	export interface SceneUserUpdateNtf extends ProtoBufModel {
		new(obj?: any): SceneUserUpdateNtf;
		objId?: number;
		objUser?: SceneUser;
		
	}

	export interface SceneUserUpdateNtfBuilder {
		new(): SceneUserUpdateNtf;
		decode(buffer: ArrayBuffer) : SceneUserUpdateNtf;
		//decode(buffer: NodeBuffer) : SceneUserUpdateNtf;
		//decode(buffer: ByteArrayBuffer) : SceneUserUpdateNtf;
		decode64(buffer: string) : SceneUserUpdateNtf;
		
	}
}


declare module pb {

	var SceneUserElfUpdateNtf: SceneUserElfUpdateNtf;
	export interface SceneUserElfUpdateNtf extends ProtoBufModel {
		new(obj?: any): SceneUserElfUpdateNtf;
		userId?: number;
		elfLv?: number;
		
	}

	export interface SceneUserElfUpdateNtfBuilder {
		new(): SceneUserElfUpdateNtf;
		decode(buffer: ArrayBuffer) : SceneUserElfUpdateNtf;
		//decode(buffer: NodeBuffer) : SceneUserElfUpdateNtf;
		//decode(buffer: ByteArrayBuffer) : SceneUserElfUpdateNtf;
		decode64(buffer: string) : SceneUserElfUpdateNtf;
		
	}
}


declare module pb {

	var AttackRpt: AttackRpt;
	export interface AttackRpt extends ProtoBufModel {
		new(obj?: any): AttackRpt;
		skillId?: number;
		objIds: number[];
		dir?: number;
		point?: Point;
		skillLevel?: number;
		objId?: number;
		isElf?: boolean;
		
	}

	export interface AttackRptBuilder {
		new(): AttackRpt;
		decode(buffer: ArrayBuffer) : AttackRpt;
		//decode(buffer: NodeBuffer) : AttackRpt;
		//decode(buffer: ByteArrayBuffer) : AttackRpt;
		decode64(buffer: string) : AttackRpt;
		
	}
}


declare module pb {

	var AttackEffectNtf: AttackEffectNtf;
	export interface AttackEffectNtf extends ProtoBufModel {
		new(obj?: any): AttackEffectNtf;
		skillId?: number;
		attackerId?: number;
		dir?: number;
		point?: Point;
		hurts: HurtEffect[];
		MoveToPoint?: Point;
		skillLv?: number;
		err?: number;
		skillStartT?: number;
		skillStopT?: number;
		serverTime?: number;
		mpNow?: number;
		isElf?: boolean;
		attackerName?: string;
		hpNow?: number;
		
	}

	export interface AttackEffectNtfBuilder {
		new(): AttackEffectNtf;
		decode(buffer: ArrayBuffer) : AttackEffectNtf;
		//decode(buffer: NodeBuffer) : AttackEffectNtf;
		//decode(buffer: ByteArrayBuffer) : AttackEffectNtf;
		decode64(buffer: string) : AttackEffectNtf;
		
	}
}


declare module pb {

	var HurtEffect: HurtEffect;
	export interface HurtEffect extends ProtoBufModel {
		new(obj?: any): HurtEffect;
		objId?: number;
		hp?: number;
		changHp?: number;
		isDeath?: boolean;
		isDodge?: boolean;
		hurtType?: number;
		hurt?: number;
		deathblow?: number;
		cutHurt?: number;
		MoveToPoint?: Point;
		unBlock?: number;
		reflex?: number;
		reliveSelf?: boolean;
		isWuDi?: boolean;
		killHurt?: number;
		
	}

	export interface HurtEffectBuilder {
		new(): HurtEffect;
		decode(buffer: ArrayBuffer) : HurtEffect;
		//decode(buffer: NodeBuffer) : HurtEffect;
		//decode(buffer: ByteArrayBuffer) : HurtEffect;
		decode64(buffer: string) : HurtEffect;
		
	}
}


declare module pb {

	var SceneObjHpNtf: SceneObjHpNtf;
	export interface SceneObjHpNtf extends ProtoBufModel {
		new(obj?: any): SceneObjHpNtf;
		objId?: number;
		hp?: number;
		changeHp?: number;
		totalHp?: number;
		killerId?: number;
		killerName?: string;
		userId?: number;
		userHpTotal?: number;
		
	}

	export interface SceneObjHpNtfBuilder {
		new(): SceneObjHpNtf;
		decode(buffer: ArrayBuffer) : SceneObjHpNtf;
		//decode(buffer: NodeBuffer) : SceneObjHpNtf;
		//decode(buffer: ByteArrayBuffer) : SceneObjHpNtf;
		decode64(buffer: string) : SceneObjHpNtf;
		
	}
}


declare module pb {

	var SceneObjMpNtf: SceneObjMpNtf;
	export interface SceneObjMpNtf extends ProtoBufModel {
		new(obj?: any): SceneObjMpNtf;
		objId?: number;
		Mp?: number;
		changeMp?: number;
		totalMp?: number;
		
	}

	export interface SceneObjMpNtfBuilder {
		new(): SceneObjMpNtf;
		decode(buffer: ArrayBuffer) : SceneObjMpNtf;
		//decode(buffer: NodeBuffer) : SceneObjMpNtf;
		//decode(buffer: ByteArrayBuffer) : SceneObjMpNtf;
		decode64(buffer: string) : SceneObjMpNtf;
		
	}
}


declare module pb {

	var FightHurtRankReq: FightHurtRankReq;
	export interface FightHurtRankReq extends ProtoBufModel {
		new(obj?: any): FightHurtRankReq;
		
	}

	export interface FightHurtRankReqBuilder {
		new(): FightHurtRankReq;
		decode(buffer: ArrayBuffer) : FightHurtRankReq;
		//decode(buffer: NodeBuffer) : FightHurtRankReq;
		//decode(buffer: ByteArrayBuffer) : FightHurtRankReq;
		decode64(buffer: string) : FightHurtRankReq;
		
	}
}


declare module pb {

	var FightHurtRankAck: FightHurtRankAck;
	export interface FightHurtRankAck extends ProtoBufModel {
		new(obj?: any): FightHurtRankAck;
		ranks: FightRankUnit[];
		myRank?: FightRankUnit;
		
	}

	export interface FightHurtRankAckBuilder {
		new(): FightHurtRankAck;
		decode(buffer: ArrayBuffer) : FightHurtRankAck;
		//decode(buffer: NodeBuffer) : FightHurtRankAck;
		//decode(buffer: ByteArrayBuffer) : FightHurtRankAck;
		decode64(buffer: string) : FightHurtRankAck;
		
	}
}


declare module pb {

	var FightRankUnit: FightRankUnit;
	export interface FightRankUnit extends ProtoBufModel {
		new(obj?: any): FightRankUnit;
		rank?: number;
		name?: string;
		score?: number;
		serverName?: string;
		userId?: number;
		
	}

	export interface FightRankUnitBuilder {
		new(): FightRankUnit;
		decode(buffer: ArrayBuffer) : FightRankUnit;
		//decode(buffer: NodeBuffer) : FightRankUnit;
		//decode(buffer: ByteArrayBuffer) : FightRankUnit;
		decode64(buffer: string) : FightRankUnit;
		
	}
}


declare module pb {

	var GetBossOwnerChangReq: GetBossOwnerChangReq;
	export interface GetBossOwnerChangReq extends ProtoBufModel {
		new(obj?: any): GetBossOwnerChangReq;
		
	}

	export interface GetBossOwnerChangReqBuilder {
		new(): GetBossOwnerChangReq;
		decode(buffer: ArrayBuffer) : GetBossOwnerChangReq;
		//decode(buffer: NodeBuffer) : GetBossOwnerChangReq;
		//decode(buffer: ByteArrayBuffer) : GetBossOwnerChangReq;
		decode64(buffer: string) : GetBossOwnerChangReq;
		
	}
}


declare module pb {

	var BossOwnerChangNtf: BossOwnerChangNtf;
	export interface BossOwnerChangNtf extends ProtoBufModel {
		new(obj?: any): BossOwnerChangNtf;
		objId?: number;
		ownerObjId?: number;
		userId?: number;
		userName?: string;
		
	}

	export interface BossOwnerChangNtfBuilder {
		new(): BossOwnerChangNtf;
		decode(buffer: ArrayBuffer) : BossOwnerChangNtf;
		//decode(buffer: NodeBuffer) : BossOwnerChangNtf;
		//decode(buffer: ByteArrayBuffer) : BossOwnerChangNtf;
		decode64(buffer: string) : BossOwnerChangNtf;
		
	}
}


declare module pb {

	var BuffChangeNtf: BuffChangeNtf;
	export interface BuffChangeNtf extends ProtoBufModel {
		new(obj?: any): BuffChangeNtf;
		buff?: BuffInfo;
		delBuffInfos: DelBuffInfo[];
		
	}

	export interface BuffChangeNtfBuilder {
		new(): BuffChangeNtf;
		decode(buffer: ArrayBuffer) : BuffChangeNtf;
		//decode(buffer: NodeBuffer) : BuffChangeNtf;
		//decode(buffer: ByteArrayBuffer) : BuffChangeNtf;
		decode64(buffer: string) : BuffChangeNtf;
		
	}
}


declare module pb {

	var BuffDelNtf: BuffDelNtf;
	export interface BuffDelNtf extends ProtoBufModel {
		new(obj?: any): BuffDelNtf;
		delBuffInfos: DelBuffInfo[];
		
	}

	export interface BuffDelNtfBuilder {
		new(): BuffDelNtf;
		decode(buffer: ArrayBuffer) : BuffDelNtf;
		//decode(buffer: NodeBuffer) : BuffDelNtf;
		//decode(buffer: ByteArrayBuffer) : BuffDelNtf;
		decode64(buffer: string) : BuffDelNtf;
		
	}
}


declare module pb {

	var BuffInfo: BuffInfo;
	export interface BuffInfo extends ProtoBufModel {
		new(obj?: any): BuffInfo;
		ownerObjId?: number;
		sourceObjId?: number;
		idx?: number;
		buffId?: number;
		totalTime?: number;
		ownerUserId?: number;
		sourceUserId?: number;
		
	}

	export interface BuffInfoBuilder {
		new(): BuffInfo;
		decode(buffer: ArrayBuffer) : BuffInfo;
		//decode(buffer: NodeBuffer) : BuffInfo;
		//decode(buffer: ByteArrayBuffer) : BuffInfo;
		decode64(buffer: string) : BuffInfo;
		
	}
}


declare module pb {

	var DelBuffInfo: DelBuffInfo;
	export interface DelBuffInfo extends ProtoBufModel {
		new(obj?: any): DelBuffInfo;
		ownerObjId?: number;
		idx?: number;
		
	}

	export interface DelBuffInfoBuilder {
		new(): DelBuffInfo;
		decode(buffer: ArrayBuffer) : DelBuffInfo;
		//decode(buffer: NodeBuffer) : DelBuffInfo;
		//decode(buffer: ByteArrayBuffer) : DelBuffInfo;
		decode64(buffer: string) : DelBuffInfo;
		
	}
}


declare module pb {

	var BuffPropChangeNtf: BuffPropChangeNtf;
	export interface BuffPropChangeNtf extends ProtoBufModel {
		new(obj?: any): BuffPropChangeNtf;
		objId?: number;
		propId?: number;
		total?: number;
		
	}

	export interface BuffPropChangeNtfBuilder {
		new(): BuffPropChangeNtf;
		decode(buffer: ArrayBuffer) : BuffPropChangeNtf;
		//decode(buffer: NodeBuffer) : BuffPropChangeNtf;
		//decode(buffer: ByteArrayBuffer) : BuffPropChangeNtf;
		decode64(buffer: string) : BuffPropChangeNtf;
		
	}
}


declare module pb {

	var BuffHpChangeNtf: BuffHpChangeNtf;
	export interface BuffHpChangeNtf extends ProtoBufModel {
		new(obj?: any): BuffHpChangeNtf;
		buffHpChangeInfos: BuffHpChangeInfo[];
		
	}

	export interface BuffHpChangeNtfBuilder {
		new(): BuffHpChangeNtf;
		decode(buffer: ArrayBuffer) : BuffHpChangeNtf;
		//decode(buffer: NodeBuffer) : BuffHpChangeNtf;
		//decode(buffer: ByteArrayBuffer) : BuffHpChangeNtf;
		decode64(buffer: string) : BuffHpChangeNtf;
		
	}
}


declare module pb {

	var BuffHpChangeInfo: BuffHpChangeInfo;
	export interface BuffHpChangeInfo extends ProtoBufModel {
		new(obj?: any): BuffHpChangeInfo;
		ownerObjId?: number;
		idx?: number;
		death?: number;
		changeHp?: number;
		totalHp?: number;
		killerId?: number;
		killerName?: string;
		
	}

	export interface BuffHpChangeInfoBuilder {
		new(): BuffHpChangeInfo;
		decode(buffer: ArrayBuffer) : BuffHpChangeInfo;
		//decode(buffer: NodeBuffer) : BuffHpChangeInfo;
		//decode(buffer: ByteArrayBuffer) : BuffHpChangeInfo;
		decode64(buffer: string) : BuffHpChangeInfo;
		
	}
}


declare module pb {

	var MainCityEnterRpt: MainCityEnterRpt;
	export interface MainCityEnterRpt extends ProtoBufModel {
		new(obj?: any): MainCityEnterRpt;
		obj?: SceneObj;
		
	}

	export interface MainCityEnterRptBuilder {
		new(): MainCityEnterRpt;
		decode(buffer: ArrayBuffer) : MainCityEnterRpt;
		//decode(buffer: NodeBuffer) : MainCityEnterRpt;
		//decode(buffer: ByteArrayBuffer) : MainCityEnterRpt;
		decode64(buffer: string) : MainCityEnterRpt;
		
	}
}


declare module pb {

	var MainCityMoveRpt: MainCityMoveRpt;
	export interface MainCityMoveRpt extends ProtoBufModel {
		new(obj?: any): MainCityMoveRpt;
		objId?: number;
		x?: number;
		y?: number;
		dir?: number;
		
	}

	export interface MainCityMoveRptBuilder {
		new(): MainCityMoveRpt;
		decode(buffer: ArrayBuffer) : MainCityMoveRpt;
		//decode(buffer: NodeBuffer) : MainCityMoveRpt;
		//decode(buffer: ByteArrayBuffer) : MainCityMoveRpt;
		decode64(buffer: string) : MainCityMoveRpt;
		
	}
}


declare module pb {

	var MainCityLeaveRpt: MainCityLeaveRpt;
	export interface MainCityLeaveRpt extends ProtoBufModel {
		new(obj?: any): MainCityLeaveRpt;
		objId?: number;
		
	}

	export interface MainCityLeaveRptBuilder {
		new(): MainCityLeaveRpt;
		decode(buffer: ArrayBuffer) : MainCityLeaveRpt;
		//decode(buffer: NodeBuffer) : MainCityLeaveRpt;
		//decode(buffer: ByteArrayBuffer) : MainCityLeaveRpt;
		decode64(buffer: string) : MainCityLeaveRpt;
		
	}
}


declare module pb {

	var MainCityUpdateRpt: MainCityUpdateRpt;
	export interface MainCityUpdateRpt extends ProtoBufModel {
		new(obj?: any): MainCityUpdateRpt;
		obj?: SceneObj;
		
	}

	export interface MainCityUpdateRptBuilder {
		new(): MainCityUpdateRpt;
		decode(buffer: ArrayBuffer) : MainCityUpdateRpt;
		//decode(buffer: NodeBuffer) : MainCityUpdateRpt;
		//decode(buffer: ByteArrayBuffer) : MainCityUpdateRpt;
		decode64(buffer: string) : MainCityUpdateRpt;
		
	}
}


declare module pb {

	var FightEnterOkReq: FightEnterOkReq;
	export interface FightEnterOkReq extends ProtoBufModel {
		new(obj?: any): FightEnterOkReq;
		
	}

	export interface FightEnterOkReqBuilder {
		new(): FightEnterOkReq;
		decode(buffer: ArrayBuffer) : FightEnterOkReq;
		//decode(buffer: NodeBuffer) : FightEnterOkReq;
		//decode(buffer: ByteArrayBuffer) : FightEnterOkReq;
		decode64(buffer: string) : FightEnterOkReq;
		
	}
}


declare module pb {

	var FightStartCountDownNtf: FightStartCountDownNtf;
	export interface FightStartCountDownNtf extends ProtoBufModel {
		new(obj?: any): FightStartCountDownNtf;
		serverTime?: number;
		countDownTime?: number;
		
	}

	export interface FightStartCountDownNtfBuilder {
		new(): FightStartCountDownNtf;
		decode(buffer: ArrayBuffer) : FightStartCountDownNtf;
		//decode(buffer: NodeBuffer) : FightStartCountDownNtf;
		//decode(buffer: ByteArrayBuffer) : FightStartCountDownNtf;
		decode64(buffer: string) : FightStartCountDownNtf;
		
	}
}


declare module pb {

	var FightStartCountDownOkReq: FightStartCountDownOkReq;
	export interface FightStartCountDownOkReq extends ProtoBufModel {
		new(obj?: any): FightStartCountDownOkReq;
		
	}

	export interface FightStartCountDownOkReqBuilder {
		new(): FightStartCountDownOkReq;
		decode(buffer: ArrayBuffer) : FightStartCountDownOkReq;
		//decode(buffer: NodeBuffer) : FightStartCountDownOkReq;
		//decode(buffer: ByteArrayBuffer) : FightStartCountDownOkReq;
		decode64(buffer: string) : FightStartCountDownOkReq;
		
	}
}


declare module pb {

	var FightStartNtf: FightStartNtf;
	export interface FightStartNtf extends ProtoBufModel {
		new(obj?: any): FightStartNtf;
		
	}

	export interface FightStartNtfBuilder {
		new(): FightStartNtf;
		decode(buffer: ArrayBuffer) : FightStartNtf;
		//decode(buffer: NodeBuffer) : FightStartNtf;
		//decode(buffer: ByteArrayBuffer) : FightStartNtf;
		decode64(buffer: string) : FightStartNtf;
		
	}
}


declare module pb {

	var CollectionStatusChangeNtf: CollectionStatusChangeNtf;
	export interface CollectionStatusChangeNtf extends ProtoBufModel {
		new(obj?: any): CollectionStatusChangeNtf;
		objId?: number;
		userObjId?: number;
		startTime?: number;
		endTime?: number;
		
	}

	export interface CollectionStatusChangeNtfBuilder {
		new(): CollectionStatusChangeNtf;
		decode(buffer: ArrayBuffer) : CollectionStatusChangeNtf;
		//decode(buffer: NodeBuffer) : CollectionStatusChangeNtf;
		//decode(buffer: ByteArrayBuffer) : CollectionStatusChangeNtf;
		decode64(buffer: string) : CollectionStatusChangeNtf;
		
	}
}


declare module pb {

	var FightTeamChangeNtf: FightTeamChangeNtf;
	export interface FightTeamChangeNtf extends ProtoBufModel {
		new(obj?: any): FightTeamChangeNtf;
		userTeamIndex: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface FightTeamChangeNtfBuilder {
		new(): FightTeamChangeNtf;
		decode(buffer: ArrayBuffer) : FightTeamChangeNtf;
		//decode(buffer: NodeBuffer) : FightTeamChangeNtf;
		//decode(buffer: ByteArrayBuffer) : FightTeamChangeNtf;
		decode64(buffer: string) : FightTeamChangeNtf;
		
	}
}


declare module pb {

	var FightUserChangeToHelperNtf: FightUserChangeToHelperNtf;
	export interface FightUserChangeToHelperNtf extends ProtoBufModel {
		new(obj?: any): FightUserChangeToHelperNtf;
		userId?: number;
		teamIndex?: number;
		
	}

	export interface FightUserChangeToHelperNtfBuilder {
		new(): FightUserChangeToHelperNtf;
		decode(buffer: ArrayBuffer) : FightUserChangeToHelperNtf;
		//decode(buffer: NodeBuffer) : FightUserChangeToHelperNtf;
		//decode(buffer: ByteArrayBuffer) : FightUserChangeToHelperNtf;
		decode64(buffer: string) : FightUserChangeToHelperNtf;
		
	}
}


declare module pb {

	var FightNpcEventReq: FightNpcEventReq;
	export interface FightNpcEventReq extends ProtoBufModel {
		new(obj?: any): FightNpcEventReq;
		npcId?: number;
		
	}

	export interface FightNpcEventReqBuilder {
		new(): FightNpcEventReq;
		decode(buffer: ArrayBuffer) : FightNpcEventReq;
		//decode(buffer: NodeBuffer) : FightNpcEventReq;
		//decode(buffer: ByteArrayBuffer) : FightNpcEventReq;
		decode64(buffer: string) : FightNpcEventReq;
		
	}
}


declare module pb {

	var ExpStageKillInfoNtf: ExpStageKillInfoNtf;
	export interface ExpStageKillInfoNtf extends ProtoBufModel {
		new(obj?: any): ExpStageKillInfoNtf;
		killMonsterNum?: number;
		getExp?: number;
		
	}

	export interface ExpStageKillInfoNtfBuilder {
		new(): ExpStageKillInfoNtf;
		decode(buffer: ArrayBuffer) : ExpStageKillInfoNtf;
		//decode(buffer: NodeBuffer) : ExpStageKillInfoNtf;
		//decode(buffer: ByteArrayBuffer) : ExpStageKillInfoNtf;
		decode64(buffer: string) : ExpStageKillInfoNtf;
		
	}
}


declare module pb {

	var PaodianTopUserReq: PaodianTopUserReq;
	export interface PaodianTopUserReq extends ProtoBufModel {
		new(obj?: any): PaodianTopUserReq;
		
	}

	export interface PaodianTopUserReqBuilder {
		new(): PaodianTopUserReq;
		decode(buffer: ArrayBuffer) : PaodianTopUserReq;
		//decode(buffer: NodeBuffer) : PaodianTopUserReq;
		//decode(buffer: ByteArrayBuffer) : PaodianTopUserReq;
		decode64(buffer: string) : PaodianTopUserReq;
		
	}
}


declare module pb {

	var PaodianTopUserNtf: PaodianTopUserNtf;
	export interface PaodianTopUserNtf extends ProtoBufModel {
		new(obj?: any): PaodianTopUserNtf;
		userIds: number[];
		
	}

	export interface PaodianTopUserNtfBuilder {
		new(): PaodianTopUserNtf;
		decode(buffer: ArrayBuffer) : PaodianTopUserNtf;
		//decode(buffer: NodeBuffer) : PaodianTopUserNtf;
		//decode(buffer: ByteArrayBuffer) : PaodianTopUserNtf;
		decode64(buffer: string) : PaodianTopUserNtf;
		
	}
}


declare module pb {

	var PaoDianUserNumNtf: PaoDianUserNumNtf;
	export interface PaoDianUserNumNtf extends ProtoBufModel {
		new(obj?: any): PaoDianUserNumNtf;
		userNums: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface PaoDianUserNumNtfBuilder {
		new(): PaoDianUserNumNtf;
		decode(buffer: ArrayBuffer) : PaoDianUserNumNtf;
		//decode(buffer: NodeBuffer) : PaoDianUserNumNtf;
		//decode(buffer: ByteArrayBuffer) : PaoDianUserNumNtf;
		decode64(buffer: string) : PaoDianUserNumNtf;
		
	}
}


declare module pb {

	var PaodianFightEnd: PaodianFightEnd;
	export interface PaodianFightEnd extends ProtoBufModel {
		new(obj?: any): PaodianFightEnd;
		stageId?: number;
		
	}

	export interface PaodianFightEndBuilder {
		new(): PaodianFightEnd;
		decode(buffer: ArrayBuffer) : PaodianFightEnd;
		//decode(buffer: NodeBuffer) : PaodianFightEnd;
		//decode(buffer: ByteArrayBuffer) : PaodianFightEnd;
		decode64(buffer: string) : PaodianFightEnd;
		
	}
}


declare module pb {

	var GetShabakeScoresReq: GetShabakeScoresReq;
	export interface GetShabakeScoresReq extends ProtoBufModel {
		new(obj?: any): GetShabakeScoresReq;
		
	}

	export interface GetShabakeScoresReqBuilder {
		new(): GetShabakeScoresReq;
		decode(buffer: ArrayBuffer) : GetShabakeScoresReq;
		//decode(buffer: NodeBuffer) : GetShabakeScoresReq;
		//decode(buffer: ByteArrayBuffer) : GetShabakeScoresReq;
		decode64(buffer: string) : GetShabakeScoresReq;
		
	}
}


declare module pb {

	var ShabakeScoreRankNtf: ShabakeScoreRankNtf;
	export interface ShabakeScoreRankNtf extends ProtoBufModel {
		new(obj?: any): ShabakeScoreRankNtf;
		userScores: ShabakeUserScore[];
		guildScores: ShabakeGuildScore[];
		
	}

	export interface ShabakeScoreRankNtfBuilder {
		new(): ShabakeScoreRankNtf;
		decode(buffer: ArrayBuffer) : ShabakeScoreRankNtf;
		//decode(buffer: NodeBuffer) : ShabakeScoreRankNtf;
		//decode(buffer: ByteArrayBuffer) : ShabakeScoreRankNtf;
		decode64(buffer: string) : ShabakeScoreRankNtf;
		
	}
}


declare module pb {

	var ShabakeUserScore: ShabakeUserScore;
	export interface ShabakeUserScore extends ProtoBufModel {
		new(obj?: any): ShabakeUserScore;
		userId?: number;
		userName?: string;
		score?: number;
		rank?: number;
		
	}

	export interface ShabakeUserScoreBuilder {
		new(): ShabakeUserScore;
		decode(buffer: ArrayBuffer) : ShabakeUserScore;
		//decode(buffer: NodeBuffer) : ShabakeUserScore;
		//decode(buffer: ByteArrayBuffer) : ShabakeUserScore;
		decode64(buffer: string) : ShabakeUserScore;
		
	}
}


declare module pb {

	var ShabakeGuildScore: ShabakeGuildScore;
	export interface ShabakeGuildScore extends ProtoBufModel {
		new(obj?: any): ShabakeGuildScore;
		guildId?: number;
		guildName?: string;
		score?: number;
		serverId?: number;
		serverName?: string;
		
	}

	export interface ShabakeGuildScoreBuilder {
		new(): ShabakeGuildScore;
		decode(buffer: ArrayBuffer) : ShabakeGuildScore;
		//decode(buffer: NodeBuffer) : ShabakeGuildScore;
		//decode(buffer: ByteArrayBuffer) : ShabakeGuildScore;
		decode64(buffer: string) : ShabakeGuildScore;
		
	}
}


declare module pb {

	var ShabakeOccupiedNtf: ShabakeOccupiedNtf;
	export interface ShabakeOccupiedNtf extends ProtoBufModel {
		new(obj?: any): ShabakeOccupiedNtf;
		isOccupy?: boolean;
		userId?: number;
		userName?: string;
		guildId?: number;
		guildName?: string;
		startTime?: number;
		endTime?: number;
		fightStatus?: number;
		
	}

	export interface ShabakeOccupiedNtfBuilder {
		new(): ShabakeOccupiedNtf;
		decode(buffer: ArrayBuffer) : ShabakeOccupiedNtf;
		//decode(buffer: NodeBuffer) : ShabakeOccupiedNtf;
		//decode(buffer: ByteArrayBuffer) : ShabakeOccupiedNtf;
		decode64(buffer: string) : ShabakeOccupiedNtf;
		
	}
}


declare module pb {

	var GetShabakeCrossScoresReq: GetShabakeCrossScoresReq;
	export interface GetShabakeCrossScoresReq extends ProtoBufModel {
		new(obj?: any): GetShabakeCrossScoresReq;
		
	}

	export interface GetShabakeCrossScoresReqBuilder {
		new(): GetShabakeCrossScoresReq;
		decode(buffer: ArrayBuffer) : GetShabakeCrossScoresReq;
		//decode(buffer: NodeBuffer) : GetShabakeCrossScoresReq;
		//decode(buffer: ByteArrayBuffer) : GetShabakeCrossScoresReq;
		decode64(buffer: string) : GetShabakeCrossScoresReq;
		
	}
}


declare module pb {

	var ShabakeCrossScoreRankNtf: ShabakeCrossScoreRankNtf;
	export interface ShabakeCrossScoreRankNtf extends ProtoBufModel {
		new(obj?: any): ShabakeCrossScoreRankNtf;
		serverScores: ShabakeCrossServerScore[];
		guildScores: ShabakeGuildScore[];
		
	}

	export interface ShabakeCrossScoreRankNtfBuilder {
		new(): ShabakeCrossScoreRankNtf;
		decode(buffer: ArrayBuffer) : ShabakeCrossScoreRankNtf;
		//decode(buffer: NodeBuffer) : ShabakeCrossScoreRankNtf;
		//decode(buffer: ByteArrayBuffer) : ShabakeCrossScoreRankNtf;
		decode64(buffer: string) : ShabakeCrossScoreRankNtf;
		
	}
}


declare module pb {

	var ShabakeCrossServerScore: ShabakeCrossServerScore;
	export interface ShabakeCrossServerScore extends ProtoBufModel {
		new(obj?: any): ShabakeCrossServerScore;
		serverId?: number;
		serverName?: string;
		score?: number;
		
	}

	export interface ShabakeCrossServerScoreBuilder {
		new(): ShabakeCrossServerScore;
		decode(buffer: ArrayBuffer) : ShabakeCrossServerScore;
		//decode(buffer: NodeBuffer) : ShabakeCrossServerScore;
		//decode(buffer: ByteArrayBuffer) : ShabakeCrossServerScore;
		decode64(buffer: string) : ShabakeCrossServerScore;
		
	}
}


declare module pb {

	var ShabakeCrossOccupiedNtf: ShabakeCrossOccupiedNtf;
	export interface ShabakeCrossOccupiedNtf extends ProtoBufModel {
		new(obj?: any): ShabakeCrossOccupiedNtf;
		isOccupy?: boolean;
		userId?: number;
		userName?: string;
		guildId?: number;
		guildName?: string;
		startTime?: number;
		endTime?: number;
		serverId?: number;
		serverName?: string;
		
	}

	export interface ShabakeCrossOccupiedNtfBuilder {
		new(): ShabakeCrossOccupiedNtf;
		decode(buffer: ArrayBuffer) : ShabakeCrossOccupiedNtf;
		//decode(buffer: NodeBuffer) : ShabakeCrossOccupiedNtf;
		//decode(buffer: ByteArrayBuffer) : ShabakeCrossOccupiedNtf;
		decode64(buffer: string) : ShabakeCrossOccupiedNtf;
		
	}
}


declare module pb {

	var GuardPillarFightNtf: GuardPillarFightNtf;
	export interface GuardPillarFightNtf extends ProtoBufModel {
		new(obj?: any): GuardPillarFightNtf;
		rank?: FightHurtRankAck;
		wave?: number;
		nextTime?: number;
		monsterTotal?: number;
		monsterless?: number;
		fightEndTime?: number;
		
	}

	export interface GuardPillarFightNtfBuilder {
		new(): GuardPillarFightNtf;
		decode(buffer: ArrayBuffer) : GuardPillarFightNtf;
		//decode(buffer: NodeBuffer) : GuardPillarFightNtf;
		//decode(buffer: ByteArrayBuffer) : GuardPillarFightNtf;
		decode64(buffer: string) : GuardPillarFightNtf;
		
	}
}


declare module pb {

	var MagicTowerBossInfo: MagicTowerBossInfo;
	export interface MagicTowerBossInfo extends ProtoBufModel {
		new(obj?: any): MagicTowerBossInfo;
		bossName?: string;
		layer?: number;
		status?: number;
		refreshTime?: number;
		monsterId?: number;
		ownerUseId?: number;
		ownerName?: string;
		monsterObjId?: number;
		
	}

	export interface MagicTowerBossInfoBuilder {
		new(): MagicTowerBossInfo;
		decode(buffer: ArrayBuffer) : MagicTowerBossInfo;
		//decode(buffer: NodeBuffer) : MagicTowerBossInfo;
		//decode(buffer: ByteArrayBuffer) : MagicTowerBossInfo;
		decode64(buffer: string) : MagicTowerBossInfo;
		
	}
}


declare module pb {

	var MagicTowerFightNtf: MagicTowerFightNtf;
	export interface MagicTowerFightNtf extends ProtoBufModel {
		new(obj?: any): MagicTowerFightNtf;
		userScores: ShabakeUserScore[];
		bossInfos: MagicTowerBossInfo[];
		
	}

	export interface MagicTowerFightNtfBuilder {
		new(): MagicTowerFightNtf;
		decode(buffer: ArrayBuffer) : MagicTowerFightNtf;
		//decode(buffer: NodeBuffer) : MagicTowerFightNtf;
		//decode(buffer: ByteArrayBuffer) : MagicTowerFightNtf;
		decode64(buffer: string) : MagicTowerFightNtf;
		
	}
}


declare module pb {

	var FightUserScoreNtf: FightUserScoreNtf;
	export interface FightUserScoreNtf extends ProtoBufModel {
		new(obj?: any): FightUserScoreNtf;
		score?: number;
		changeScore?: number;
		rankScore?: number;
		
	}

	export interface FightUserScoreNtfBuilder {
		new(): FightUserScoreNtf;
		decode(buffer: ArrayBuffer) : FightUserScoreNtf;
		//decode(buffer: NodeBuffer) : FightUserScoreNtf;
		//decode(buffer: ByteArrayBuffer) : FightUserScoreNtf;
		decode64(buffer: string) : FightUserScoreNtf;
		
	}
}


declare module pb {

	var GetFightBossInfosReq: GetFightBossInfosReq;
	export interface GetFightBossInfosReq extends ProtoBufModel {
		new(obj?: any): GetFightBossInfosReq;
		
	}

	export interface GetFightBossInfosReqBuilder {
		new(): GetFightBossInfosReq;
		decode(buffer: ArrayBuffer) : GetFightBossInfosReq;
		//decode(buffer: NodeBuffer) : GetFightBossInfosReq;
		//decode(buffer: ByteArrayBuffer) : GetFightBossInfosReq;
		decode64(buffer: string) : GetFightBossInfosReq;
		
	}
}


declare module pb {

	var GetFightBossInfosAck: GetFightBossInfosAck;
	export interface GetFightBossInfosAck extends ProtoBufModel {
		new(obj?: any): GetFightBossInfosAck;
		bossInfos: FightBossInfoUnit[];
		
	}

	export interface GetFightBossInfosAckBuilder {
		new(): GetFightBossInfosAck;
		decode(buffer: ArrayBuffer) : GetFightBossInfosAck;
		//decode(buffer: NodeBuffer) : GetFightBossInfosAck;
		//decode(buffer: ByteArrayBuffer) : GetFightBossInfosAck;
		decode64(buffer: string) : GetFightBossInfosAck;
		
	}
}


declare module pb {

	var FightBossInfoUnit: FightBossInfoUnit;
	export interface FightBossInfoUnit extends ProtoBufModel {
		new(obj?: any): FightBossInfoUnit;
		objId?: number;
		monsterId?: number;
		point?: Point;
		reliveCD?: number;
		hp?: number;
		
	}

	export interface FightBossInfoUnitBuilder {
		new(): FightBossInfoUnit;
		decode(buffer: ArrayBuffer) : FightBossInfoUnit;
		//decode(buffer: NodeBuffer) : FightBossInfoUnit;
		//decode(buffer: ByteArrayBuffer) : FightBossInfoUnit;
		decode64(buffer: string) : FightBossInfoUnit;
		
	}
}


declare module pb {

	var BossReliveNtf: BossReliveNtf;
	export interface BossReliveNtf extends ProtoBufModel {
		new(obj?: any): BossReliveNtf;
		objId?: number;
		reliveCd?: number;
		
	}

	export interface BossReliveNtfBuilder {
		new(): BossReliveNtf;
		decode(buffer: ArrayBuffer) : BossReliveNtf;
		//decode(buffer: NodeBuffer) : BossReliveNtf;
		//decode(buffer: ByteArrayBuffer) : BossReliveNtf;
		decode64(buffer: string) : BossReliveNtf;
		
	}
}


declare module pb {

	var SevenInvestmentLoadReq: SevenInvestmentLoadReq;
	export interface SevenInvestmentLoadReq extends ProtoBufModel {
		new(obj?: any): SevenInvestmentLoadReq;
		
	}

	export interface SevenInvestmentLoadReqBuilder {
		new(): SevenInvestmentLoadReq;
		decode(buffer: ArrayBuffer) : SevenInvestmentLoadReq;
		//decode(buffer: NodeBuffer) : SevenInvestmentLoadReq;
		//decode(buffer: ByteArrayBuffer) : SevenInvestmentLoadReq;
		decode64(buffer: string) : SevenInvestmentLoadReq;
		
	}
}


declare module pb {

	var SevenInvestmentLoadAck: SevenInvestmentLoadAck;
	export interface SevenInvestmentLoadAck extends ProtoBufModel {
		new(obj?: any): SevenInvestmentLoadAck;
		haveGetIds: number[];
		activateDay?: number;
		
	}

	export interface SevenInvestmentLoadAckBuilder {
		new(): SevenInvestmentLoadAck;
		decode(buffer: ArrayBuffer) : SevenInvestmentLoadAck;
		//decode(buffer: NodeBuffer) : SevenInvestmentLoadAck;
		//decode(buffer: ByteArrayBuffer) : SevenInvestmentLoadAck;
		decode64(buffer: string) : SevenInvestmentLoadAck;
		
	}
}


declare module pb {

	var GetSevenInvestmentAwardReq: GetSevenInvestmentAwardReq;
	export interface GetSevenInvestmentAwardReq extends ProtoBufModel {
		new(obj?: any): GetSevenInvestmentAwardReq;
		id?: number;
		
	}

	export interface GetSevenInvestmentAwardReqBuilder {
		new(): GetSevenInvestmentAwardReq;
		decode(buffer: ArrayBuffer) : GetSevenInvestmentAwardReq;
		//decode(buffer: NodeBuffer) : GetSevenInvestmentAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetSevenInvestmentAwardReq;
		decode64(buffer: string) : GetSevenInvestmentAwardReq;
		
	}
}


declare module pb {

	var GetSevenInvestmentAwardAck: GetSevenInvestmentAwardAck;
	export interface GetSevenInvestmentAwardAck extends ProtoBufModel {
		new(obj?: any): GetSevenInvestmentAwardAck;
		haveGetIds: number[];
		
	}

	export interface GetSevenInvestmentAwardAckBuilder {
		new(): GetSevenInvestmentAwardAck;
		decode(buffer: ArrayBuffer) : GetSevenInvestmentAwardAck;
		//decode(buffer: NodeBuffer) : GetSevenInvestmentAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetSevenInvestmentAwardAck;
		decode64(buffer: string) : GetSevenInvestmentAwardAck;
		
	}
}


declare module pb {

	var ShaBaKeInfoCrossReq: ShaBaKeInfoCrossReq;
	export interface ShaBaKeInfoCrossReq extends ProtoBufModel {
		new(obj?: any): ShaBaKeInfoCrossReq;
		
	}

	export interface ShaBaKeInfoCrossReqBuilder {
		new(): ShaBaKeInfoCrossReq;
		decode(buffer: ArrayBuffer) : ShaBaKeInfoCrossReq;
		//decode(buffer: NodeBuffer) : ShaBaKeInfoCrossReq;
		//decode(buffer: ByteArrayBuffer) : ShaBaKeInfoCrossReq;
		decode64(buffer: string) : ShaBaKeInfoCrossReq;
		
	}
}


declare module pb {

	var ShaBaKeInfoCrossAck: ShaBaKeInfoCrossAck;
	export interface ShaBaKeInfoCrossAck extends ProtoBufModel {
		new(obj?: any): ShaBaKeInfoCrossAck;
		WinGuildUserInfo: Info[];
		firstGuildName?: string;
		isEnd?: number;
		serverId?: number;
		
	}

	export interface ShaBaKeInfoCrossAckBuilder {
		new(): ShaBaKeInfoCrossAck;
		decode(buffer: ArrayBuffer) : ShaBaKeInfoCrossAck;
		//decode(buffer: NodeBuffer) : ShaBaKeInfoCrossAck;
		//decode(buffer: ByteArrayBuffer) : ShaBaKeInfoCrossAck;
		decode64(buffer: string) : ShaBaKeInfoCrossAck;
		
	}
}


declare module pb {

	var Info: Info;
	export interface Info extends ProtoBufModel {
		new(obj?: any): Info;
		nickName?: string;
		sex?: number;
		job?: number;
		position?: number;
		display?: Display;
		
	}

	export interface InfoBuilder {
		new(): Info;
		decode(buffer: ArrayBuffer) : Info;
		//decode(buffer: NodeBuffer) : Info;
		//decode(buffer: ByteArrayBuffer) : Info;
		decode64(buffer: string) : Info;
		
	}
}


declare module pb {

	var EnterCrossShaBaKeFightReq: EnterCrossShaBaKeFightReq;
	export interface EnterCrossShaBaKeFightReq extends ProtoBufModel {
		new(obj?: any): EnterCrossShaBaKeFightReq;
		
	}

	export interface EnterCrossShaBaKeFightReqBuilder {
		new(): EnterCrossShaBaKeFightReq;
		decode(buffer: ArrayBuffer) : EnterCrossShaBaKeFightReq;
		//decode(buffer: NodeBuffer) : EnterCrossShaBaKeFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterCrossShaBaKeFightReq;
		decode64(buffer: string) : EnterCrossShaBaKeFightReq;
		
	}
}


declare module pb {

	var EnterCrossShaBaKeFightAck: EnterCrossShaBaKeFightAck;
	export interface EnterCrossShaBaKeFightAck extends ProtoBufModel {
		new(obj?: any): EnterCrossShaBaKeFightAck;
		state?: boolean;
		
	}

	export interface EnterCrossShaBaKeFightAckBuilder {
		new(): EnterCrossShaBaKeFightAck;
		decode(buffer: ArrayBuffer) : EnterCrossShaBaKeFightAck;
		//decode(buffer: NodeBuffer) : EnterCrossShaBaKeFightAck;
		//decode(buffer: ByteArrayBuffer) : EnterCrossShaBaKeFightAck;
		decode64(buffer: string) : EnterCrossShaBaKeFightAck;
		
	}
}


declare module pb {

	var CrossShaBaKeFightEndNtf: CrossShaBaKeFightEndNtf;
	export interface CrossShaBaKeFightEndNtf extends ProtoBufModel {
		new(obj?: any): CrossShaBaKeFightEndNtf;
		serverRank: ShabakeRankScore[];
		
	}

	export interface CrossShaBaKeFightEndNtfBuilder {
		new(): CrossShaBaKeFightEndNtf;
		decode(buffer: ArrayBuffer) : CrossShaBaKeFightEndNtf;
		//decode(buffer: NodeBuffer) : CrossShaBaKeFightEndNtf;
		//decode(buffer: ByteArrayBuffer) : CrossShaBaKeFightEndNtf;
		decode64(buffer: string) : CrossShaBaKeFightEndNtf;
		
	}
}


declare module pb {

	var CrossShabakeOpenNtf: CrossShabakeOpenNtf;
	export interface CrossShabakeOpenNtf extends ProtoBufModel {
		new(obj?: any): CrossShabakeOpenNtf;
		isOpen?: boolean;
		
	}

	export interface CrossShabakeOpenNtfBuilder {
		new(): CrossShabakeOpenNtf;
		decode(buffer: ArrayBuffer) : CrossShabakeOpenNtf;
		//decode(buffer: NodeBuffer) : CrossShabakeOpenNtf;
		//decode(buffer: ByteArrayBuffer) : CrossShabakeOpenNtf;
		decode64(buffer: string) : CrossShabakeOpenNtf;
		
	}
}


declare module pb {

	var ShabakeRankScore: ShabakeRankScore;
	export interface ShabakeRankScore extends ProtoBufModel {
		new(obj?: any): ShabakeRankScore;
		id?: number;
		score?: number;
		
	}

	export interface ShabakeRankScoreBuilder {
		new(): ShabakeRankScore;
		decode(buffer: ArrayBuffer) : ShabakeRankScore;
		//decode(buffer: NodeBuffer) : ShabakeRankScore;
		//decode(buffer: ByteArrayBuffer) : ShabakeRankScore;
		decode64(buffer: string) : ShabakeRankScore;
		
	}
}


declare module pb {

	var ShaBaKeInfoReq: ShaBaKeInfoReq;
	export interface ShaBaKeInfoReq extends ProtoBufModel {
		new(obj?: any): ShaBaKeInfoReq;
		
	}

	export interface ShaBaKeInfoReqBuilder {
		new(): ShaBaKeInfoReq;
		decode(buffer: ArrayBuffer) : ShaBaKeInfoReq;
		//decode(buffer: NodeBuffer) : ShaBaKeInfoReq;
		//decode(buffer: ByteArrayBuffer) : ShaBaKeInfoReq;
		decode64(buffer: string) : ShaBaKeInfoReq;
		
	}
}


declare module pb {

	var ShaBaKeInfoAck: ShaBaKeInfoAck;
	export interface ShaBaKeInfoAck extends ProtoBufModel {
		new(obj?: any): ShaBaKeInfoAck;
		WinGuildUserInfo: Info[];
		firstGuildName?: string;
		isEnd?: number;
		winGuildServerId?: number;
		
	}

	export interface ShaBaKeInfoAckBuilder {
		new(): ShaBaKeInfoAck;
		decode(buffer: ArrayBuffer) : ShaBaKeInfoAck;
		//decode(buffer: NodeBuffer) : ShaBaKeInfoAck;
		//decode(buffer: ByteArrayBuffer) : ShaBaKeInfoAck;
		decode64(buffer: string) : ShaBaKeInfoAck;
		
	}
}


declare module pb {

	var EnterShaBaKeFightReq: EnterShaBaKeFightReq;
	export interface EnterShaBaKeFightReq extends ProtoBufModel {
		new(obj?: any): EnterShaBaKeFightReq;
		
	}

	export interface EnterShaBaKeFightReqBuilder {
		new(): EnterShaBaKeFightReq;
		decode(buffer: ArrayBuffer) : EnterShaBaKeFightReq;
		//decode(buffer: NodeBuffer) : EnterShaBaKeFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterShaBaKeFightReq;
		decode64(buffer: string) : EnterShaBaKeFightReq;
		
	}
}


declare module pb {

	var ShaBaKeFightResultNtf: ShaBaKeFightResultNtf;
	export interface ShaBaKeFightResultNtf extends ProtoBufModel {
		new(obj?: any): ShaBaKeFightResultNtf;
		rank?: number;
		userRank?: number;
		
	}

	export interface ShaBaKeFightResultNtfBuilder {
		new(): ShaBaKeFightResultNtf;
		decode(buffer: ArrayBuffer) : ShaBaKeFightResultNtf;
		//decode(buffer: NodeBuffer) : ShaBaKeFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : ShaBaKeFightResultNtf;
		decode64(buffer: string) : ShaBaKeFightResultNtf;
		
	}
}


declare module pb {

	var ShabakeIsOpenNtf: ShabakeIsOpenNtf;
	export interface ShabakeIsOpenNtf extends ProtoBufModel {
		new(obj?: any): ShabakeIsOpenNtf;
		isOpen?: boolean;
		
	}

	export interface ShabakeIsOpenNtfBuilder {
		new(): ShabakeIsOpenNtf;
		decode(buffer: ArrayBuffer) : ShabakeIsOpenNtf;
		//decode(buffer: NodeBuffer) : ShabakeIsOpenNtf;
		//decode(buffer: ByteArrayBuffer) : ShabakeIsOpenNtf;
		decode64(buffer: string) : ShabakeIsOpenNtf;
		
	}
}


declare module pb {

	var ShopListReq: ShopListReq;
	export interface ShopListReq extends ProtoBufModel {
		new(obj?: any): ShopListReq;
		shopType?: number;
		
	}

	export interface ShopListReqBuilder {
		new(): ShopListReq;
		decode(buffer: ArrayBuffer) : ShopListReq;
		//decode(buffer: NodeBuffer) : ShopListReq;
		//decode(buffer: ByteArrayBuffer) : ShopListReq;
		decode64(buffer: string) : ShopListReq;
		
	}
}


declare module pb {

	var ShopListAck: ShopListAck;
	export interface ShopListAck extends ProtoBufModel {
		new(obj?: any): ShopListAck;
		shopType?: number;
		shopList?: ShopInfo;
		
	}

	export interface ShopListAckBuilder {
		new(): ShopListAck;
		decode(buffer: ArrayBuffer) : ShopListAck;
		//decode(buffer: NodeBuffer) : ShopListAck;
		//decode(buffer: ByteArrayBuffer) : ShopListAck;
		decode64(buffer: string) : ShopListAck;
		
	}
}


declare module pb {

	var ShopBuyReq: ShopBuyReq;
	export interface ShopBuyReq extends ProtoBufModel {
		new(obj?: any): ShopBuyReq;
		id?: number;
		buyNum?: number;
		
	}

	export interface ShopBuyReqBuilder {
		new(): ShopBuyReq;
		decode(buffer: ArrayBuffer) : ShopBuyReq;
		//decode(buffer: NodeBuffer) : ShopBuyReq;
		//decode(buffer: ByteArrayBuffer) : ShopBuyReq;
		decode64(buffer: string) : ShopBuyReq;
		
	}
}


declare module pb {

	var ShopBuyAck: ShopBuyAck;
	export interface ShopBuyAck extends ProtoBufModel {
		new(obj?: any): ShopBuyAck;
		id?: number;
		buyNum?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface ShopBuyAckBuilder {
		new(): ShopBuyAck;
		decode(buffer: ArrayBuffer) : ShopBuyAck;
		//decode(buffer: NodeBuffer) : ShopBuyAck;
		//decode(buffer: ByteArrayBuffer) : ShopBuyAck;
		decode64(buffer: string) : ShopBuyAck;
		
	}
}


declare module pb {

	var ShopWeekResetNtf: ShopWeekResetNtf;
	export interface ShopWeekResetNtf extends ProtoBufModel {
		new(obj?: any): ShopWeekResetNtf;
		shopInfo?: ShopInfo;
		
	}

	export interface ShopWeekResetNtfBuilder {
		new(): ShopWeekResetNtf;
		decode(buffer: ArrayBuffer) : ShopWeekResetNtf;
		//decode(buffer: NodeBuffer) : ShopWeekResetNtf;
		//decode(buffer: ByteArrayBuffer) : ShopWeekResetNtf;
		decode64(buffer: string) : ShopWeekResetNtf;
		
	}
}


declare module pb {

	var SignReq: SignReq;
	export interface SignReq extends ProtoBufModel {
		new(obj?: any): SignReq;
		
	}

	export interface SignReqBuilder {
		new(): SignReq;
		decode(buffer: ArrayBuffer) : SignReq;
		//decode(buffer: NodeBuffer) : SignReq;
		//decode(buffer: ByteArrayBuffer) : SignReq;
		decode64(buffer: string) : SignReq;
		
	}
}


declare module pb {

	var SignAck: SignAck;
	export interface SignAck extends ProtoBufModel {
		new(obj?: any): SignAck;
		signInfo?: SignInfo;
		goods?: GoodsChangeNtf;
		
	}

	export interface SignAckBuilder {
		new(): SignAck;
		decode(buffer: ArrayBuffer) : SignAck;
		//decode(buffer: NodeBuffer) : SignAck;
		//decode(buffer: ByteArrayBuffer) : SignAck;
		decode64(buffer: string) : SignAck;
		
	}
}


declare module pb {

	var SignRepairReq: SignRepairReq;
	export interface SignRepairReq extends ProtoBufModel {
		new(obj?: any): SignRepairReq;
		repairDay?: number;
		
	}

	export interface SignRepairReqBuilder {
		new(): SignRepairReq;
		decode(buffer: ArrayBuffer) : SignRepairReq;
		//decode(buffer: NodeBuffer) : SignRepairReq;
		//decode(buffer: ByteArrayBuffer) : SignRepairReq;
		decode64(buffer: string) : SignRepairReq;
		
	}
}


declare module pb {

	var SignRepairAck: SignRepairAck;
	export interface SignRepairAck extends ProtoBufModel {
		new(obj?: any): SignRepairAck;
		signInfo?: SignInfo;
		goods?: GoodsChangeNtf;
		
	}

	export interface SignRepairAckBuilder {
		new(): SignRepairAck;
		decode(buffer: ArrayBuffer) : SignRepairAck;
		//decode(buffer: NodeBuffer) : SignRepairAck;
		//decode(buffer: ByteArrayBuffer) : SignRepairAck;
		decode64(buffer: string) : SignRepairAck;
		
	}
}


declare module pb {

	var CumulativeSignReq: CumulativeSignReq;
	export interface CumulativeSignReq extends ProtoBufModel {
		new(obj?: any): CumulativeSignReq;
		cumulativeDay?: number;
		
	}

	export interface CumulativeSignReqBuilder {
		new(): CumulativeSignReq;
		decode(buffer: ArrayBuffer) : CumulativeSignReq;
		//decode(buffer: NodeBuffer) : CumulativeSignReq;
		//decode(buffer: ByteArrayBuffer) : CumulativeSignReq;
		decode64(buffer: string) : CumulativeSignReq;
		
	}
}


declare module pb {

	var CumulativeSignAck: CumulativeSignAck;
	export interface CumulativeSignAck extends ProtoBufModel {
		new(obj?: any): CumulativeSignAck;
		signInfo?: SignInfo;
		goods?: GoodsChangeNtf;
		
	}

	export interface CumulativeSignAckBuilder {
		new(): CumulativeSignAck;
		decode(buffer: ArrayBuffer) : CumulativeSignAck;
		//decode(buffer: NodeBuffer) : CumulativeSignAck;
		//decode(buffer: ByteArrayBuffer) : CumulativeSignAck;
		decode64(buffer: string) : CumulativeSignAck;
		
	}
}


declare module pb {

	var SignResetNtf: SignResetNtf;
	export interface SignResetNtf extends ProtoBufModel {
		new(obj?: any): SignResetNtf;
		signInfo?: SignInfo;
		
	}

	export interface SignResetNtfBuilder {
		new(): SignResetNtf;
		decode(buffer: ArrayBuffer) : SignResetNtf;
		//decode(buffer: NodeBuffer) : SignResetNtf;
		//decode(buffer: ByteArrayBuffer) : SignResetNtf;
		decode64(buffer: string) : SignResetNtf;
		
	}
}


declare module pb {

	var SkillUpLvReq: SkillUpLvReq;
	export interface SkillUpLvReq extends ProtoBufModel {
		new(obj?: any): SkillUpLvReq;
		heroIndex?: number;
		skillId?: number;
		
	}

	export interface SkillUpLvReqBuilder {
		new(): SkillUpLvReq;
		decode(buffer: ArrayBuffer) : SkillUpLvReq;
		//decode(buffer: NodeBuffer) : SkillUpLvReq;
		//decode(buffer: ByteArrayBuffer) : SkillUpLvReq;
		decode64(buffer: string) : SkillUpLvReq;
		
	}
}


declare module pb {

	var SkillUpLvAck: SkillUpLvAck;
	export interface SkillUpLvAck extends ProtoBufModel {
		new(obj?: any): SkillUpLvAck;
		heroIndex?: number;
		skillType?: number;
		skill?: SkillUnit;
		
	}

	export interface SkillUpLvAckBuilder {
		new(): SkillUpLvAck;
		decode(buffer: ArrayBuffer) : SkillUpLvAck;
		//decode(buffer: NodeBuffer) : SkillUpLvAck;
		//decode(buffer: ByteArrayBuffer) : SkillUpLvAck;
		decode64(buffer: string) : SkillUpLvAck;
		
	}
}


declare module pb {

	var SkillChangePosReq: SkillChangePosReq;
	export interface SkillChangePosReq extends ProtoBufModel {
		new(obj?: any): SkillChangePosReq;
		heroIndex?: number;
		pos?: number;
		skillId?: number;
		
	}

	export interface SkillChangePosReqBuilder {
		new(): SkillChangePosReq;
		decode(buffer: ArrayBuffer) : SkillChangePosReq;
		//decode(buffer: NodeBuffer) : SkillChangePosReq;
		//decode(buffer: ByteArrayBuffer) : SkillChangePosReq;
		decode64(buffer: string) : SkillChangePosReq;
		
	}
}


declare module pb {

	var SkillChangePosAck: SkillChangePosAck;
	export interface SkillChangePosAck extends ProtoBufModel {
		new(obj?: any): SkillChangePosAck;
		heroIndex?: number;
		skillType?: number;
		skillBags: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface SkillChangePosAckBuilder {
		new(): SkillChangePosAck;
		decode(buffer: ArrayBuffer) : SkillChangePosAck;
		//decode(buffer: NodeBuffer) : SkillChangePosAck;
		//decode(buffer: ByteArrayBuffer) : SkillChangePosAck;
		decode64(buffer: string) : SkillChangePosAck;
		
	}
}


declare module pb {

	var SkillChangeWearReq: SkillChangeWearReq;
	export interface SkillChangeWearReq extends ProtoBufModel {
		new(obj?: any): SkillChangeWearReq;
		heroIndex?: number;
		skillId?: number;
		
	}

	export interface SkillChangeWearReqBuilder {
		new(): SkillChangeWearReq;
		decode(buffer: ArrayBuffer) : SkillChangeWearReq;
		//decode(buffer: NodeBuffer) : SkillChangeWearReq;
		//decode(buffer: ByteArrayBuffer) : SkillChangeWearReq;
		decode64(buffer: string) : SkillChangeWearReq;
		
	}
}


declare module pb {

	var SkillChangeWearAck: SkillChangeWearAck;
	export interface SkillChangeWearAck extends ProtoBufModel {
		new(obj?: any): SkillChangeWearAck;
		heroIndex?: number;
		skillType?: number;
		skillBags: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface SkillChangeWearAckBuilder {
		new(): SkillChangeWearAck;
		decode(buffer: ArrayBuffer) : SkillChangeWearAck;
		//decode(buffer: NodeBuffer) : SkillChangeWearAck;
		//decode(buffer: ByteArrayBuffer) : SkillChangeWearAck;
		decode64(buffer: string) : SkillChangeWearAck;
		
	}
}


declare module pb {

	var SkillResetReq: SkillResetReq;
	export interface SkillResetReq extends ProtoBufModel {
		new(obj?: any): SkillResetReq;
		heroIndex?: number;
		skillType?: number;
		
	}

	export interface SkillResetReqBuilder {
		new(): SkillResetReq;
		decode(buffer: ArrayBuffer) : SkillResetReq;
		//decode(buffer: NodeBuffer) : SkillResetReq;
		//decode(buffer: ByteArrayBuffer) : SkillResetReq;
		decode64(buffer: string) : SkillResetReq;
		
	}
}


declare module pb {

	var SkillResetAck: SkillResetAck;
	export interface SkillResetAck extends ProtoBufModel {
		new(obj?: any): SkillResetAck;
		heroIndex?: number;
		skillType?: number;
		skillBags: dcodeIO.ProtoBuf.Map<number,number>;
		skills: SkillUnit[];
		
	}

	export interface SkillResetAckBuilder {
		new(): SkillResetAck;
		decode(buffer: ArrayBuffer) : SkillResetAck;
		//decode(buffer: NodeBuffer) : SkillResetAck;
		//decode(buffer: ByteArrayBuffer) : SkillResetAck;
		decode64(buffer: string) : SkillResetAck;
		
	}
}


declare module pb {

	var SkillUseReq: SkillUseReq;
	export interface SkillUseReq extends ProtoBufModel {
		new(obj?: any): SkillUseReq;
		heroIndex?: number;
		skillId?: number;
		
	}

	export interface SkillUseReqBuilder {
		new(): SkillUseReq;
		decode(buffer: ArrayBuffer) : SkillUseReq;
		//decode(buffer: NodeBuffer) : SkillUseReq;
		//decode(buffer: ByteArrayBuffer) : SkillUseReq;
		decode64(buffer: string) : SkillUseReq;
		
	}
}


declare module pb {

	var SkillUseNtf: SkillUseNtf;
	export interface SkillUseNtf extends ProtoBufModel {
		new(obj?: any): SkillUseNtf;
		heroIndex?: number;
		skillId?: number;
		startTime?: number;
		endTime?: number;
		
	}

	export interface SkillUseNtfBuilder {
		new(): SkillUseNtf;
		decode(buffer: ArrayBuffer) : SkillUseNtf;
		//decode(buffer: NodeBuffer) : SkillUseNtf;
		//decode(buffer: ByteArrayBuffer) : SkillUseNtf;
		decode64(buffer: string) : SkillUseNtf;
		
	}
}


declare module pb {

	var ClearSkillCdNtf: ClearSkillCdNtf;
	export interface ClearSkillCdNtf extends ProtoBufModel {
		new(obj?: any): ClearSkillCdNtf;
		heroIndex?: number;
		
	}

	export interface ClearSkillCdNtfBuilder {
		new(): ClearSkillCdNtf;
		decode(buffer: ArrayBuffer) : ClearSkillCdNtf;
		//decode(buffer: NodeBuffer) : ClearSkillCdNtf;
		//decode(buffer: ByteArrayBuffer) : ClearSkillCdNtf;
		decode64(buffer: string) : ClearSkillCdNtf;
		
	}
}


declare module pb {

	var SpecialEquipChangeReq: SpecialEquipChangeReq;
	export interface SpecialEquipChangeReq extends ProtoBufModel {
		new(obj?: any): SpecialEquipChangeReq;
		heroIndex?: number;
		pos?: number;
		bagPos?: number;
		type?: number;
		
	}

	export interface SpecialEquipChangeReqBuilder {
		new(): SpecialEquipChangeReq;
		decode(buffer: ArrayBuffer) : SpecialEquipChangeReq;
		//decode(buffer: NodeBuffer) : SpecialEquipChangeReq;
		//decode(buffer: ByteArrayBuffer) : SpecialEquipChangeReq;
		decode64(buffer: string) : SpecialEquipChangeReq;
		
	}
}


declare module pb {

	var SpecialEquipChangeAck: SpecialEquipChangeAck;
	export interface SpecialEquipChangeAck extends ProtoBufModel {
		new(obj?: any): SpecialEquipChangeAck;
		heroIndex?: number;
		pos?: number;
		type?: number;
		specialEquip?: SpecialEquipUnit;
		goods?: GoodsChangeNtf;
		
	}

	export interface SpecialEquipChangeAckBuilder {
		new(): SpecialEquipChangeAck;
		decode(buffer: ArrayBuffer) : SpecialEquipChangeAck;
		//decode(buffer: NodeBuffer) : SpecialEquipChangeAck;
		//decode(buffer: ByteArrayBuffer) : SpecialEquipChangeAck;
		decode64(buffer: string) : SpecialEquipChangeAck;
		
	}
}


declare module pb {

	var SpecialEquipRemoveReq: SpecialEquipRemoveReq;
	export interface SpecialEquipRemoveReq extends ProtoBufModel {
		new(obj?: any): SpecialEquipRemoveReq;
		heroIndex?: number;
		pos?: number;
		type?: number;
		
	}

	export interface SpecialEquipRemoveReqBuilder {
		new(): SpecialEquipRemoveReq;
		decode(buffer: ArrayBuffer) : SpecialEquipRemoveReq;
		//decode(buffer: NodeBuffer) : SpecialEquipRemoveReq;
		//decode(buffer: ByteArrayBuffer) : SpecialEquipRemoveReq;
		decode64(buffer: string) : SpecialEquipRemoveReq;
		
	}
}


declare module pb {

	var SpecialEquipRemoveAck: SpecialEquipRemoveAck;
	export interface SpecialEquipRemoveAck extends ProtoBufModel {
		new(obj?: any): SpecialEquipRemoveAck;
		heroIndex?: number;
		pos?: number;
		type?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface SpecialEquipRemoveAckBuilder {
		new(): SpecialEquipRemoveAck;
		decode(buffer: ArrayBuffer) : SpecialEquipRemoveAck;
		//decode(buffer: NodeBuffer) : SpecialEquipRemoveAck;
		//decode(buffer: ByteArrayBuffer) : SpecialEquipRemoveAck;
		decode64(buffer: string) : SpecialEquipRemoveAck;
		
	}
}


declare module pb {

	var SpendRebatesRewardReq: SpendRebatesRewardReq;
	export interface SpendRebatesRewardReq extends ProtoBufModel {
		new(obj?: any): SpendRebatesRewardReq;
		id?: number;
		
	}

	export interface SpendRebatesRewardReqBuilder {
		new(): SpendRebatesRewardReq;
		decode(buffer: ArrayBuffer) : SpendRebatesRewardReq;
		//decode(buffer: NodeBuffer) : SpendRebatesRewardReq;
		//decode(buffer: ByteArrayBuffer) : SpendRebatesRewardReq;
		decode64(buffer: string) : SpendRebatesRewardReq;
		
	}
}


declare module pb {

	var SpendRebatesRewardAck: SpendRebatesRewardAck;
	export interface SpendRebatesRewardAck extends ProtoBufModel {
		new(obj?: any): SpendRebatesRewardAck;
		id?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface SpendRebatesRewardAckBuilder {
		new(): SpendRebatesRewardAck;
		decode(buffer: ArrayBuffer) : SpendRebatesRewardAck;
		//decode(buffer: NodeBuffer) : SpendRebatesRewardAck;
		//decode(buffer: ByteArrayBuffer) : SpendRebatesRewardAck;
		decode64(buffer: string) : SpendRebatesRewardAck;
		
	}
}


declare module pb {

	var SpendRebatesNtf: SpendRebatesNtf;
	export interface SpendRebatesNtf extends ProtoBufModel {
		new(obj?: any): SpendRebatesNtf;
		countIngot?: number;
		ingot?: number;
		cycle?: number;
		
	}

	export interface SpendRebatesNtfBuilder {
		new(): SpendRebatesNtf;
		decode(buffer: ArrayBuffer) : SpendRebatesNtf;
		//decode(buffer: NodeBuffer) : SpendRebatesNtf;
		//decode(buffer: ByteArrayBuffer) : SpendRebatesNtf;
		decode64(buffer: string) : SpendRebatesNtf;
		
	}
}


declare module pb {

	var StageFightStartReq: StageFightStartReq;
	export interface StageFightStartReq extends ProtoBufModel {
		new(obj?: any): StageFightStartReq;
		stageId?: number;
		wave?: number;
		
	}

	export interface StageFightStartReqBuilder {
		new(): StageFightStartReq;
		decode(buffer: ArrayBuffer) : StageFightStartReq;
		//decode(buffer: NodeBuffer) : StageFightStartReq;
		//decode(buffer: ByteArrayBuffer) : StageFightStartReq;
		decode64(buffer: string) : StageFightStartReq;
		
	}
}


declare module pb {

	var StageFightStartAck: StageFightStartAck;
	export interface StageFightStartAck extends ProtoBufModel {
		new(obj?: any): StageFightStartAck;
		stageId?: number;
		wave?: number;
		
	}

	export interface StageFightStartAckBuilder {
		new(): StageFightStartAck;
		decode(buffer: ArrayBuffer) : StageFightStartAck;
		//decode(buffer: NodeBuffer) : StageFightStartAck;
		//decode(buffer: ByteArrayBuffer) : StageFightStartAck;
		decode64(buffer: string) : StageFightStartAck;
		
	}
}


declare module pb {

	var StageFightEndReq: StageFightEndReq;
	export interface StageFightEndReq extends ProtoBufModel {
		new(obj?: any): StageFightEndReq;
		stageId?: number;
		wave?: number;
		
	}

	export interface StageFightEndReqBuilder {
		new(): StageFightEndReq;
		decode(buffer: ArrayBuffer) : StageFightEndReq;
		//decode(buffer: NodeBuffer) : StageFightEndReq;
		//decode(buffer: ByteArrayBuffer) : StageFightEndReq;
		decode64(buffer: string) : StageFightEndReq;
		
	}
}


declare module pb {

	var StageFightEndNtf: StageFightEndNtf;
	export interface StageFightEndNtf extends ProtoBufModel {
		new(obj?: any): StageFightEndNtf;
		stageId?: number;
		wave?: number;
		goods?: GoodsChangeNtf;
		onlyUpdate?: boolean;
		result?: number;
		
	}

	export interface StageFightEndNtfBuilder {
		new(): StageFightEndNtf;
		decode(buffer: ArrayBuffer) : StageFightEndNtf;
		//decode(buffer: NodeBuffer) : StageFightEndNtf;
		//decode(buffer: ByteArrayBuffer) : StageFightEndNtf;
		decode64(buffer: string) : StageFightEndNtf;
		
	}
}


declare module pb {

	var LeaveFightReq: LeaveFightReq;
	export interface LeaveFightReq extends ProtoBufModel {
		new(obj?: any): LeaveFightReq;
		
	}

	export interface LeaveFightReqBuilder {
		new(): LeaveFightReq;
		decode(buffer: ArrayBuffer) : LeaveFightReq;
		//decode(buffer: NodeBuffer) : LeaveFightReq;
		//decode(buffer: ByteArrayBuffer) : LeaveFightReq;
		decode64(buffer: string) : LeaveFightReq;
		
	}
}


declare module pb {

	var LeaveFightAck: LeaveFightAck;
	export interface LeaveFightAck extends ProtoBufModel {
		new(obj?: any): LeaveFightAck;
		
	}

	export interface LeaveFightAckBuilder {
		new(): LeaveFightAck;
		decode(buffer: ArrayBuffer) : LeaveFightAck;
		//decode(buffer: NodeBuffer) : LeaveFightAck;
		//decode(buffer: ByteArrayBuffer) : LeaveFightAck;
		decode64(buffer: string) : LeaveFightAck;
		
	}
}


declare module pb {

	var KillMonsterReq: KillMonsterReq;
	export interface KillMonsterReq extends ProtoBufModel {
		new(obj?: any): KillMonsterReq;
		monsterId?: number;
		killNum?: number;
		
	}

	export interface KillMonsterReqBuilder {
		new(): KillMonsterReq;
		decode(buffer: ArrayBuffer) : KillMonsterReq;
		//decode(buffer: NodeBuffer) : KillMonsterReq;
		//decode(buffer: ByteArrayBuffer) : KillMonsterReq;
		decode64(buffer: string) : KillMonsterReq;
		
	}
}


declare module pb {

	var KillMonsterAck: KillMonsterAck;
	export interface KillMonsterAck extends ProtoBufModel {
		new(obj?: any): KillMonsterAck;
		
	}

	export interface KillMonsterAckBuilder {
		new(): KillMonsterAck;
		decode(buffer: ArrayBuffer) : KillMonsterAck;
		//decode(buffer: NodeBuffer) : KillMonsterAck;
		//decode(buffer: ByteArrayBuffer) : KillMonsterAck;
		decode64(buffer: string) : KillMonsterAck;
		
	}
}


declare module pb {

	var StartStageBossFightReq: StartStageBossFightReq;
	export interface StartStageBossFightReq extends ProtoBufModel {
		new(obj?: any): StartStageBossFightReq;
		
	}

	export interface StartStageBossFightReqBuilder {
		new(): StartStageBossFightReq;
		decode(buffer: ArrayBuffer) : StartStageBossFightReq;
		//decode(buffer: NodeBuffer) : StartStageBossFightReq;
		//decode(buffer: ByteArrayBuffer) : StartStageBossFightReq;
		decode64(buffer: string) : StartStageBossFightReq;
		
	}
}


declare module pb {

	var StageBagChangeNtf: StageBagChangeNtf;
	export interface StageBagChangeNtf extends ProtoBufModel {
		new(obj?: any): StageBagChangeNtf;
		hookupTime?: number;
		items: itemUnit[];
		isOnline?: boolean;
		
	}

	export interface StageBagChangeNtfBuilder {
		new(): StageBagChangeNtf;
		decode(buffer: ArrayBuffer) : StageBagChangeNtf;
		//decode(buffer: NodeBuffer) : StageBagChangeNtf;
		//decode(buffer: ByteArrayBuffer) : StageBagChangeNtf;
		decode64(buffer: string) : StageBagChangeNtf;
		
	}
}


declare module pb {

	var StageGetHookMapRewardReq: StageGetHookMapRewardReq;
	export interface StageGetHookMapRewardReq extends ProtoBufModel {
		new(obj?: any): StageGetHookMapRewardReq;
		
	}

	export interface StageGetHookMapRewardReqBuilder {
		new(): StageGetHookMapRewardReq;
		decode(buffer: ArrayBuffer) : StageGetHookMapRewardReq;
		//decode(buffer: NodeBuffer) : StageGetHookMapRewardReq;
		//decode(buffer: ByteArrayBuffer) : StageGetHookMapRewardReq;
		decode64(buffer: string) : StageGetHookMapRewardReq;
		
	}
}


declare module pb {

	var StageGetHookMapRewardAck: StageGetHookMapRewardAck;
	export interface StageGetHookMapRewardAck extends ProtoBufModel {
		new(obj?: any): StageGetHookMapRewardAck;
		goods?: GoodsChangeNtf;
		hookupTime?: number;
		items: itemUnit[];
		
	}

	export interface StageGetHookMapRewardAckBuilder {
		new(): StageGetHookMapRewardAck;
		decode(buffer: ArrayBuffer) : StageGetHookMapRewardAck;
		//decode(buffer: NodeBuffer) : StageGetHookMapRewardAck;
		//decode(buffer: ByteArrayBuffer) : StageGetHookMapRewardAck;
		decode64(buffer: string) : StageGetHookMapRewardAck;
		
	}
}


declare module pb {

	var PingReq: PingReq;
	export interface PingReq extends ProtoBufModel {
		new(obj?: any): PingReq;
		isActive?: boolean;
		
	}

	export interface PingReqBuilder {
		new(): PingReq;
		decode(buffer: ArrayBuffer) : PingReq;
		//decode(buffer: NodeBuffer) : PingReq;
		//decode(buffer: ByteArrayBuffer) : PingReq;
		decode64(buffer: string) : PingReq;
		
	}
}


declare module pb {

	var PingAck: PingAck;
	export interface PingAck extends ProtoBufModel {
		new(obj?: any): PingAck;
		ts?: number;
		
	}

	export interface PingAckBuilder {
		new(): PingAck;
		decode(buffer: ArrayBuffer) : PingAck;
		//decode(buffer: NodeBuffer) : PingAck;
		//decode(buffer: ByteArrayBuffer) : PingAck;
		decode64(buffer: string) : PingAck;
		
	}
}


declare module pb {

	var PreferenceSetReq: PreferenceSetReq;
	export interface PreferenceSetReq extends ProtoBufModel {
		new(obj?: any): PreferenceSetReq;
		preference: Preference[];
		
	}

	export interface PreferenceSetReqBuilder {
		new(): PreferenceSetReq;
		decode(buffer: ArrayBuffer) : PreferenceSetReq;
		//decode(buffer: NodeBuffer) : PreferenceSetReq;
		//decode(buffer: ByteArrayBuffer) : PreferenceSetReq;
		decode64(buffer: string) : PreferenceSetReq;
		
	}
}


declare module pb {

	var PreferenceSetAck: PreferenceSetAck;
	export interface PreferenceSetAck extends ProtoBufModel {
		new(obj?: any): PreferenceSetAck;
		preference: Preference[];
		
	}

	export interface PreferenceSetAckBuilder {
		new(): PreferenceSetAck;
		decode(buffer: ArrayBuffer) : PreferenceSetAck;
		//decode(buffer: NodeBuffer) : PreferenceSetAck;
		//decode(buffer: ByteArrayBuffer) : PreferenceSetAck;
		decode64(buffer: string) : PreferenceSetAck;
		
	}
}


declare module pb {

	var PreferenceLoadReq: PreferenceLoadReq;
	export interface PreferenceLoadReq extends ProtoBufModel {
		new(obj?: any): PreferenceLoadReq;
		
	}

	export interface PreferenceLoadReqBuilder {
		new(): PreferenceLoadReq;
		decode(buffer: ArrayBuffer) : PreferenceLoadReq;
		//decode(buffer: NodeBuffer) : PreferenceLoadReq;
		//decode(buffer: ByteArrayBuffer) : PreferenceLoadReq;
		decode64(buffer: string) : PreferenceLoadReq;
		
	}
}


declare module pb {

	var PreferenceLoadAck: PreferenceLoadAck;
	export interface PreferenceLoadAck extends ProtoBufModel {
		new(obj?: any): PreferenceLoadAck;
		preference: Preference[];
		
	}

	export interface PreferenceLoadAckBuilder {
		new(): PreferenceLoadAck;
		decode(buffer: ArrayBuffer) : PreferenceLoadAck;
		//decode(buffer: NodeBuffer) : PreferenceLoadAck;
		//decode(buffer: ByteArrayBuffer) : PreferenceLoadAck;
		decode64(buffer: string) : PreferenceLoadAck;
		
	}
}


declare module pb {

	var FuncStateCloseNtf: FuncStateCloseNtf;
	export interface FuncStateCloseNtf extends ProtoBufModel {
		new(obj?: any): FuncStateCloseNtf;
		closeFuncId: number[];
		
	}

	export interface FuncStateCloseNtfBuilder {
		new(): FuncStateCloseNtf;
		decode(buffer: ArrayBuffer) : FuncStateCloseNtf;
		//decode(buffer: NodeBuffer) : FuncStateCloseNtf;
		//decode(buffer: ByteArrayBuffer) : FuncStateCloseNtf;
		decode64(buffer: string) : FuncStateCloseNtf;
		
	}
}


declare module pb {

	var TalentUpLvReq: TalentUpLvReq;
	export interface TalentUpLvReq extends ProtoBufModel {
		new(obj?: any): TalentUpLvReq;
		heroIndex?: number;
		id?: number;
		isMax?: boolean;
		
	}

	export interface TalentUpLvReqBuilder {
		new(): TalentUpLvReq;
		decode(buffer: ArrayBuffer) : TalentUpLvReq;
		//decode(buffer: NodeBuffer) : TalentUpLvReq;
		//decode(buffer: ByteArrayBuffer) : TalentUpLvReq;
		decode64(buffer: string) : TalentUpLvReq;
		
	}
}


declare module pb {

	var TalentUpLvAck: TalentUpLvAck;
	export interface TalentUpLvAck extends ProtoBufModel {
		new(obj?: any): TalentUpLvAck;
		heroIndex?: number;
		id?: number;
		talentInfo?: TalentInfo;
		
	}

	export interface TalentUpLvAckBuilder {
		new(): TalentUpLvAck;
		decode(buffer: ArrayBuffer) : TalentUpLvAck;
		//decode(buffer: NodeBuffer) : TalentUpLvAck;
		//decode(buffer: ByteArrayBuffer) : TalentUpLvAck;
		decode64(buffer: string) : TalentUpLvAck;
		
	}
}


declare module pb {

	var TalentResetReq: TalentResetReq;
	export interface TalentResetReq extends ProtoBufModel {
		new(obj?: any): TalentResetReq;
		heroIndex?: number;
		id?: number;
		
	}

	export interface TalentResetReqBuilder {
		new(): TalentResetReq;
		decode(buffer: ArrayBuffer) : TalentResetReq;
		//decode(buffer: NodeBuffer) : TalentResetReq;
		//decode(buffer: ByteArrayBuffer) : TalentResetReq;
		decode64(buffer: string) : TalentResetReq;
		
	}
}


declare module pb {

	var TalentResetAck: TalentResetAck;
	export interface TalentResetAck extends ProtoBufModel {
		new(obj?: any): TalentResetAck;
		heroIndex?: number;
		id?: number;
		talentInfo?: TalentInfo;
		
	}

	export interface TalentResetAckBuilder {
		new(): TalentResetAck;
		decode(buffer: ArrayBuffer) : TalentResetAck;
		//decode(buffer: NodeBuffer) : TalentResetAck;
		//decode(buffer: ByteArrayBuffer) : TalentResetAck;
		decode64(buffer: string) : TalentResetAck;
		
	}
}


declare module pb {

	var TaskDoneReq: TaskDoneReq;
	export interface TaskDoneReq extends ProtoBufModel {
		new(obj?: any): TaskDoneReq;
		taskId?: number;
		
	}

	export interface TaskDoneReqBuilder {
		new(): TaskDoneReq;
		decode(buffer: ArrayBuffer) : TaskDoneReq;
		//decode(buffer: NodeBuffer) : TaskDoneReq;
		//decode(buffer: ByteArrayBuffer) : TaskDoneReq;
		decode64(buffer: string) : TaskDoneReq;
		
	}
}


declare module pb {

	var TaskDoneAck: TaskDoneAck;
	export interface TaskDoneAck extends ProtoBufModel {
		new(obj?: any): TaskDoneAck;
		goods?: GoodsChangeNtf;
		
	}

	export interface TaskDoneAckBuilder {
		new(): TaskDoneAck;
		decode(buffer: ArrayBuffer) : TaskDoneAck;
		//decode(buffer: NodeBuffer) : TaskDoneAck;
		//decode(buffer: ByteArrayBuffer) : TaskDoneAck;
		decode64(buffer: string) : TaskDoneAck;
		
	}
}


declare module pb {

	var TaskNpcStateReq: TaskNpcStateReq;
	export interface TaskNpcStateReq extends ProtoBufModel {
		new(obj?: any): TaskNpcStateReq;
		
	}

	export interface TaskNpcStateReqBuilder {
		new(): TaskNpcStateReq;
		decode(buffer: ArrayBuffer) : TaskNpcStateReq;
		//decode(buffer: NodeBuffer) : TaskNpcStateReq;
		//decode(buffer: ByteArrayBuffer) : TaskNpcStateReq;
		decode64(buffer: string) : TaskNpcStateReq;
		
	}
}


declare module pb {

	var TaskNpcStateAck: TaskNpcStateAck;
	export interface TaskNpcStateAck extends ProtoBufModel {
		new(obj?: any): TaskNpcStateAck;
		taskId?: number;
		process?: number;
		
	}

	export interface TaskNpcStateAckBuilder {
		new(): TaskNpcStateAck;
		decode(buffer: ArrayBuffer) : TaskNpcStateAck;
		//decode(buffer: NodeBuffer) : TaskNpcStateAck;
		//decode(buffer: ByteArrayBuffer) : TaskNpcStateAck;
		decode64(buffer: string) : TaskNpcStateAck;
		
	}
}


declare module pb {

	var SetTaskInfoReq: SetTaskInfoReq;
	export interface SetTaskInfoReq extends ProtoBufModel {
		new(obj?: any): SetTaskInfoReq;
		taskId?: number;
		process?: number;
		
	}

	export interface SetTaskInfoReqBuilder {
		new(): SetTaskInfoReq;
		decode(buffer: ArrayBuffer) : SetTaskInfoReq;
		//decode(buffer: NodeBuffer) : SetTaskInfoReq;
		//decode(buffer: ByteArrayBuffer) : SetTaskInfoReq;
		decode64(buffer: string) : SetTaskInfoReq;
		
	}
}


declare module pb {

	var SetTaskInfoAck: SetTaskInfoAck;
	export interface SetTaskInfoAck extends ProtoBufModel {
		new(obj?: any): SetTaskInfoAck;
		taskId?: number;
		process?: number;
		
	}

	export interface SetTaskInfoAckBuilder {
		new(): SetTaskInfoAck;
		decode(buffer: ArrayBuffer) : SetTaskInfoAck;
		//decode(buffer: NodeBuffer) : SetTaskInfoAck;
		//decode(buffer: ByteArrayBuffer) : SetTaskInfoAck;
		decode64(buffer: string) : SetTaskInfoAck;
		
	}
}


declare module pb {

	var TitleActiveReq: TitleActiveReq;
	export interface TitleActiveReq extends ProtoBufModel {
		new(obj?: any): TitleActiveReq;
		titleId?: number;
		
	}

	export interface TitleActiveReqBuilder {
		new(): TitleActiveReq;
		decode(buffer: ArrayBuffer) : TitleActiveReq;
		//decode(buffer: NodeBuffer) : TitleActiveReq;
		//decode(buffer: ByteArrayBuffer) : TitleActiveReq;
		decode64(buffer: string) : TitleActiveReq;
		
	}
}


declare module pb {

	var TitleActiveAck: TitleActiveAck;
	export interface TitleActiveAck extends ProtoBufModel {
		new(obj?: any): TitleActiveAck;
		title?: Title;
		
	}

	export interface TitleActiveAckBuilder {
		new(): TitleActiveAck;
		decode(buffer: ArrayBuffer) : TitleActiveAck;
		//decode(buffer: NodeBuffer) : TitleActiveAck;
		//decode(buffer: ByteArrayBuffer) : TitleActiveAck;
		decode64(buffer: string) : TitleActiveAck;
		
	}
}


declare module pb {

	var TitleWearReq: TitleWearReq;
	export interface TitleWearReq extends ProtoBufModel {
		new(obj?: any): TitleWearReq;
		heroIndex?: number;
		titleId?: number;
		
	}

	export interface TitleWearReqBuilder {
		new(): TitleWearReq;
		decode(buffer: ArrayBuffer) : TitleWearReq;
		//decode(buffer: NodeBuffer) : TitleWearReq;
		//decode(buffer: ByteArrayBuffer) : TitleWearReq;
		decode64(buffer: string) : TitleWearReq;
		
	}
}


declare module pb {

	var TitleWearAck: TitleWearAck;
	export interface TitleWearAck extends ProtoBufModel {
		new(obj?: any): TitleWearAck;
		heroIndex?: number;
		titleId?: number;
		
	}

	export interface TitleWearAckBuilder {
		new(): TitleWearAck;
		decode(buffer: ArrayBuffer) : TitleWearAck;
		//decode(buffer: NodeBuffer) : TitleWearAck;
		//decode(buffer: ByteArrayBuffer) : TitleWearAck;
		decode64(buffer: string) : TitleWearAck;
		
	}
}


declare module pb {

	var TitleRemoveReq: TitleRemoveReq;
	export interface TitleRemoveReq extends ProtoBufModel {
		new(obj?: any): TitleRemoveReq;
		heroIndex?: number;
		
	}

	export interface TitleRemoveReqBuilder {
		new(): TitleRemoveReq;
		decode(buffer: ArrayBuffer) : TitleRemoveReq;
		//decode(buffer: NodeBuffer) : TitleRemoveReq;
		//decode(buffer: ByteArrayBuffer) : TitleRemoveReq;
		decode64(buffer: string) : TitleRemoveReq;
		
	}
}


declare module pb {

	var TitleRemoveAck: TitleRemoveAck;
	export interface TitleRemoveAck extends ProtoBufModel {
		new(obj?: any): TitleRemoveAck;
		heroIndex?: number;
		titleId?: number;
		
	}

	export interface TitleRemoveAckBuilder {
		new(): TitleRemoveAck;
		decode(buffer: ArrayBuffer) : TitleRemoveAck;
		//decode(buffer: NodeBuffer) : TitleRemoveAck;
		//decode(buffer: ByteArrayBuffer) : TitleRemoveAck;
		decode64(buffer: string) : TitleRemoveAck;
		
	}
}


declare module pb {

	var TitleLookReq: TitleLookReq;
	export interface TitleLookReq extends ProtoBufModel {
		new(obj?: any): TitleLookReq;
		titleId?: number;
		
	}

	export interface TitleLookReqBuilder {
		new(): TitleLookReq;
		decode(buffer: ArrayBuffer) : TitleLookReq;
		//decode(buffer: NodeBuffer) : TitleLookReq;
		//decode(buffer: ByteArrayBuffer) : TitleLookReq;
		decode64(buffer: string) : TitleLookReq;
		
	}
}


declare module pb {

	var TitleLookAck: TitleLookAck;
	export interface TitleLookAck extends ProtoBufModel {
		new(obj?: any): TitleLookAck;
		titleId?: number;
		
	}

	export interface TitleLookAckBuilder {
		new(): TitleLookAck;
		decode(buffer: ArrayBuffer) : TitleLookAck;
		//decode(buffer: NodeBuffer) : TitleLookAck;
		//decode(buffer: ByteArrayBuffer) : TitleLookAck;
		decode64(buffer: string) : TitleLookAck;
		
	}
}


declare module pb {

	var TitleAutoActiveNtf: TitleAutoActiveNtf;
	export interface TitleAutoActiveNtf extends ProtoBufModel {
		new(obj?: any): TitleAutoActiveNtf;
		titleList: Title[];
		
	}

	export interface TitleAutoActiveNtfBuilder {
		new(): TitleAutoActiveNtf;
		decode(buffer: ArrayBuffer) : TitleAutoActiveNtf;
		//decode(buffer: NodeBuffer) : TitleAutoActiveNtf;
		//decode(buffer: ByteArrayBuffer) : TitleAutoActiveNtf;
		decode64(buffer: string) : TitleAutoActiveNtf;
		
	}
}


declare module pb {

	var TitleExpireNtf: TitleExpireNtf;
	export interface TitleExpireNtf extends ProtoBufModel {
		new(obj?: any): TitleExpireNtf;
		titleList: Title[];
		
	}

	export interface TitleExpireNtfBuilder {
		new(): TitleExpireNtf;
		decode(buffer: ArrayBuffer) : TitleExpireNtf;
		//decode(buffer: NodeBuffer) : TitleExpireNtf;
		//decode(buffer: ByteArrayBuffer) : TitleExpireNtf;
		decode64(buffer: string) : TitleExpireNtf;
		
	}
}


declare module pb {

	var OpenTowerReq: OpenTowerReq;
	export interface OpenTowerReq extends ProtoBufModel {
		new(obj?: any): OpenTowerReq;
		
	}

	export interface OpenTowerReqBuilder {
		new(): OpenTowerReq;
		decode(buffer: ArrayBuffer) : OpenTowerReq;
		//decode(buffer: NodeBuffer) : OpenTowerReq;
		//decode(buffer: ByteArrayBuffer) : OpenTowerReq;
		decode64(buffer: string) : OpenTowerReq;
		
	}
}


declare module pb {

	var OpenTowerAck: OpenTowerAck;
	export interface OpenTowerAck extends ProtoBufModel {
		new(obj?: any): OpenTowerAck;
		towerLv?: number;
		dayAward?: boolean;
		lotteryNum?: number;
		lotterId?: number;
		rankReward?: boolean;
		
	}

	export interface OpenTowerAckBuilder {
		new(): OpenTowerAck;
		decode(buffer: ArrayBuffer) : OpenTowerAck;
		//decode(buffer: NodeBuffer) : OpenTowerAck;
		//decode(buffer: ByteArrayBuffer) : OpenTowerAck;
		decode64(buffer: string) : OpenTowerAck;
		
	}
}


declare module pb {

	var ToweryDayAwardReq: ToweryDayAwardReq;
	export interface ToweryDayAwardReq extends ProtoBufModel {
		new(obj?: any): ToweryDayAwardReq;
		
	}

	export interface ToweryDayAwardReqBuilder {
		new(): ToweryDayAwardReq;
		decode(buffer: ArrayBuffer) : ToweryDayAwardReq;
		//decode(buffer: NodeBuffer) : ToweryDayAwardReq;
		//decode(buffer: ByteArrayBuffer) : ToweryDayAwardReq;
		decode64(buffer: string) : ToweryDayAwardReq;
		
	}
}


declare module pb {

	var ToweryDayAwardAck: ToweryDayAwardAck;
	export interface ToweryDayAwardAck extends ProtoBufModel {
		new(obj?: any): ToweryDayAwardAck;
		dayAward?: boolean;
		goods?: GoodsChangeNtf;
		
	}

	export interface ToweryDayAwardAckBuilder {
		new(): ToweryDayAwardAck;
		decode(buffer: ArrayBuffer) : ToweryDayAwardAck;
		//decode(buffer: NodeBuffer) : ToweryDayAwardAck;
		//decode(buffer: ByteArrayBuffer) : ToweryDayAwardAck;
		decode64(buffer: string) : ToweryDayAwardAck;
		
	}
}


declare module pb {

	var TowerLotteryReq: TowerLotteryReq;
	export interface TowerLotteryReq extends ProtoBufModel {
		new(obj?: any): TowerLotteryReq;
		
	}

	export interface TowerLotteryReqBuilder {
		new(): TowerLotteryReq;
		decode(buffer: ArrayBuffer) : TowerLotteryReq;
		//decode(buffer: NodeBuffer) : TowerLotteryReq;
		//decode(buffer: ByteArrayBuffer) : TowerLotteryReq;
		decode64(buffer: string) : TowerLotteryReq;
		
	}
}


declare module pb {

	var TowerLotteryAck: TowerLotteryAck;
	export interface TowerLotteryAck extends ProtoBufModel {
		new(obj?: any): TowerLotteryAck;
		lotteryNum?: number;
		lotteryId?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface TowerLotteryAckBuilder {
		new(): TowerLotteryAck;
		decode(buffer: ArrayBuffer) : TowerLotteryAck;
		//decode(buffer: NodeBuffer) : TowerLotteryAck;
		//decode(buffer: ByteArrayBuffer) : TowerLotteryAck;
		decode64(buffer: string) : TowerLotteryAck;
		
	}
}


declare module pb {

	var EnterTowerFightReq: EnterTowerFightReq;
	export interface EnterTowerFightReq extends ProtoBufModel {
		new(obj?: any): EnterTowerFightReq;
		
	}

	export interface EnterTowerFightReqBuilder {
		new(): EnterTowerFightReq;
		decode(buffer: ArrayBuffer) : EnterTowerFightReq;
		//decode(buffer: NodeBuffer) : EnterTowerFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterTowerFightReq;
		decode64(buffer: string) : EnterTowerFightReq;
		
	}
}


declare module pb {

	var TowerFightResultNtf: TowerFightResultNtf;
	export interface TowerFightResultNtf extends ProtoBufModel {
		new(obj?: any): TowerFightResultNtf;
		result?: number;
		towerLv?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface TowerFightResultNtfBuilder {
		new(): TowerFightResultNtf;
		decode(buffer: ArrayBuffer) : TowerFightResultNtf;
		//decode(buffer: NodeBuffer) : TowerFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : TowerFightResultNtf;
		decode64(buffer: string) : TowerFightResultNtf;
		
	}
}


declare module pb {

	var TowerFightContinueReq: TowerFightContinueReq;
	export interface TowerFightContinueReq extends ProtoBufModel {
		new(obj?: any): TowerFightContinueReq;
		
	}

	export interface TowerFightContinueReqBuilder {
		new(): TowerFightContinueReq;
		decode(buffer: ArrayBuffer) : TowerFightContinueReq;
		//decode(buffer: NodeBuffer) : TowerFightContinueReq;
		//decode(buffer: ByteArrayBuffer) : TowerFightContinueReq;
		decode64(buffer: string) : TowerFightContinueReq;
		
	}
}


declare module pb {

	var TowerSweepReq: TowerSweepReq;
	export interface TowerSweepReq extends ProtoBufModel {
		new(obj?: any): TowerSweepReq;
		
	}

	export interface TowerSweepReqBuilder {
		new(): TowerSweepReq;
		decode(buffer: ArrayBuffer) : TowerSweepReq;
		//decode(buffer: NodeBuffer) : TowerSweepReq;
		//decode(buffer: ByteArrayBuffer) : TowerSweepReq;
		decode64(buffer: string) : TowerSweepReq;
		
	}
}


declare module pb {

	var TowerSweepAck: TowerSweepAck;
	export interface TowerSweepAck extends ProtoBufModel {
		new(obj?: any): TowerSweepAck;
		towerLv?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface TowerSweepAckBuilder {
		new(): TowerSweepAck;
		decode(buffer: ArrayBuffer) : TowerSweepAck;
		//decode(buffer: NodeBuffer) : TowerSweepAck;
		//decode(buffer: ByteArrayBuffer) : TowerSweepAck;
		decode64(buffer: string) : TowerSweepAck;
		
	}
}


declare module pb {

	var TowerRankRewardReq: TowerRankRewardReq;
	export interface TowerRankRewardReq extends ProtoBufModel {
		new(obj?: any): TowerRankRewardReq;
		
	}

	export interface TowerRankRewardReqBuilder {
		new(): TowerRankRewardReq;
		decode(buffer: ArrayBuffer) : TowerRankRewardReq;
		//decode(buffer: NodeBuffer) : TowerRankRewardReq;
		//decode(buffer: ByteArrayBuffer) : TowerRankRewardReq;
		decode64(buffer: string) : TowerRankRewardReq;
		
	}
}


declare module pb {

	var TowerRankRewardAck: TowerRankRewardAck;
	export interface TowerRankRewardAck extends ProtoBufModel {
		new(obj?: any): TowerRankRewardAck;
		rankReward?: boolean;
		goods?: GoodsChangeNtf;
		
	}

	export interface TowerRankRewardAckBuilder {
		new(): TowerRankRewardAck;
		decode(buffer: ArrayBuffer) : TowerRankRewardAck;
		//decode(buffer: NodeBuffer) : TowerRankRewardAck;
		//decode(buffer: ByteArrayBuffer) : TowerRankRewardAck;
		decode64(buffer: string) : TowerRankRewardAck;
		
	}
}


declare module pb {

	var TowerLvNtf: TowerLvNtf;
	export interface TowerLvNtf extends ProtoBufModel {
		new(obj?: any): TowerLvNtf;
		towerLv?: number;
		
	}

	export interface TowerLvNtfBuilder {
		new(): TowerLvNtf;
		decode(buffer: ArrayBuffer) : TowerLvNtf;
		//decode(buffer: NodeBuffer) : TowerLvNtf;
		//decode(buffer: ByteArrayBuffer) : TowerLvNtf;
		decode64(buffer: string) : TowerLvNtf;
		
	}
}


declare module pb {

	var SetTreasurePopUpStateReq: SetTreasurePopUpStateReq;
	export interface SetTreasurePopUpStateReq extends ProtoBufModel {
		new(obj?: any): SetTreasurePopUpStateReq;
		state?: number;
		
	}

	export interface SetTreasurePopUpStateReqBuilder {
		new(): SetTreasurePopUpStateReq;
		decode(buffer: ArrayBuffer) : SetTreasurePopUpStateReq;
		//decode(buffer: NodeBuffer) : SetTreasurePopUpStateReq;
		//decode(buffer: ByteArrayBuffer) : SetTreasurePopUpStateReq;
		decode64(buffer: string) : SetTreasurePopUpStateReq;
		
	}
}


declare module pb {

	var SetTreasurePopUpStateAck: SetTreasurePopUpStateAck;
	export interface SetTreasurePopUpStateAck extends ProtoBufModel {
		new(obj?: any): SetTreasurePopUpStateAck;
		state?: number;
		
	}

	export interface SetTreasurePopUpStateAckBuilder {
		new(): SetTreasurePopUpStateAck;
		decode(buffer: ArrayBuffer) : SetTreasurePopUpStateAck;
		//decode(buffer: NodeBuffer) : SetTreasurePopUpStateAck;
		//decode(buffer: ByteArrayBuffer) : SetTreasurePopUpStateAck;
		decode64(buffer: string) : SetTreasurePopUpStateAck;
		
	}
}


declare module pb {

	var ChooseTreasureAwardReq: ChooseTreasureAwardReq;
	export interface ChooseTreasureAwardReq extends ProtoBufModel {
		new(obj?: any): ChooseTreasureAwardReq;
		type?: number;
		index: number[];
		isReplace?: number;
		replaceIndex?: number;
		
	}

	export interface ChooseTreasureAwardReqBuilder {
		new(): ChooseTreasureAwardReq;
		decode(buffer: ArrayBuffer) : ChooseTreasureAwardReq;
		//decode(buffer: NodeBuffer) : ChooseTreasureAwardReq;
		//decode(buffer: ByteArrayBuffer) : ChooseTreasureAwardReq;
		decode64(buffer: string) : ChooseTreasureAwardReq;
		
	}
}


declare module pb {

	var ChooseTreasureAwardAck: ChooseTreasureAwardAck;
	export interface ChooseTreasureAwardAck extends ProtoBufModel {
		new(obj?: any): ChooseTreasureAwardAck;
		type?: number;
		index: number[];
		itemId: number[];
		choosItems: dcodeIO.ProtoBuf.Map<number,ChooseInfo>;
		haveGetItems: dcodeIO.ProtoBuf.Map<number,ChooseInfo>;
		isReplace?: number;
		replaceIndex?: number;
		
	}

	export interface ChooseTreasureAwardAckBuilder {
		new(): ChooseTreasureAwardAck;
		decode(buffer: ArrayBuffer) : ChooseTreasureAwardAck;
		//decode(buffer: NodeBuffer) : ChooseTreasureAwardAck;
		//decode(buffer: ByteArrayBuffer) : ChooseTreasureAwardAck;
		decode64(buffer: string) : ChooseTreasureAwardAck;
		
	}
}


declare module pb {

	var ChooseInfo: ChooseInfo;
	export interface ChooseInfo extends ProtoBufModel {
		new(obj?: any): ChooseInfo;
		items: number[];
		
	}

	export interface ChooseInfoBuilder {
		new(): ChooseInfo;
		decode(buffer: ArrayBuffer) : ChooseInfo;
		//decode(buffer: NodeBuffer) : ChooseInfo;
		//decode(buffer: ByteArrayBuffer) : ChooseInfo;
		decode64(buffer: string) : ChooseInfo;
		
	}
}


declare module pb {

	var BuyTreasureItemReq: BuyTreasureItemReq;
	export interface BuyTreasureItemReq extends ProtoBufModel {
		new(obj?: any): BuyTreasureItemReq;
		
	}

	export interface BuyTreasureItemReqBuilder {
		new(): BuyTreasureItemReq;
		decode(buffer: ArrayBuffer) : BuyTreasureItemReq;
		//decode(buffer: NodeBuffer) : BuyTreasureItemReq;
		//decode(buffer: ByteArrayBuffer) : BuyTreasureItemReq;
		decode64(buffer: string) : BuyTreasureItemReq;
		
	}
}


declare module pb {

	var BuyTreasureItemAck: BuyTreasureItemAck;
	export interface BuyTreasureItemAck extends ProtoBufModel {
		new(obj?: any): BuyTreasureItemAck;
		haveBuyTimes: dcodeIO.ProtoBuf.Map<number,number>;
		goods?: GoodsChangeNtf;
		
	}

	export interface BuyTreasureItemAckBuilder {
		new(): BuyTreasureItemAck;
		decode(buffer: ArrayBuffer) : BuyTreasureItemAck;
		//decode(buffer: NodeBuffer) : BuyTreasureItemAck;
		//decode(buffer: ByteArrayBuffer) : BuyTreasureItemAck;
		decode64(buffer: string) : BuyTreasureItemAck;
		
	}
}


declare module pb {

	var TreasureApplyGetReq: TreasureApplyGetReq;
	export interface TreasureApplyGetReq extends ProtoBufModel {
		new(obj?: any): TreasureApplyGetReq;
		
	}

	export interface TreasureApplyGetReqBuilder {
		new(): TreasureApplyGetReq;
		decode(buffer: ArrayBuffer) : TreasureApplyGetReq;
		//decode(buffer: NodeBuffer) : TreasureApplyGetReq;
		//decode(buffer: ByteArrayBuffer) : TreasureApplyGetReq;
		decode64(buffer: string) : TreasureApplyGetReq;
		
	}
}


declare module pb {

	var TreasureApplyGetAck: TreasureApplyGetAck;
	export interface TreasureApplyGetAck extends ProtoBufModel {
		new(obj?: any): TreasureApplyGetAck;
		items: number[];
		treasureTimes?: number;
		goods?: GoodsChangeNtf;
		choosItems: dcodeIO.ProtoBuf.Map<number,ChooseInfo>;
		haveGetItems: dcodeIO.ProtoBuf.Map<number,ChooseInfo>;
		myTreasureInfo: TreasureInfoUnit[];
		serverTreasureInfo: TreasureInfoUnit[];
		randomType?: number;
		
	}

	export interface TreasureApplyGetAckBuilder {
		new(): TreasureApplyGetAck;
		decode(buffer: ArrayBuffer) : TreasureApplyGetAck;
		//decode(buffer: NodeBuffer) : TreasureApplyGetAck;
		//decode(buffer: ByteArrayBuffer) : TreasureApplyGetAck;
		decode64(buffer: string) : TreasureApplyGetAck;
		
	}
}


declare module pb {

	var TreasureInfosReq: TreasureInfosReq;
	export interface TreasureInfosReq extends ProtoBufModel {
		new(obj?: any): TreasureInfosReq;
		
	}

	export interface TreasureInfosReqBuilder {
		new(): TreasureInfosReq;
		decode(buffer: ArrayBuffer) : TreasureInfosReq;
		//decode(buffer: NodeBuffer) : TreasureInfosReq;
		//decode(buffer: ByteArrayBuffer) : TreasureInfosReq;
		decode64(buffer: string) : TreasureInfosReq;
		
	}
}


declare module pb {

	var TreasureInfosAck: TreasureInfosAck;
	export interface TreasureInfosAck extends ProtoBufModel {
		new(obj?: any): TreasureInfosAck;
		treasureTimes?: number;
		myTreasureInfo: TreasureInfoUnit[];
		serverTreasureInfo: TreasureInfoUnit[];
		haveGetRoundId: number[];
		HaveBuyTimes: dcodeIO.ProtoBuf.Map<number,number>;
		choosItems: dcodeIO.ProtoBuf.Map<number,ChooseInfo>;
		haveGetItems: dcodeIO.ProtoBuf.Map<number,ChooseInfo>;
		season?: number;
		popUpState?: number;
		mergeMark?: number;
		
	}

	export interface TreasureInfosAckBuilder {
		new(): TreasureInfosAck;
		decode(buffer: ArrayBuffer) : TreasureInfosAck;
		//decode(buffer: NodeBuffer) : TreasureInfosAck;
		//decode(buffer: ByteArrayBuffer) : TreasureInfosAck;
		decode64(buffer: string) : TreasureInfosAck;
		
	}
}


declare module pb {

	var TreasureInfoUnit: TreasureInfoUnit;
	export interface TreasureInfoUnit extends ProtoBufModel {
		new(obj?: any): TreasureInfoUnit;
		itemId?: number;
		count?: number;
		time?: number;
		userName?: string;
		type?: number;
		
	}

	export interface TreasureInfoUnitBuilder {
		new(): TreasureInfoUnit;
		decode(buffer: ArrayBuffer) : TreasureInfoUnit;
		//decode(buffer: NodeBuffer) : TreasureInfoUnit;
		//decode(buffer: ByteArrayBuffer) : TreasureInfoUnit;
		decode64(buffer: string) : TreasureInfoUnit;
		
	}
}


declare module pb {

	var TreasureInfoNtf: TreasureInfoNtf;
	export interface TreasureInfoNtf extends ProtoBufModel {
		new(obj?: any): TreasureInfoNtf;
		itemId?: number;
		time?: number;
		userName?: string;
		
	}

	export interface TreasureInfoNtfBuilder {
		new(): TreasureInfoNtf;
		decode(buffer: ArrayBuffer) : TreasureInfoNtf;
		//decode(buffer: NodeBuffer) : TreasureInfoNtf;
		//decode(buffer: ByteArrayBuffer) : TreasureInfoNtf;
		decode64(buffer: string) : TreasureInfoNtf;
		
	}
}


declare module pb {

	var GetTreasureIntegralAwardReq: GetTreasureIntegralAwardReq;
	export interface GetTreasureIntegralAwardReq extends ProtoBufModel {
		new(obj?: any): GetTreasureIntegralAwardReq;
		id?: number;
		
	}

	export interface GetTreasureIntegralAwardReqBuilder {
		new(): GetTreasureIntegralAwardReq;
		decode(buffer: ArrayBuffer) : GetTreasureIntegralAwardReq;
		//decode(buffer: NodeBuffer) : GetTreasureIntegralAwardReq;
		//decode(buffer: ByteArrayBuffer) : GetTreasureIntegralAwardReq;
		decode64(buffer: string) : GetTreasureIntegralAwardReq;
		
	}
}


declare module pb {

	var GetTreasureIntegralAwardAck: GetTreasureIntegralAwardAck;
	export interface GetTreasureIntegralAwardAck extends ProtoBufModel {
		new(obj?: any): GetTreasureIntegralAwardAck;
		haveGetIndex: number[];
		treasureTimes?: number;
		
	}

	export interface GetTreasureIntegralAwardAckBuilder {
		new(): GetTreasureIntegralAwardAck;
		decode(buffer: ArrayBuffer) : GetTreasureIntegralAwardAck;
		//decode(buffer: NodeBuffer) : GetTreasureIntegralAwardAck;
		//decode(buffer: ByteArrayBuffer) : GetTreasureIntegralAwardAck;
		decode64(buffer: string) : GetTreasureIntegralAwardAck;
		
	}
}


declare module pb {

	var TreasureDrawInfoReq: TreasureDrawInfoReq;
	export interface TreasureDrawInfoReq extends ProtoBufModel {
		new(obj?: any): TreasureDrawInfoReq;
		
	}

	export interface TreasureDrawInfoReqBuilder {
		new(): TreasureDrawInfoReq;
		decode(buffer: ArrayBuffer) : TreasureDrawInfoReq;
		//decode(buffer: NodeBuffer) : TreasureDrawInfoReq;
		//decode(buffer: ByteArrayBuffer) : TreasureDrawInfoReq;
		decode64(buffer: string) : TreasureDrawInfoReq;
		
	}
}


declare module pb {

	var TreasureDrawInfoAck: TreasureDrawInfoAck;
	export interface TreasureDrawInfoAck extends ProtoBufModel {
		new(obj?: any): TreasureDrawInfoAck;
		myTreasureInfo: TreasureInfoUnit[];
		serverTreasureInfo: TreasureInfoUnit[];
		
	}

	export interface TreasureDrawInfoAckBuilder {
		new(): TreasureDrawInfoAck;
		decode(buffer: ArrayBuffer) : TreasureDrawInfoAck;
		//decode(buffer: NodeBuffer) : TreasureDrawInfoAck;
		//decode(buffer: ByteArrayBuffer) : TreasureDrawInfoAck;
		decode64(buffer: string) : TreasureDrawInfoAck;
		
	}
}


declare module pb {

	var TreasureCloseNtf: TreasureCloseNtf;
	export interface TreasureCloseNtf extends ProtoBufModel {
		new(obj?: any): TreasureCloseNtf;
		isClose?: boolean;
		
	}

	export interface TreasureCloseNtfBuilder {
		new(): TreasureCloseNtf;
		decode(buffer: ArrayBuffer) : TreasureCloseNtf;
		//decode(buffer: NodeBuffer) : TreasureCloseNtf;
		//decode(buffer: ByteArrayBuffer) : TreasureCloseNtf;
		decode64(buffer: string) : TreasureCloseNtf;
		
	}
}


declare module pb {

	var TreasureShopLoadReq: TreasureShopLoadReq;
	export interface TreasureShopLoadReq extends ProtoBufModel {
		new(obj?: any): TreasureShopLoadReq;
		
	}

	export interface TreasureShopLoadReqBuilder {
		new(): TreasureShopLoadReq;
		decode(buffer: ArrayBuffer) : TreasureShopLoadReq;
		//decode(buffer: NodeBuffer) : TreasureShopLoadReq;
		//decode(buffer: ByteArrayBuffer) : TreasureShopLoadReq;
		decode64(buffer: string) : TreasureShopLoadReq;
		
	}
}


declare module pb {

	var TreasureShopLoadAck: TreasureShopLoadAck;
	export interface TreasureShopLoadAck extends ProtoBufModel {
		new(obj?: any): TreasureShopLoadAck;
		buyNum?: number;
		refreshFree?: boolean;
		refreshTime?: number;
		shop: dcodeIO.ProtoBuf.Map<number,boolean>;
		car: dcodeIO.ProtoBuf.Map<number,number>;
		endTime?: number;
		
	}

	export interface TreasureShopLoadAckBuilder {
		new(): TreasureShopLoadAck;
		decode(buffer: ArrayBuffer) : TreasureShopLoadAck;
		//decode(buffer: NodeBuffer) : TreasureShopLoadAck;
		//decode(buffer: ByteArrayBuffer) : TreasureShopLoadAck;
		decode64(buffer: string) : TreasureShopLoadAck;
		
	}
}


declare module pb {

	var TreasureShopCarChangeReq: TreasureShopCarChangeReq;
	export interface TreasureShopCarChangeReq extends ProtoBufModel {
		new(obj?: any): TreasureShopCarChangeReq;
		shopId?: number;
		isAdd?: boolean;
		
	}

	export interface TreasureShopCarChangeReqBuilder {
		new(): TreasureShopCarChangeReq;
		decode(buffer: ArrayBuffer) : TreasureShopCarChangeReq;
		//decode(buffer: NodeBuffer) : TreasureShopCarChangeReq;
		//decode(buffer: ByteArrayBuffer) : TreasureShopCarChangeReq;
		decode64(buffer: string) : TreasureShopCarChangeReq;
		
	}
}


declare module pb {

	var TreasureShopCarChangeAck: TreasureShopCarChangeAck;
	export interface TreasureShopCarChangeAck extends ProtoBufModel {
		new(obj?: any): TreasureShopCarChangeAck;
		car: dcodeIO.ProtoBuf.Map<number,number>;
		shopId?: number;
		isAdd?: boolean;
		shop: dcodeIO.ProtoBuf.Map<number,boolean>;
		
	}

	export interface TreasureShopCarChangeAckBuilder {
		new(): TreasureShopCarChangeAck;
		decode(buffer: ArrayBuffer) : TreasureShopCarChangeAck;
		//decode(buffer: NodeBuffer) : TreasureShopCarChangeAck;
		//decode(buffer: ByteArrayBuffer) : TreasureShopCarChangeAck;
		decode64(buffer: string) : TreasureShopCarChangeAck;
		
	}
}


declare module pb {

	var TreasureShopBuyReq: TreasureShopBuyReq;
	export interface TreasureShopBuyReq extends ProtoBufModel {
		new(obj?: any): TreasureShopBuyReq;
		shop: number[];
		
	}

	export interface TreasureShopBuyReqBuilder {
		new(): TreasureShopBuyReq;
		decode(buffer: ArrayBuffer) : TreasureShopBuyReq;
		//decode(buffer: NodeBuffer) : TreasureShopBuyReq;
		//decode(buffer: ByteArrayBuffer) : TreasureShopBuyReq;
		decode64(buffer: string) : TreasureShopBuyReq;
		
	}
}


declare module pb {

	var TreasureShopBuyAck: TreasureShopBuyAck;
	export interface TreasureShopBuyAck extends ProtoBufModel {
		new(obj?: any): TreasureShopBuyAck;
		buyNum?: number;
		goods?: GoodsChangeNtf;
		shop: dcodeIO.ProtoBuf.Map<number,boolean>;
		car: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface TreasureShopBuyAckBuilder {
		new(): TreasureShopBuyAck;
		decode(buffer: ArrayBuffer) : TreasureShopBuyAck;
		//decode(buffer: NodeBuffer) : TreasureShopBuyAck;
		//decode(buffer: ByteArrayBuffer) : TreasureShopBuyAck;
		decode64(buffer: string) : TreasureShopBuyAck;
		
	}
}


declare module pb {

	var TreasureShopRefreshReq: TreasureShopRefreshReq;
	export interface TreasureShopRefreshReq extends ProtoBufModel {
		new(obj?: any): TreasureShopRefreshReq;
		
	}

	export interface TreasureShopRefreshReqBuilder {
		new(): TreasureShopRefreshReq;
		decode(buffer: ArrayBuffer) : TreasureShopRefreshReq;
		//decode(buffer: NodeBuffer) : TreasureShopRefreshReq;
		//decode(buffer: ByteArrayBuffer) : TreasureShopRefreshReq;
		decode64(buffer: string) : TreasureShopRefreshReq;
		
	}
}


declare module pb {

	var TreasureShopRefreshNtf: TreasureShopRefreshNtf;
	export interface TreasureShopRefreshNtf extends ProtoBufModel {
		new(obj?: any): TreasureShopRefreshNtf;
		shop: dcodeIO.ProtoBuf.Map<number,boolean>;
		refreshTime?: number;
		car: dcodeIO.ProtoBuf.Map<number,number>;
		refreshFree?: boolean;
		
	}

	export interface TreasureShopRefreshNtfBuilder {
		new(): TreasureShopRefreshNtf;
		decode(buffer: ArrayBuffer) : TreasureShopRefreshNtf;
		//decode(buffer: NodeBuffer) : TreasureShopRefreshNtf;
		//decode(buffer: ByteArrayBuffer) : TreasureShopRefreshNtf;
		decode64(buffer: string) : TreasureShopRefreshNtf;
		
	}
}


declare module pb {

	var TrialTaskInfoReq: TrialTaskInfoReq;
	export interface TrialTaskInfoReq extends ProtoBufModel {
		new(obj?: any): TrialTaskInfoReq;
		
	}

	export interface TrialTaskInfoReqBuilder {
		new(): TrialTaskInfoReq;
		decode(buffer: ArrayBuffer) : TrialTaskInfoReq;
		//decode(buffer: NodeBuffer) : TrialTaskInfoReq;
		//decode(buffer: ByteArrayBuffer) : TrialTaskInfoReq;
		decode64(buffer: string) : TrialTaskInfoReq;
		
	}
}


declare module pb {

	var TrialTaskInfoAck: TrialTaskInfoAck;
	export interface TrialTaskInfoAck extends ProtoBufModel {
		new(obj?: any): TrialTaskInfoAck;
		trialTaskInfos: dcodeIO.ProtoBuf.Map<number,TrialTaskInfo>;
		endTime?: number;
		haveGetStageId: number[];
		
	}

	export interface TrialTaskInfoAckBuilder {
		new(): TrialTaskInfoAck;
		decode(buffer: ArrayBuffer) : TrialTaskInfoAck;
		//decode(buffer: NodeBuffer) : TrialTaskInfoAck;
		//decode(buffer: ByteArrayBuffer) : TrialTaskInfoAck;
		decode64(buffer: string) : TrialTaskInfoAck;
		
	}
}


declare module pb {

	var TrialTaskInfo: TrialTaskInfo;
	export interface TrialTaskInfo extends ProtoBufModel {
		new(obj?: any): TrialTaskInfo;
		nowNum?: number;
		isGet?: number;
		
	}

	export interface TrialTaskInfoBuilder {
		new(): TrialTaskInfo;
		decode(buffer: ArrayBuffer) : TrialTaskInfo;
		//decode(buffer: NodeBuffer) : TrialTaskInfo;
		//decode(buffer: ByteArrayBuffer) : TrialTaskInfo;
		decode64(buffer: string) : TrialTaskInfo;
		
	}
}


declare module pb {

	var TrialTaskGetAwardReq: TrialTaskGetAwardReq;
	export interface TrialTaskGetAwardReq extends ProtoBufModel {
		new(obj?: any): TrialTaskGetAwardReq;
		id?: number;
		
	}

	export interface TrialTaskGetAwardReqBuilder {
		new(): TrialTaskGetAwardReq;
		decode(buffer: ArrayBuffer) : TrialTaskGetAwardReq;
		//decode(buffer: NodeBuffer) : TrialTaskGetAwardReq;
		//decode(buffer: ByteArrayBuffer) : TrialTaskGetAwardReq;
		decode64(buffer: string) : TrialTaskGetAwardReq;
		
	}
}


declare module pb {

	var TrialTaskGetAwardAck: TrialTaskGetAwardAck;
	export interface TrialTaskGetAwardAck extends ProtoBufModel {
		new(obj?: any): TrialTaskGetAwardAck;
		id?: number;
		isGet?: number;
		
	}

	export interface TrialTaskGetAwardAckBuilder {
		new(): TrialTaskGetAwardAck;
		decode(buffer: ArrayBuffer) : TrialTaskGetAwardAck;
		//decode(buffer: NodeBuffer) : TrialTaskGetAwardAck;
		//decode(buffer: ByteArrayBuffer) : TrialTaskGetAwardAck;
		decode64(buffer: string) : TrialTaskGetAwardAck;
		
	}
}


declare module pb {

	var TrialTaskGetStageAwardReq: TrialTaskGetStageAwardReq;
	export interface TrialTaskGetStageAwardReq extends ProtoBufModel {
		new(obj?: any): TrialTaskGetStageAwardReq;
		id?: number;
		
	}

	export interface TrialTaskGetStageAwardReqBuilder {
		new(): TrialTaskGetStageAwardReq;
		decode(buffer: ArrayBuffer) : TrialTaskGetStageAwardReq;
		//decode(buffer: NodeBuffer) : TrialTaskGetStageAwardReq;
		//decode(buffer: ByteArrayBuffer) : TrialTaskGetStageAwardReq;
		decode64(buffer: string) : TrialTaskGetStageAwardReq;
		
	}
}


declare module pb {

	var TrialTaskGetStageAwardAck: TrialTaskGetStageAwardAck;
	export interface TrialTaskGetStageAwardAck extends ProtoBufModel {
		new(obj?: any): TrialTaskGetStageAwardAck;
		id?: number;
		isGet?: number;
		
	}

	export interface TrialTaskGetStageAwardAckBuilder {
		new(): TrialTaskGetStageAwardAck;
		decode(buffer: ArrayBuffer) : TrialTaskGetStageAwardAck;
		//decode(buffer: NodeBuffer) : TrialTaskGetStageAwardAck;
		//decode(buffer: ByteArrayBuffer) : TrialTaskGetStageAwardAck;
		decode64(buffer: string) : TrialTaskGetStageAwardAck;
		
	}
}


declare module pb {

	var TrialTaskInfoNtf: TrialTaskInfoNtf;
	export interface TrialTaskInfoNtf extends ProtoBufModel {
		new(obj?: any): TrialTaskInfoNtf;
		id?: number;
		num?: number;
		
	}

	export interface TrialTaskInfoNtfBuilder {
		new(): TrialTaskInfoNtf;
		decode(buffer: ArrayBuffer) : TrialTaskInfoNtf;
		//decode(buffer: NodeBuffer) : TrialTaskInfoNtf;
		//decode(buffer: ByteArrayBuffer) : TrialTaskInfoNtf;
		decode64(buffer: string) : TrialTaskInfoNtf;
		
	}
}


declare module pb {

	var EnterGameReq: EnterGameReq;
	export interface EnterGameReq extends ProtoBufModel {
		new(obj?: any): EnterGameReq;
		openId?: string;
		loginKey?: string;
		channel?: number;
		serverId?: number;
		origin?: string;
		ip?: string;
		deviceId?: string;
		
	}

	export interface EnterGameReqBuilder {
		new(): EnterGameReq;
		decode(buffer: ArrayBuffer) : EnterGameReq;
		//decode(buffer: NodeBuffer) : EnterGameReq;
		//decode(buffer: ByteArrayBuffer) : EnterGameReq;
		decode64(buffer: string) : EnterGameReq;
		
	}
}


declare module pb {

	var EnterGameAck: EnterGameAck;
	export interface EnterGameAck extends ProtoBufModel {
		new(obj?: any): EnterGameAck;
		user?: UserLoginInfo;
		ts?: number;
		version?: string;
		openServerDay?: number;
		openServerTime?: number;
		realServerId?: number;
		realServerName?: string;
		closeFuncIds: number[];
		mergeOpenServerDay?: number;
		mergeOpenServerTime?: number;
		crossBriefServerInfo: dcodeIO.ProtoBuf.Map<number,BriefServerInfo>;
		
	}

	export interface EnterGameAckBuilder {
		new(): EnterGameAck;
		decode(buffer: ArrayBuffer) : EnterGameAck;
		//decode(buffer: NodeBuffer) : EnterGameAck;
		//decode(buffer: ByteArrayBuffer) : EnterGameAck;
		decode64(buffer: string) : EnterGameAck;
		
	}
}


declare module pb {

	var CreateUserReq: CreateUserReq;
	export interface CreateUserReq extends ProtoBufModel {
		new(obj?: any): CreateUserReq;
		sex?: number;
		nickName?: string;
		avatar?: string;
		job?: number;
		
	}

	export interface CreateUserReqBuilder {
		new(): CreateUserReq;
		decode(buffer: ArrayBuffer) : CreateUserReq;
		//decode(buffer: NodeBuffer) : CreateUserReq;
		//decode(buffer: ByteArrayBuffer) : CreateUserReq;
		decode64(buffer: string) : CreateUserReq;
		
	}
}


declare module pb {

	var CreateUserAck: CreateUserAck;
	export interface CreateUserAck extends ProtoBufModel {
		new(obj?: any): CreateUserAck;
		user?: UserLoginInfo;
		failReason?: string;
		
	}

	export interface CreateUserAckBuilder {
		new(): CreateUserAck;
		decode(buffer: ArrayBuffer) : CreateUserAck;
		//decode(buffer: NodeBuffer) : CreateUserAck;
		//decode(buffer: ByteArrayBuffer) : CreateUserAck;
		decode64(buffer: string) : CreateUserAck;
		
	}
}


declare module pb {

	var RandNameReq: RandNameReq;
	export interface RandNameReq extends ProtoBufModel {
		new(obj?: any): RandNameReq;
		sex?: number;
		
	}

	export interface RandNameReqBuilder {
		new(): RandNameReq;
		decode(buffer: ArrayBuffer) : RandNameReq;
		//decode(buffer: NodeBuffer) : RandNameReq;
		//decode(buffer: ByteArrayBuffer) : RandNameReq;
		decode64(buffer: string) : RandNameReq;
		
	}
}


declare module pb {

	var RandNameAck: RandNameAck;
	export interface RandNameAck extends ProtoBufModel {
		new(obj?: any): RandNameAck;
		names: string[];
		
	}

	export interface RandNameAckBuilder {
		new(): RandNameAck;
		decode(buffer: ArrayBuffer) : RandNameAck;
		//decode(buffer: NodeBuffer) : RandNameAck;
		//decode(buffer: ByteArrayBuffer) : RandNameAck;
		decode64(buffer: string) : RandNameAck;
		
	}
}


declare module pb {

	var CreateHeroReq: CreateHeroReq;
	export interface CreateHeroReq extends ProtoBufModel {
		new(obj?: any): CreateHeroReq;
		sex?: number;
		job?: number;
		
	}

	export interface CreateHeroReqBuilder {
		new(): CreateHeroReq;
		decode(buffer: ArrayBuffer) : CreateHeroReq;
		//decode(buffer: NodeBuffer) : CreateHeroReq;
		//decode(buffer: ByteArrayBuffer) : CreateHeroReq;
		decode64(buffer: string) : CreateHeroReq;
		
	}
}


declare module pb {

	var CreateHeroAck: CreateHeroAck;
	export interface CreateHeroAck extends ProtoBufModel {
		new(obj?: any): CreateHeroAck;
		hero?: HeroInfo;
		
	}

	export interface CreateHeroAckBuilder {
		new(): CreateHeroAck;
		decode(buffer: ArrayBuffer) : CreateHeroAck;
		//decode(buffer: NodeBuffer) : CreateHeroAck;
		//decode(buffer: ByteArrayBuffer) : CreateHeroAck;
		decode64(buffer: string) : CreateHeroAck;
		
	}
}


declare module pb {

	var KickUserNtf: KickUserNtf;
	export interface KickUserNtf extends ProtoBufModel {
		new(obj?: any): KickUserNtf;
		reason?: string;
		
	}

	export interface KickUserNtfBuilder {
		new(): KickUserNtf;
		decode(buffer: ArrayBuffer) : KickUserNtf;
		//decode(buffer: NodeBuffer) : KickUserNtf;
		//decode(buffer: ByteArrayBuffer) : KickUserNtf;
		decode64(buffer: string) : KickUserNtf;
		
	}
}


declare module pb {

	var UserPropertyNtf: UserPropertyNtf;
	export interface UserPropertyNtf extends ProtoBufModel {
		new(obj?: any): UserPropertyNtf;
		heroProps: dcodeIO.ProtoBuf.Map<number,HeroProp>;
		userCombat?: number;
		
	}

	export interface UserPropertyNtfBuilder {
		new(): UserPropertyNtf;
		decode(buffer: ArrayBuffer) : UserPropertyNtf;
		//decode(buffer: NodeBuffer) : UserPropertyNtf;
		//decode(buffer: ByteArrayBuffer) : UserPropertyNtf;
		decode64(buffer: string) : UserPropertyNtf;
		
	}
}


declare module pb {

	var DebugAddGoodsReq: DebugAddGoodsReq;
	export interface DebugAddGoodsReq extends ProtoBufModel {
		new(obj?: any): DebugAddGoodsReq;
		id: number[];
		count: number[];
		args: string[];
		
	}

	export interface DebugAddGoodsReqBuilder {
		new(): DebugAddGoodsReq;
		decode(buffer: ArrayBuffer) : DebugAddGoodsReq;
		//decode(buffer: NodeBuffer) : DebugAddGoodsReq;
		//decode(buffer: ByteArrayBuffer) : DebugAddGoodsReq;
		decode64(buffer: string) : DebugAddGoodsReq;
		
	}
}


declare module pb {

	var DebugAddGoodsAck: DebugAddGoodsAck;
	export interface DebugAddGoodsAck extends ProtoBufModel {
		new(obj?: any): DebugAddGoodsAck;
		result?: number;
		
	}

	export interface DebugAddGoodsAckBuilder {
		new(): DebugAddGoodsAck;
		decode(buffer: ArrayBuffer) : DebugAddGoodsAck;
		//decode(buffer: NodeBuffer) : DebugAddGoodsAck;
		//decode(buffer: ByteArrayBuffer) : DebugAddGoodsAck;
		decode64(buffer: string) : DebugAddGoodsAck;
		
	}
}


declare module pb {

	var ChangeFightModelReq: ChangeFightModelReq;
	export interface ChangeFightModelReq extends ProtoBufModel {
		new(obj?: any): ChangeFightModelReq;
		fightModel?: number;
		
	}

	export interface ChangeFightModelReqBuilder {
		new(): ChangeFightModelReq;
		decode(buffer: ArrayBuffer) : ChangeFightModelReq;
		//decode(buffer: NodeBuffer) : ChangeFightModelReq;
		//decode(buffer: ByteArrayBuffer) : ChangeFightModelReq;
		decode64(buffer: string) : ChangeFightModelReq;
		
	}
}


declare module pb {

	var ChangeFightModelAck: ChangeFightModelAck;
	export interface ChangeFightModelAck extends ProtoBufModel {
		new(obj?: any): ChangeFightModelAck;
		fightModel?: number;
		
	}

	export interface ChangeFightModelAckBuilder {
		new(): ChangeFightModelAck;
		decode(buffer: ArrayBuffer) : ChangeFightModelAck;
		//decode(buffer: NodeBuffer) : ChangeFightModelAck;
		//decode(buffer: ByteArrayBuffer) : ChangeFightModelAck;
		decode64(buffer: string) : ChangeFightModelAck;
		
	}
}


declare module pb {

	var ChangeHeroNameReq: ChangeHeroNameReq;
	export interface ChangeHeroNameReq extends ProtoBufModel {
		new(obj?: any): ChangeHeroNameReq;
		heroIndex?: number;
		name?: string;
		
	}

	export interface ChangeHeroNameReqBuilder {
		new(): ChangeHeroNameReq;
		decode(buffer: ArrayBuffer) : ChangeHeroNameReq;
		//decode(buffer: NodeBuffer) : ChangeHeroNameReq;
		//decode(buffer: ByteArrayBuffer) : ChangeHeroNameReq;
		decode64(buffer: string) : ChangeHeroNameReq;
		
	}
}


declare module pb {

	var ChangeHeroNameAck: ChangeHeroNameAck;
	export interface ChangeHeroNameAck extends ProtoBufModel {
		new(obj?: any): ChangeHeroNameAck;
		heroInfo?: HeroInfo;
		
	}

	export interface ChangeHeroNameAckBuilder {
		new(): ChangeHeroNameAck;
		decode(buffer: ArrayBuffer) : ChangeHeroNameAck;
		//decode(buffer: NodeBuffer) : ChangeHeroNameAck;
		//decode(buffer: ByteArrayBuffer) : ChangeHeroNameAck;
		decode64(buffer: string) : ChangeHeroNameAck;
		
	}
}


declare module pb {

	var UserRechargeNumNtf: UserRechargeNumNtf;
	export interface UserRechargeNumNtf extends ProtoBufModel {
		new(obj?: any): UserRechargeNumNtf;
		rechargeNum?: number;
		redPacketNum?: number;
		dailyRecharge?: number;
		
	}

	export interface UserRechargeNumNtfBuilder {
		new(): UserRechargeNumNtf;
		decode(buffer: ArrayBuffer) : UserRechargeNumNtf;
		//decode(buffer: NodeBuffer) : UserRechargeNumNtf;
		//decode(buffer: ByteArrayBuffer) : UserRechargeNumNtf;
		decode64(buffer: string) : UserRechargeNumNtf;
		
	}
}


declare module pb {

	var UserRedPacketGetNumNtf: UserRedPacketGetNumNtf;
	export interface UserRedPacketGetNumNtf extends ProtoBufModel {
		new(obj?: any): UserRedPacketGetNumNtf;
		redPacketGetNum?: number;
		
	}

	export interface UserRedPacketGetNumNtfBuilder {
		new(): UserRedPacketGetNumNtf;
		decode(buffer: ArrayBuffer) : UserRedPacketGetNumNtf;
		//decode(buffer: NodeBuffer) : UserRedPacketGetNumNtf;
		//decode(buffer: ByteArrayBuffer) : UserRedPacketGetNumNtf;
		decode64(buffer: string) : UserRedPacketGetNumNtf;
		
	}
}


declare module pb {

	var UserOnlineNtf: UserOnlineNtf;
	export interface UserOnlineNtf extends ProtoBufModel {
		new(obj?: any): UserOnlineNtf;
		userId?: number;
		onlineTime?: number;
		
	}

	export interface UserOnlineNtfBuilder {
		new(): UserOnlineNtf;
		decode(buffer: ArrayBuffer) : UserOnlineNtf;
		//decode(buffer: NodeBuffer) : UserOnlineNtf;
		//decode(buffer: ByteArrayBuffer) : UserOnlineNtf;
		decode64(buffer: string) : UserOnlineNtf;
		
	}
}


declare module pb {

	var UserOffLineNtf: UserOffLineNtf;
	export interface UserOffLineNtf extends ProtoBufModel {
		new(obj?: any): UserOffLineNtf;
		userId?: number;
		offLintTime?: number;
		
	}

	export interface UserOffLineNtfBuilder {
		new(): UserOffLineNtf;
		decode(buffer: ArrayBuffer) : UserOffLineNtf;
		//decode(buffer: NodeBuffer) : UserOffLineNtf;
		//decode(buffer: ByteArrayBuffer) : UserOffLineNtf;
		decode64(buffer: string) : UserOffLineNtf;
		
	}
}


declare module pb {

	var VipCustomerReq: VipCustomerReq;
	export interface VipCustomerReq extends ProtoBufModel {
		new(obj?: any): VipCustomerReq;
		
	}

	export interface VipCustomerReqBuilder {
		new(): VipCustomerReq;
		decode(buffer: ArrayBuffer) : VipCustomerReq;
		//decode(buffer: NodeBuffer) : VipCustomerReq;
		//decode(buffer: ByteArrayBuffer) : VipCustomerReq;
		decode64(buffer: string) : VipCustomerReq;
		
	}
}


declare module pb {

	var VipCustomerAck: VipCustomerAck;
	export interface VipCustomerAck extends ProtoBufModel {
		new(obj?: any): VipCustomerAck;
		flag?: boolean;
		
	}

	export interface VipCustomerAckBuilder {
		new(): VipCustomerAck;
		decode(buffer: ArrayBuffer) : VipCustomerAck;
		//decode(buffer: NodeBuffer) : VipCustomerAck;
		//decode(buffer: ByteArrayBuffer) : VipCustomerAck;
		decode64(buffer: string) : VipCustomerAck;
		
	}
}


declare module pb {

	var UserInGameOkReq: UserInGameOkReq;
	export interface UserInGameOkReq extends ProtoBufModel {
		new(obj?: any): UserInGameOkReq;
		
	}

	export interface UserInGameOkReqBuilder {
		new(): UserInGameOkReq;
		decode(buffer: ArrayBuffer) : UserInGameOkReq;
		//decode(buffer: NodeBuffer) : UserInGameOkReq;
		//decode(buffer: ByteArrayBuffer) : UserInGameOkReq;
		decode64(buffer: string) : UserInGameOkReq;
		
	}
}


declare module pb {

	var CrossFightOpenNtf: CrossFightOpenNtf;
	export interface CrossFightOpenNtf extends ProtoBufModel {
		new(obj?: any): CrossFightOpenNtf;
		stageId?: number;
		
	}

	export interface CrossFightOpenNtfBuilder {
		new(): CrossFightOpenNtf;
		decode(buffer: ArrayBuffer) : CrossFightOpenNtf;
		//decode(buffer: NodeBuffer) : CrossFightOpenNtf;
		//decode(buffer: ByteArrayBuffer) : CrossFightOpenNtf;
		decode64(buffer: string) : CrossFightOpenNtf;
		
	}
}


declare module pb {

	var UserSubscribeReq: UserSubscribeReq;
	export interface UserSubscribeReq extends ProtoBufModel {
		new(obj?: any): UserSubscribeReq;
		subscribeId?: number;
		
	}

	export interface UserSubscribeReqBuilder {
		new(): UserSubscribeReq;
		decode(buffer: ArrayBuffer) : UserSubscribeReq;
		//decode(buffer: NodeBuffer) : UserSubscribeReq;
		//decode(buffer: ByteArrayBuffer) : UserSubscribeReq;
		decode64(buffer: string) : UserSubscribeReq;
		
	}
}


declare module pb {

	var UserSubscribeAck: UserSubscribeAck;
	export interface UserSubscribeAck extends ProtoBufModel {
		new(obj?: any): UserSubscribeAck;
		subscribeId?: number;
		
	}

	export interface UserSubscribeAckBuilder {
		new(): UserSubscribeAck;
		decode(buffer: ArrayBuffer) : UserSubscribeAck;
		//decode(buffer: NodeBuffer) : UserSubscribeAck;
		//decode(buffer: ByteArrayBuffer) : UserSubscribeAck;
		decode64(buffer: string) : UserSubscribeAck;
		
	}
}


declare module pb {

	var VipGiftGetReq: VipGiftGetReq;
	export interface VipGiftGetReq extends ProtoBufModel {
		new(obj?: any): VipGiftGetReq;
		lv?: number;
		
	}

	export interface VipGiftGetReqBuilder {
		new(): VipGiftGetReq;
		decode(buffer: ArrayBuffer) : VipGiftGetReq;
		//decode(buffer: NodeBuffer) : VipGiftGetReq;
		//decode(buffer: ByteArrayBuffer) : VipGiftGetReq;
		decode64(buffer: string) : VipGiftGetReq;
		
	}
}


declare module pb {

	var VipGiftGetAck: VipGiftGetAck;
	export interface VipGiftGetAck extends ProtoBufModel {
		new(obj?: any): VipGiftGetAck;
		lv?: number;
		
	}

	export interface VipGiftGetAckBuilder {
		new(): VipGiftGetAck;
		decode(buffer: ArrayBuffer) : VipGiftGetAck;
		//decode(buffer: NodeBuffer) : VipGiftGetAck;
		//decode(buffer: ByteArrayBuffer) : VipGiftGetAck;
		decode64(buffer: string) : VipGiftGetAck;
		
	}
}


declare module pb {

	var VipBossLoadReq: VipBossLoadReq;
	export interface VipBossLoadReq extends ProtoBufModel {
		new(obj?: any): VipBossLoadReq;
		
	}

	export interface VipBossLoadReqBuilder {
		new(): VipBossLoadReq;
		decode(buffer: ArrayBuffer) : VipBossLoadReq;
		//decode(buffer: NodeBuffer) : VipBossLoadReq;
		//decode(buffer: ByteArrayBuffer) : VipBossLoadReq;
		decode64(buffer: string) : VipBossLoadReq;
		
	}
}


declare module pb {

	var VipBossLoadAck: VipBossLoadAck;
	export interface VipBossLoadAck extends ProtoBufModel {
		new(obj?: any): VipBossLoadAck;
		vipBoss: dcodeIO.ProtoBuf.Map<number,number>;
		
	}

	export interface VipBossLoadAckBuilder {
		new(): VipBossLoadAck;
		decode(buffer: ArrayBuffer) : VipBossLoadAck;
		//decode(buffer: NodeBuffer) : VipBossLoadAck;
		//decode(buffer: ByteArrayBuffer) : VipBossLoadAck;
		decode64(buffer: string) : VipBossLoadAck;
		
	}
}


declare module pb {

	var EnterVipBossFightReq: EnterVipBossFightReq;
	export interface EnterVipBossFightReq extends ProtoBufModel {
		new(obj?: any): EnterVipBossFightReq;
		stageId?: number;
		
	}

	export interface EnterVipBossFightReqBuilder {
		new(): EnterVipBossFightReq;
		decode(buffer: ArrayBuffer) : EnterVipBossFightReq;
		//decode(buffer: NodeBuffer) : EnterVipBossFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterVipBossFightReq;
		decode64(buffer: string) : EnterVipBossFightReq;
		
	}
}


declare module pb {

	var EnterVipBossFightAck: EnterVipBossFightAck;
	export interface EnterVipBossFightAck extends ProtoBufModel {
		new(obj?: any): EnterVipBossFightAck;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface EnterVipBossFightAckBuilder {
		new(): EnterVipBossFightAck;
		decode(buffer: ArrayBuffer) : EnterVipBossFightAck;
		//decode(buffer: NodeBuffer) : EnterVipBossFightAck;
		//decode(buffer: ByteArrayBuffer) : EnterVipBossFightAck;
		decode64(buffer: string) : EnterVipBossFightAck;
		
	}
}


declare module pb {

	var VipBossFightResultNtf: VipBossFightResultNtf;
	export interface VipBossFightResultNtf extends ProtoBufModel {
		new(obj?: any): VipBossFightResultNtf;
		stageId?: number;
		dareNum?: number;
		result?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface VipBossFightResultNtfBuilder {
		new(): VipBossFightResultNtf;
		decode(buffer: ArrayBuffer) : VipBossFightResultNtf;
		//decode(buffer: NodeBuffer) : VipBossFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : VipBossFightResultNtf;
		decode64(buffer: string) : VipBossFightResultNtf;
		
	}
}


declare module pb {

	var VipBossSweepReq: VipBossSweepReq;
	export interface VipBossSweepReq extends ProtoBufModel {
		new(obj?: any): VipBossSweepReq;
		stageId?: number;
		
	}

	export interface VipBossSweepReqBuilder {
		new(): VipBossSweepReq;
		decode(buffer: ArrayBuffer) : VipBossSweepReq;
		//decode(buffer: NodeBuffer) : VipBossSweepReq;
		//decode(buffer: ByteArrayBuffer) : VipBossSweepReq;
		decode64(buffer: string) : VipBossSweepReq;
		
	}
}


declare module pb {

	var VipBossSweepAck: VipBossSweepAck;
	export interface VipBossSweepAck extends ProtoBufModel {
		new(obj?: any): VipBossSweepAck;
		stageId?: number;
		dareNum?: number;
		goods?: GoodsChangeNtf;
		isBagFull?: number;
		
	}

	export interface VipBossSweepAckBuilder {
		new(): VipBossSweepAck;
		decode(buffer: ArrayBuffer) : VipBossSweepAck;
		//decode(buffer: NodeBuffer) : VipBossSweepAck;
		//decode(buffer: ByteArrayBuffer) : VipBossSweepAck;
		decode64(buffer: string) : VipBossSweepAck;
		
	}
}


declare module pb {

	var VipBossDareNumNtf: VipBossDareNumNtf;
	export interface VipBossDareNumNtf extends ProtoBufModel {
		new(obj?: any): VipBossDareNumNtf;
		stageId?: number;
		dareNum?: number;
		
	}

	export interface VipBossDareNumNtfBuilder {
		new(): VipBossDareNumNtf;
		decode(buffer: ArrayBuffer) : VipBossDareNumNtf;
		//decode(buffer: NodeBuffer) : VipBossDareNumNtf;
		//decode(buffer: ByteArrayBuffer) : VipBossDareNumNtf;
		decode64(buffer: string) : VipBossDareNumNtf;
		
	}
}


declare module pb {

	var WarOrderTaskNtf: WarOrderTaskNtf;
	export interface WarOrderTaskNtf extends ProtoBufModel {
		new(obj?: any): WarOrderTaskNtf;
		task?: WarOrderTask;
		weekTask: dcodeIO.ProtoBuf.Map<number,WarOrderTask>;
		lv?: number;
		exp?: number;
		
	}

	export interface WarOrderTaskNtfBuilder {
		new(): WarOrderTaskNtf;
		decode(buffer: ArrayBuffer) : WarOrderTaskNtf;
		//decode(buffer: NodeBuffer) : WarOrderTaskNtf;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskNtf;
		decode64(buffer: string) : WarOrderTaskNtf;
		
	}
}


declare module pb {

	var WarOrderOpenReq: WarOrderOpenReq;
	export interface WarOrderOpenReq extends ProtoBufModel {
		new(obj?: any): WarOrderOpenReq;
		
	}

	export interface WarOrderOpenReqBuilder {
		new(): WarOrderOpenReq;
		decode(buffer: ArrayBuffer) : WarOrderOpenReq;
		//decode(buffer: NodeBuffer) : WarOrderOpenReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderOpenReq;
		decode64(buffer: string) : WarOrderOpenReq;
		
	}
}


declare module pb {

	var WarOrderOpenAck: WarOrderOpenAck;
	export interface WarOrderOpenAck extends ProtoBufModel {
		new(obj?: any): WarOrderOpenAck;
		warOrderInfo?: WarOrderTaskNtf;
		
	}

	export interface WarOrderOpenAckBuilder {
		new(): WarOrderOpenAck;
		decode(buffer: ArrayBuffer) : WarOrderOpenAck;
		//decode(buffer: NodeBuffer) : WarOrderOpenAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderOpenAck;
		decode64(buffer: string) : WarOrderOpenAck;
		
	}
}


declare module pb {

	var WarOrderTaskFinishReq: WarOrderTaskFinishReq;
	export interface WarOrderTaskFinishReq extends ProtoBufModel {
		new(obj?: any): WarOrderTaskFinishReq;
		taskId?: number;
		week?: number;
		isWeekTask?: boolean;
		
	}

	export interface WarOrderTaskFinishReqBuilder {
		new(): WarOrderTaskFinishReq;
		decode(buffer: ArrayBuffer) : WarOrderTaskFinishReq;
		//decode(buffer: NodeBuffer) : WarOrderTaskFinishReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskFinishReq;
		decode64(buffer: string) : WarOrderTaskFinishReq;
		
	}
}


declare module pb {

	var WarOrderTaskFinishAck: WarOrderTaskFinishAck;
	export interface WarOrderTaskFinishAck extends ProtoBufModel {
		new(obj?: any): WarOrderTaskFinishAck;
		taskId?: number;
		week?: number;
		isWeekTask?: boolean;
		
	}

	export interface WarOrderTaskFinishAckBuilder {
		new(): WarOrderTaskFinishAck;
		decode(buffer: ArrayBuffer) : WarOrderTaskFinishAck;
		//decode(buffer: NodeBuffer) : WarOrderTaskFinishAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskFinishAck;
		decode64(buffer: string) : WarOrderTaskFinishAck;
		
	}
}


declare module pb {

	var WarOrderTaskRewardReq: WarOrderTaskRewardReq;
	export interface WarOrderTaskRewardReq extends ProtoBufModel {
		new(obj?: any): WarOrderTaskRewardReq;
		taskId?: number;
		week?: number;
		isWeekTask?: boolean;
		
	}

	export interface WarOrderTaskRewardReqBuilder {
		new(): WarOrderTaskRewardReq;
		decode(buffer: ArrayBuffer) : WarOrderTaskRewardReq;
		//decode(buffer: NodeBuffer) : WarOrderTaskRewardReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskRewardReq;
		decode64(buffer: string) : WarOrderTaskRewardReq;
		
	}
}


declare module pb {

	var WarOrderTaskRewardAck: WarOrderTaskRewardAck;
	export interface WarOrderTaskRewardAck extends ProtoBufModel {
		new(obj?: any): WarOrderTaskRewardAck;
		taskId?: number;
		week?: number;
		isWeekTask?: boolean;
		lv?: number;
		exp?: number;
		
	}

	export interface WarOrderTaskRewardAckBuilder {
		new(): WarOrderTaskRewardAck;
		decode(buffer: ArrayBuffer) : WarOrderTaskRewardAck;
		//decode(buffer: NodeBuffer) : WarOrderTaskRewardAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderTaskRewardAck;
		decode64(buffer: string) : WarOrderTaskRewardAck;
		
	}
}


declare module pb {

	var WarOrderBuyLuxuryReq: WarOrderBuyLuxuryReq;
	export interface WarOrderBuyLuxuryReq extends ProtoBufModel {
		new(obj?: any): WarOrderBuyLuxuryReq;
		
	}

	export interface WarOrderBuyLuxuryReqBuilder {
		new(): WarOrderBuyLuxuryReq;
		decode(buffer: ArrayBuffer) : WarOrderBuyLuxuryReq;
		//decode(buffer: NodeBuffer) : WarOrderBuyLuxuryReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderBuyLuxuryReq;
		decode64(buffer: string) : WarOrderBuyLuxuryReq;
		
	}
}


declare module pb {

	var WarOrderBuyLuxuryAck: WarOrderBuyLuxuryAck;
	export interface WarOrderBuyLuxuryAck extends ProtoBufModel {
		new(obj?: any): WarOrderBuyLuxuryAck;
		isLuxury?: boolean;
		
	}

	export interface WarOrderBuyLuxuryAckBuilder {
		new(): WarOrderBuyLuxuryAck;
		decode(buffer: ArrayBuffer) : WarOrderBuyLuxuryAck;
		//decode(buffer: NodeBuffer) : WarOrderBuyLuxuryAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderBuyLuxuryAck;
		decode64(buffer: string) : WarOrderBuyLuxuryAck;
		
	}
}


declare module pb {

	var WarOrderBuyExpReq: WarOrderBuyExpReq;
	export interface WarOrderBuyExpReq extends ProtoBufModel {
		new(obj?: any): WarOrderBuyExpReq;
		
	}

	export interface WarOrderBuyExpReqBuilder {
		new(): WarOrderBuyExpReq;
		decode(buffer: ArrayBuffer) : WarOrderBuyExpReq;
		//decode(buffer: NodeBuffer) : WarOrderBuyExpReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderBuyExpReq;
		decode64(buffer: string) : WarOrderBuyExpReq;
		
	}
}


declare module pb {

	var WarOrderBuyExpAck: WarOrderBuyExpAck;
	export interface WarOrderBuyExpAck extends ProtoBufModel {
		new(obj?: any): WarOrderBuyExpAck;
		lv?: number;
		exp?: number;
		
	}

	export interface WarOrderBuyExpAckBuilder {
		new(): WarOrderBuyExpAck;
		decode(buffer: ArrayBuffer) : WarOrderBuyExpAck;
		//decode(buffer: NodeBuffer) : WarOrderBuyExpAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderBuyExpAck;
		decode64(buffer: string) : WarOrderBuyExpAck;
		
	}
}


declare module pb {

	var WarOrderLvRewardReq: WarOrderLvRewardReq;
	export interface WarOrderLvRewardReq extends ProtoBufModel {
		new(obj?: any): WarOrderLvRewardReq;
		lv?: number;
		
	}

	export interface WarOrderLvRewardReqBuilder {
		new(): WarOrderLvRewardReq;
		decode(buffer: ArrayBuffer) : WarOrderLvRewardReq;
		//decode(buffer: NodeBuffer) : WarOrderLvRewardReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderLvRewardReq;
		decode64(buffer: string) : WarOrderLvRewardReq;
		
	}
}


declare module pb {

	var WarOrderLvRewardAck: WarOrderLvRewardAck;
	export interface WarOrderLvRewardAck extends ProtoBufModel {
		new(obj?: any): WarOrderLvRewardAck;
		lv?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface WarOrderLvRewardAckBuilder {
		new(): WarOrderLvRewardAck;
		decode(buffer: ArrayBuffer) : WarOrderLvRewardAck;
		//decode(buffer: NodeBuffer) : WarOrderLvRewardAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderLvRewardAck;
		decode64(buffer: string) : WarOrderLvRewardAck;
		
	}
}


declare module pb {

	var WarOrderExchangeReq: WarOrderExchangeReq;
	export interface WarOrderExchangeReq extends ProtoBufModel {
		new(obj?: any): WarOrderExchangeReq;
		exchangeId?: number;
		num?: number;
		
	}

	export interface WarOrderExchangeReqBuilder {
		new(): WarOrderExchangeReq;
		decode(buffer: ArrayBuffer) : WarOrderExchangeReq;
		//decode(buffer: NodeBuffer) : WarOrderExchangeReq;
		//decode(buffer: ByteArrayBuffer) : WarOrderExchangeReq;
		decode64(buffer: string) : WarOrderExchangeReq;
		
	}
}


declare module pb {

	var WarOrderExchangeAck: WarOrderExchangeAck;
	export interface WarOrderExchangeAck extends ProtoBufModel {
		new(obj?: any): WarOrderExchangeAck;
		exp?: number;
		exchangeId?: number;
		num?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface WarOrderExchangeAckBuilder {
		new(): WarOrderExchangeAck;
		decode(buffer: ArrayBuffer) : WarOrderExchangeAck;
		//decode(buffer: NodeBuffer) : WarOrderExchangeAck;
		//decode(buffer: ByteArrayBuffer) : WarOrderExchangeAck;
		decode64(buffer: string) : WarOrderExchangeAck;
		
	}
}


declare module pb {

	var WarOrderLvNtf: WarOrderLvNtf;
	export interface WarOrderLvNtf extends ProtoBufModel {
		new(obj?: any): WarOrderLvNtf;
		lv?: number;
		exp?: number;
		
	}

	export interface WarOrderLvNtfBuilder {
		new(): WarOrderLvNtf;
		decode(buffer: ArrayBuffer) : WarOrderLvNtf;
		//decode(buffer: NodeBuffer) : WarOrderLvNtf;
		//decode(buffer: ByteArrayBuffer) : WarOrderLvNtf;
		decode64(buffer: string) : WarOrderLvNtf;
		
	}
}


declare module pb {

	var WarOrderResetNtf: WarOrderResetNtf;
	export interface WarOrderResetNtf extends ProtoBufModel {
		new(obj?: any): WarOrderResetNtf;
		warOrder?: WarOrder;
		
	}

	export interface WarOrderResetNtfBuilder {
		new(): WarOrderResetNtf;
		decode(buffer: ArrayBuffer) : WarOrderResetNtf;
		//decode(buffer: NodeBuffer) : WarOrderResetNtf;
		//decode(buffer: ByteArrayBuffer) : WarOrderResetNtf;
		decode64(buffer: string) : WarOrderResetNtf;
		
	}
}


declare module pb {

	var WingUpLevelReq: WingUpLevelReq;
	export interface WingUpLevelReq extends ProtoBufModel {
		new(obj?: any): WingUpLevelReq;
		heroIndex?: number;
		
	}

	export interface WingUpLevelReqBuilder {
		new(): WingUpLevelReq;
		decode(buffer: ArrayBuffer) : WingUpLevelReq;
		//decode(buffer: NodeBuffer) : WingUpLevelReq;
		//decode(buffer: ByteArrayBuffer) : WingUpLevelReq;
		decode64(buffer: string) : WingUpLevelReq;
		
	}
}


declare module pb {

	var WingUpLevelAck: WingUpLevelAck;
	export interface WingUpLevelAck extends ProtoBufModel {
		new(obj?: any): WingUpLevelAck;
		heroIndex?: number;
		wing?: Wing;
		
	}

	export interface WingUpLevelAckBuilder {
		new(): WingUpLevelAck;
		decode(buffer: ArrayBuffer) : WingUpLevelAck;
		//decode(buffer: NodeBuffer) : WingUpLevelAck;
		//decode(buffer: ByteArrayBuffer) : WingUpLevelAck;
		decode64(buffer: string) : WingUpLevelAck;
		
	}
}


declare module pb {

	var WingUseMaterialReq: WingUseMaterialReq;
	export interface WingUseMaterialReq extends ProtoBufModel {
		new(obj?: any): WingUseMaterialReq;
		heroIndex?: number;
		
	}

	export interface WingUseMaterialReqBuilder {
		new(): WingUseMaterialReq;
		decode(buffer: ArrayBuffer) : WingUseMaterialReq;
		//decode(buffer: NodeBuffer) : WingUseMaterialReq;
		//decode(buffer: ByteArrayBuffer) : WingUseMaterialReq;
		decode64(buffer: string) : WingUseMaterialReq;
		
	}
}


declare module pb {

	var WingUseMaterialAck: WingUseMaterialAck;
	export interface WingUseMaterialAck extends ProtoBufModel {
		new(obj?: any): WingUseMaterialAck;
		heroIndex?: number;
		wing?: Wing;
		
	}

	export interface WingUseMaterialAckBuilder {
		new(): WingUseMaterialAck;
		decode(buffer: ArrayBuffer) : WingUseMaterialAck;
		//decode(buffer: NodeBuffer) : WingUseMaterialAck;
		//decode(buffer: ByteArrayBuffer) : WingUseMaterialAck;
		decode64(buffer: string) : WingUseMaterialAck;
		
	}
}


declare module pb {

	var WingSpecialUpReq: WingSpecialUpReq;
	export interface WingSpecialUpReq extends ProtoBufModel {
		new(obj?: any): WingSpecialUpReq;
		heroIndex?: number;
		specialType?: number;
		
	}

	export interface WingSpecialUpReqBuilder {
		new(): WingSpecialUpReq;
		decode(buffer: ArrayBuffer) : WingSpecialUpReq;
		//decode(buffer: NodeBuffer) : WingSpecialUpReq;
		//decode(buffer: ByteArrayBuffer) : WingSpecialUpReq;
		decode64(buffer: string) : WingSpecialUpReq;
		
	}
}


declare module pb {

	var WingSpecialUpAck: WingSpecialUpAck;
	export interface WingSpecialUpAck extends ProtoBufModel {
		new(obj?: any): WingSpecialUpAck;
		heroIndex?: number;
		wingSpecial?: WingSpecialNtf;
		
	}

	export interface WingSpecialUpAckBuilder {
		new(): WingSpecialUpAck;
		decode(buffer: ArrayBuffer) : WingSpecialUpAck;
		//decode(buffer: NodeBuffer) : WingSpecialUpAck;
		//decode(buffer: ByteArrayBuffer) : WingSpecialUpAck;
		decode64(buffer: string) : WingSpecialUpAck;
		
	}
}


declare module pb {

	var WingWearReq: WingWearReq;
	export interface WingWearReq extends ProtoBufModel {
		new(obj?: any): WingWearReq;
		heroIndex?: number;
		wingId?: number;
		
	}

	export interface WingWearReqBuilder {
		new(): WingWearReq;
		decode(buffer: ArrayBuffer) : WingWearReq;
		//decode(buffer: NodeBuffer) : WingWearReq;
		//decode(buffer: ByteArrayBuffer) : WingWearReq;
		decode64(buffer: string) : WingWearReq;
		
	}
}


declare module pb {

	var WingWearAck: WingWearAck;
	export interface WingWearAck extends ProtoBufModel {
		new(obj?: any): WingWearAck;
		heroIndex?: number;
		wingId?: number;
		
	}

	export interface WingWearAckBuilder {
		new(): WingWearAck;
		decode(buffer: ArrayBuffer) : WingWearAck;
		//decode(buffer: NodeBuffer) : WingWearAck;
		//decode(buffer: ByteArrayBuffer) : WingWearAck;
		decode64(buffer: string) : WingWearAck;
		
	}
}


declare module pb {

	var EnterWorldBossFightReq: EnterWorldBossFightReq;
	export interface EnterWorldBossFightReq extends ProtoBufModel {
		new(obj?: any): EnterWorldBossFightReq;
		stageId?: number;
		
	}

	export interface EnterWorldBossFightReqBuilder {
		new(): EnterWorldBossFightReq;
		decode(buffer: ArrayBuffer) : EnterWorldBossFightReq;
		//decode(buffer: NodeBuffer) : EnterWorldBossFightReq;
		//decode(buffer: ByteArrayBuffer) : EnterWorldBossFightReq;
		decode64(buffer: string) : EnterWorldBossFightReq;
		
	}
}


declare module pb {

	var WorldBossFightResultNtf: WorldBossFightResultNtf;
	export interface WorldBossFightResultNtf extends ProtoBufModel {
		new(obj?: any): WorldBossFightResultNtf;
		stageId?: number;
		rank?: number;
		goods?: GoodsChangeNtf;
		
	}

	export interface WorldBossFightResultNtfBuilder {
		new(): WorldBossFightResultNtf;
		decode(buffer: ArrayBuffer) : WorldBossFightResultNtf;
		//decode(buffer: NodeBuffer) : WorldBossFightResultNtf;
		//decode(buffer: ByteArrayBuffer) : WorldBossFightResultNtf;
		decode64(buffer: string) : WorldBossFightResultNtf;
		
	}
}


declare module pb {

	var LoadWorldLeaderReq: LoadWorldLeaderReq;
	export interface LoadWorldLeaderReq extends ProtoBufModel {
		new(obj?: any): LoadWorldLeaderReq;
		
	}

	export interface LoadWorldLeaderReqBuilder {
		new(): LoadWorldLeaderReq;
		decode(buffer: ArrayBuffer) : LoadWorldLeaderReq;
		//decode(buffer: NodeBuffer) : LoadWorldLeaderReq;
		//decode(buffer: ByteArrayBuffer) : LoadWorldLeaderReq;
		decode64(buffer: string) : LoadWorldLeaderReq;
		
	}
}


declare module pb {

	var LoadWorldLeaderAck: LoadWorldLeaderAck;
	export interface LoadWorldLeaderAck extends ProtoBufModel {
		new(obj?: any): LoadWorldLeaderAck;
		nowStageId?: number;
		guildJoinNum?: number;
		bossHp?: number;
		worldLeaderInfoByStage: dcodeIO.ProtoBuf.Map<number,WorldLeaderInfo>;
		
	}

	export interface LoadWorldLeaderAckBuilder {
		new(): LoadWorldLeaderAck;
		decode(buffer: ArrayBuffer) : LoadWorldLeaderAck;
		//decode(buffer: NodeBuffer) : LoadWorldLeaderAck;
		//decode(buffer: ByteArrayBuffer) : LoadWorldLeaderAck;
		decode64(buffer: string) : LoadWorldLeaderAck;
		
	}
}


declare module pb {

	var WorldLeaderInfo: WorldLeaderInfo;
	export interface WorldLeaderInfo extends ProtoBufModel {
		new(obj?: any): WorldLeaderInfo;
		guildJoinNum?: number;
		
	}

	export interface WorldLeaderInfoBuilder {
		new(): WorldLeaderInfo;
		decode(buffer: ArrayBuffer) : WorldLeaderInfo;
		//decode(buffer: NodeBuffer) : WorldLeaderInfo;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderInfo;
		decode64(buffer: string) : WorldLeaderInfo;
		
	}
}


declare module pb {

	var GetWorldLeaderRankInfoReq: GetWorldLeaderRankInfoReq;
	export interface GetWorldLeaderRankInfoReq extends ProtoBufModel {
		new(obj?: any): GetWorldLeaderRankInfoReq;
		stageId?: number;
		
	}

	export interface GetWorldLeaderRankInfoReqBuilder {
		new(): GetWorldLeaderRankInfoReq;
		decode(buffer: ArrayBuffer) : GetWorldLeaderRankInfoReq;
		//decode(buffer: NodeBuffer) : GetWorldLeaderRankInfoReq;
		//decode(buffer: ByteArrayBuffer) : GetWorldLeaderRankInfoReq;
		decode64(buffer: string) : GetWorldLeaderRankInfoReq;
		
	}
}


declare module pb {

	var GetWorldLeaderRankInfoAck: GetWorldLeaderRankInfoAck;
	export interface GetWorldLeaderRankInfoAck extends ProtoBufModel {
		new(obj?: any): GetWorldLeaderRankInfoAck;
		ranks: WorldLeaderRankUnit[];
		bossHp?: number;
		stageId?: number;
		
	}

	export interface GetWorldLeaderRankInfoAckBuilder {
		new(): GetWorldLeaderRankInfoAck;
		decode(buffer: ArrayBuffer) : GetWorldLeaderRankInfoAck;
		//decode(buffer: NodeBuffer) : GetWorldLeaderRankInfoAck;
		//decode(buffer: ByteArrayBuffer) : GetWorldLeaderRankInfoAck;
		decode64(buffer: string) : GetWorldLeaderRankInfoAck;
		
	}
}


declare module pb {

	var WorldLeaderStartNtf: WorldLeaderStartNtf;
	export interface WorldLeaderStartNtf extends ProtoBufModel {
		new(obj?: any): WorldLeaderStartNtf;
		stageId?: number;
		
	}

	export interface WorldLeaderStartNtfBuilder {
		new(): WorldLeaderStartNtf;
		decode(buffer: ArrayBuffer) : WorldLeaderStartNtf;
		//decode(buffer: NodeBuffer) : WorldLeaderStartNtf;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderStartNtf;
		decode64(buffer: string) : WorldLeaderStartNtf;
		
	}
}


declare module pb {

	var WorldLeaderEnterReq: WorldLeaderEnterReq;
	export interface WorldLeaderEnterReq extends ProtoBufModel {
		new(obj?: any): WorldLeaderEnterReq;
		stageId?: number;
		
	}

	export interface WorldLeaderEnterReqBuilder {
		new(): WorldLeaderEnterReq;
		decode(buffer: ArrayBuffer) : WorldLeaderEnterReq;
		//decode(buffer: NodeBuffer) : WorldLeaderEnterReq;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderEnterReq;
		decode64(buffer: string) : WorldLeaderEnterReq;
		
	}
}


declare module pb {

	var WorldLeaderEnterAck: WorldLeaderEnterAck;
	export interface WorldLeaderEnterAck extends ProtoBufModel {
		new(obj?: any): WorldLeaderEnterAck;
		enterState?: boolean;
		
	}

	export interface WorldLeaderEnterAckBuilder {
		new(): WorldLeaderEnterAck;
		decode(buffer: ArrayBuffer) : WorldLeaderEnterAck;
		//decode(buffer: NodeBuffer) : WorldLeaderEnterAck;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderEnterAck;
		decode64(buffer: string) : WorldLeaderEnterAck;
		
	}
}


declare module pb {

	var WorldLeaderEndRewardNtf: WorldLeaderEndRewardNtf;
	export interface WorldLeaderEndRewardNtf extends ProtoBufModel {
		new(obj?: any): WorldLeaderEndRewardNtf;
		stageId?: number;
		owner?: BriefUserInfo;
		rank?: number;
		
	}

	export interface WorldLeaderEndRewardNtfBuilder {
		new(): WorldLeaderEndRewardNtf;
		decode(buffer: ArrayBuffer) : WorldLeaderEndRewardNtf;
		//decode(buffer: NodeBuffer) : WorldLeaderEndRewardNtf;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderEndRewardNtf;
		decode64(buffer: string) : WorldLeaderEndRewardNtf;
		
	}
}


declare module pb {

	var WorldLeaderRankUnit: WorldLeaderRankUnit;
	export interface WorldLeaderRankUnit extends ProtoBufModel {
		new(obj?: any): WorldLeaderRankUnit;
		rank?: number;
		guildId?: number;
		guildName?: string;
		score?: number;
		serverId?: number;
		serverName?: string;
		
	}

	export interface WorldLeaderRankUnitBuilder {
		new(): WorldLeaderRankUnit;
		decode(buffer: ArrayBuffer) : WorldLeaderRankUnit;
		//decode(buffer: NodeBuffer) : WorldLeaderRankUnit;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderRankUnit;
		decode64(buffer: string) : WorldLeaderRankUnit;
		
	}
}


declare module pb {

	var WorldLeaderBossHpNtf: WorldLeaderBossHpNtf;
	export interface WorldLeaderBossHpNtf extends ProtoBufModel {
		new(obj?: any): WorldLeaderBossHpNtf;
		stageId?: number;
		bossHp?: number;
		
	}

	export interface WorldLeaderBossHpNtfBuilder {
		new(): WorldLeaderBossHpNtf;
		decode(buffer: ArrayBuffer) : WorldLeaderBossHpNtf;
		//decode(buffer: NodeBuffer) : WorldLeaderBossHpNtf;
		//decode(buffer: ByteArrayBuffer) : WorldLeaderBossHpNtf;
		decode64(buffer: string) : WorldLeaderBossHpNtf;
		
	}
}


declare module pb {
	export const enum Sex {
		MALE = 1,
		FEMALE = 2,
		
	}
}


declare module pb {
	export const enum Job {
		zhanshi = 1,
		fashi = 2,
		daoshi = 3,
		
	}
}


declare module pb {
	export const enum Platform {
		IOS = 0,
		Android = 1,
		
	}
}


declare module pb {
	export const enum ItemType {
		TOP = 1,
		equip = 3,
		gift_bag = 4,
		zodiac = 5,
		prop = 6,
		kingarms = 7,
		dragonarms = 8,
		special_caution = 9,
		skill = 10,
		contribution = 11,
		optionalGift = 12,
		firstRechargeDiscount = 13,
		hpRecover = 20,
		mpRecover = 21,
		potion = 23,
		randomStone = 24,
		backCity = 25,
		randomGift = 26,
		rechargeItem = 27,
		redPacket = 28,
		fitHolyEquip = 29,
		chuanShiEquip = 30,
		title = 31,
		miJi = 32,
		godBloodItem = 33,
		dabaoMySteryItem = 34,
		monthCardItem = 35,
		expPill = 36,
		privilegeActive = 37,
		payToken = 99,
		reinItem = 101,
		skilItem = 102,
		talentItem = 103,
		dictateItem = 104,
		strengthItem = 105,
		jewelItem = 106,
		insideItem = 107,
		panaceaItem = 108,
		fabaoItem = 109,
		dragonItem = 110,
		holyarmsItem = 111,
		wingItem = 112,
		magicCircleItem = 113,
		areaItem = 114,
		juexueItem = 115,
		petItem = 116,
		officialItem = 117,
		fitItem = 118,
		atlasItem = 119,
		fasionItem = 120,
		holyBeastItem = 121,
		elfItem = 122,
		cutTreasureItem = 123,
		clearItem = 124,
		guildItem = 125,
		composeItem = 126,
		fitClothItem = 127,
		ringItem = 128,
		fieldFightItem = 129,
		competitveItem = 130,
		treasureItem = 131,
		baokuItem = 132,
		miningItem = 133,
		bossFightItem = 134,
		warOrderItem = 135,
		copyFightItem = 136,
		dayItem = 137,
		chuanShiEquipItem = 138,
		ancientSkillItem = 139,
		ancientTreasureItem = 140,
		chuanshiStrengthenItem = 141,
		dabaoEquipItem = 142,
		
	}
}


declare module pb {
	export const enum ItemId {
		exp = 1,
		lv = 2,
		vipExp = 3,
		vipLv = 4,
		ingot = 5,
		gold = 6,
		chuanqiBi = 7,
		randomStone = 8,
		backCity = 9,
		honor = 10,
		warOrderExp = 12,
		bindingIngot = 13,
		goldIngot = 14,
		
	}
}


declare module pb {
	export const enum Property {
		Combat = 1000,
		Hp = 1010,
		HpRate = 1012,
		HpModuleRate = 1013,
		PattMin = 1020,
		PattMax = 1021,
		PattRate = 1022,
		PattModuleRate = 1023,
		MattMin = 1030,
		MattMax = 1031,
		MattRate = 1032,
		MattModuleRate = 1033,
		TattMin = 1040,
		TattMax = 1041,
		TattRate = 1042,
		TattModuleRate = 1043,
		Lucky = 1050,
		DefMin = 1060,
		DefMax = 1061,
		DefRate = 1062,
		DefModuleRate = 1063,
		AdfMin = 1070,
		AdfMax = 1071,
		AdfRate = 1072,
		AdfModuleRate = 1073,
		MP = 1080,
		Speed = 1090,
		Hit = 1100,
		HitRate = 1102,
		Miss = 1110,
		MissRate = 1112,
		Crit = 1120,
		UnCrit = 1130,
		AddCritHit = 1140,
		RedCritHit = 1150,
		DeadHurt = 1160,
		UnDeadHurt = 1170,
		Palsy = 1180,
		UnPalsy = 1190,
		IgnoreDef = 1200,
		CutRatio = 1210,
		Cut = 1220,
		AttSpeed = 1240,
		AddW = 1250,
		RedW = 1260,
		AddM = 1270,
		RedM = 1280,
		AddT = 1290,
		RedT = 1300,
		Suck = 1330,
		SuckRatio = 1331,
		UnSuck = 1340,
		RedHurt = 1390,
		AddHurt = 1400,
		AddExp = 2000,
		AddGold = 2010,
		AddPlayer = 2100,
		RedPlayer = 2200,
		Reflex = 2300,
		ReflexRatio = 2400,
		RageRatio = 2500,
		UnRageRatio = 2600,
		RageHurt = 2700,
		UnRageHurt = 2800,
		AddSkill = 2900,
		RedSkill = 3000,
		BlockRatio = 3100,
		UnBlockRatio = 3200,
		FatalRatio = 3300,
		UnFatalRatio = 3400,
		AddFatal = 3500,
		RedFatal = 3600,
		AttPets = 3710,
		AttPetsRate = 3712,
		AttAll = 3810,
		AttRateAll = 3812,
		AttModuleRateAll = 3813,
		DefAll = 3910,
		AdfAll = 4000,
		AddKill = 4200,
		RedKill = 4300,
		KillRate = 4400,
		Kill = 4500,
		RedHurtMon = 4600,
		SuckRatioMon = 4700,
		FakeCombat = 4800,
		
	}
}


declare module pb {
	export const enum PropertyModule {
		playerLv = 1,
		equipStrength = 2,
		equipNormal = 3,
		fabao = 4,
		rein = 5,
		wing = 6,
		atlas = 7,
		dragonEquip = 8,
		kingarms = 9,
		zodiac = 10,
		clear = 11,
		dictate = 12,
		panacea = 13,
		jewel = 14,
		inside = 15,
		fashion = 16,
		official = 17,
		holyarms = 18,
		ring = 19,
		godEequip = 20,
		juexue = 21,
		pet = 22,
		area = 23,
		expLv = 25,
		magicCircle = 26,
		fashionCloth = 27,
		talent = 28,
		fit = 29,
		monthCard = 30,
		achievement = 31,
		talentGeneral = 32,
		elf = 33,
		holyBeast = 34,
		fitHolyEquip = 35,
		vip = 36,
		skill = 37,
		chuanShiEquip = 38,
		atlasWear = 39,
		ancientSkill = 40,
		title = 41,
		miJi = 42,
		yuanGuBaoWu = 43,
		chuanShiStrengthen = 44,
		petAppendage = 45,
		godEquipBlood = 46,
		dabaoEquip = 47,
		label = 48,
		privilege = 49,
		
	}
}


declare module pb {
	export const enum RankType {
		level = 1,
		combat = 2,
		tower = 3,
		arena = 4,
		combatZhanshi = 5,
		combatFashi = 6,
		combatDaoshi = 7,
		awaken = 8,
		jewel = 9,
		wing = 10,
		combatJewel = 11,
		combatWing = 12,
		combatFaBao = 13,
		combatShengBing = 14,
		combatJueXue = 15,
		combatEquip = 16,
		combatZhenFa = 17,
		combatLongQi = 18,
		shabake_guild = 19,
		combatRing = 20,
		combatPet = 21,
		combatAncient = 22,
		combatChuanShi = 23,
		combatFit = 24,
		combatDaBao = 25,
		
	}
}


declare module pb {
	export const enum FashionType {
		weapon = 1,
		cloth = 2,
		
	}
}


declare module pb {
	export const enum ChatType {
		system = 1,
		world = 2,
		guild = 3,
		team = 4,
		private = 5,
		
	}
}


declare module pb {
	export const enum SkillRangeType {
		line = 1,
		square = 2,
		squareHalf = 3,
		
	}
}


declare module pb {
	export const enum SkillTargetType {
		ememy = 1,
		friend = 2,
		
	}
}


declare module pb {
	export const enum EquipPos {
		one = 1,
		two = 2,
		three = 3,
		four = 4,
		five = 5,
		six = 6,
		seven = 7,
		eight = 8,
		nine = 9,
		ten = 10,
		
	}
}


declare module pb {
	export const enum EquipType {
		weaponR = 1,
		weaponL = 2,
		HELMET = 3,
		CLOTHES = 4,
		belt = 5,
		SHOES = 6,
		RING = 7,
		bracelet = 8,
		
	}
}


declare module pb {
	export const enum BuffType {
		paralysis = 1,
		freeze = 2,
		flame = 3,
		invincible = 4,
		poisoning = 5,
		decHurt = 6,
		addPropByPro = 7,
		decPropByPro = 8,
		addPropByFixed = 9,
		decPropByFixed = 10,
		addHpByFixed = 11,
		addMpByFixed = 12,
		addHpMpFixed = 13,
		addHpBySkillFixed = 14,
		getOtherBuff = 15,
		decHurtFixed = 16,
		poisoningPro = 17,
		bleedingPro = 18,
		burningPro = 19,
		hold = 20,
		mark = 22,
		aspdAddPro = 25,
		beFatalReoverHp = 26,
		attackAddByHp = 27,
		silent = 28,
		addHpBySkillHurtPro = 29,
		addHpBySkillPro = 30,
		treatBan = 31,
		treatAdd = 32,
		treatLess = 33,
		addHurtByFire = 34,
		weak = 36,
		treatAddByHp = 37,
		hurtToTreat = 38,
		addPropByAtk = 39,
		lessPropByAtk = 40,
		poisoningByAtk = 41,
		burningByAtk = 42,
		dizziness = 43,
		bleedingByAtk = 44,
		suck = 45,
		backHurt = 48,
		clearSkillCd = 49,
		confusion = 50,
		relive = 51,
		mpToHp = 52,
		skillHurtAdd = 53,
		skillCd = 54,
		cutSkill = 55,
		fitLimit = 56,
		addHurt = 57,
		immune = 58,
		triggerPropMust = 59,
		groundBuff = 60,
		skillInvalid = 61,
		recoveryHp = 62,
		desRecoveryHp = 63,
		poisoningByAtkForMonster = 64,
		petrifiedForMonster = 65,
		
	}
}


declare module pb {
	export const enum MailStatus {
		unread = 0,
		read = 1,
		
	}
}


declare module pb {
	export const enum SceneDir {
		bottom = 4,
		right_bottom = 3,
		right = 2,
		right_top = 1,
		top = 0,
		left_top = 7,
		left = 6,
		left_bottom = 5,
		
	}
}


declare module pb {
	export const enum HurtType {
		normal = 1,
		crit = 2,
		official = 3,
		fatalHurt = 4,
		rage = 5,
		
	}
}


declare module pb {
	export const enum SceneObjType {
		NIL0 = 0,
		USER = 1,
		MONSTER = 2,
		Item = 3,
		Pet = 4,
		Collection = 5,
		Fit = 6,
		Summon = 7,
		Buff = 8,
		
	}
}


declare module pb {
	export const enum MoveType {
		walk = 0,
		run = 1,
		randomStone = 2,
		
	}
}


declare module pb {
	export const enum ResultFlag {
		FAIL = 0,
		SUCCESS = 1,
		
	}
}


declare module pb {
	export const enum CopyResult {
		VICTORY = 1,
		DEFEAT = 2,
		
	}
}


declare module pb {
	export const enum Condition {
		USER_LEVEL = 1,
		user_rebirth_lv = 2,
		user_combat = 3,
		user_stage_pass = 4,
		user_vip_lv = 5,
		limit_time = 6,
		active_month_card_sliver = 7,
		active_month_card_gold = 8,
		server_openTime = 10,
		user_sex = 11,
		job = 12,
		killMonster = 15,
		gotoNpc = 16,
		costGold = 17,
		costChuanQIBi = 18,
		costIngot = 19,
		one_hero_lv = 20,
		two_hero_lv = 21,
		three_hero_lv = 22,
		one_strengthen_lv = 23,
		two_strengthen_lv = 24,
		three_strengthen_lv = 25,
		pet_lv = 26,
		now_hero_lv = 27,
		equip_lv = 28,
		tower = 29,
		inside_lv = 30,
		recharge_all_check = 31,
		fit_lv = 32,
		spendIngot = 33,
		taskNums = 34,
		zhanshi_combat = 35,
		fashi_combat = 36,
		daoshi_combat = 37,
		shabake_guild_rank = 38,
		unlock_hero = 39,
		all_hero_wear_equip = 40,
		all_hero_unlock_fashion = 41,
		all_hero_wear_chuanshi_equip = 42,
		all_hero_wear_dictate = 43,
		all_hero_wear_fit_holy_equip = 44,
		active_fit_skill = 45,
		all_hero_wear_ring = 46,
		active_pet = 47,
		continuous_sign = 48,
		first_recharge = 49,
		buy_seven_investment = 50,
		add_guild = 51,
		become_guild_president = 52,
		become_guild_vice_president = 53,
		become_guild_elders = 54,
		pet_appendage = 60,
		privilege_open = 61,
		level_between = 62,
		recover = 100,
		kill_small_monster = 200,
		learn_to_wear_skill = 201,
		wear_equip = 202,
		qianghua_equip = 204,
		challenge_stage = 205,
		upgrade_skill = 206,
		tiao_zhan_shen_yi_fu_ben = 207,
		upgrade_shen_yi_1 = 208,
		upgrade_shen_yi_2 = 209,
		unlock_second_hero = 210,
		unlock_three_hero = 211,
		challenge_oneTime_ge_ren_boss = 212,
		activate_tu_jian = 213,
		challenge_jin_yan_fu_ben = 214,
		upgrade_vip_lv = 215,
		challenge_vip_boss = 216,
		he_cheng_lin_dan = 217,
		use_lin_dan = 218,
		kill_ye_wai_boss = 219,
		xiang_qian_bao_shi = 220,
		xiang_qian_bao_shi_1 = 221,
		challenge_jin_ji_chang = 222,
		get_daily_task = 223,
		xiu_lian_nei_gong = 224,
		xiu_lian_nei_gong_1 = 225,
		upgrade_shen_bin = 226,
		upgrade_shen_bin_1 = 227,
		go_to_wa_kuang = 228,
		activate_zhan_chong = 229,
		upgrade_zhan_chong = 230,
		upgrade_zhan_chong_1 = 231,
		upgrade_guan_xian = 232,
		get_one_time_cheng_jiu_award = 233,
		kill_shou_lin = 234,
		upgrade_equip = 235,
		second_hero_wear_skill = 236,
		third_hero_wear_skill = 237,
		wear_tu_jian = 238,
		all_heros_wear_assign_equip = 239,
		all_heros_qiang_hua_lv = 240,
		upgrade_nei_gong = 241,
		npc_chat = 242,
		elf_lv = 243,
		holyarms_grade = 244,
		atlas_star = 245,
		challenge_qiang_hua_fu_ben = 246,
		upgrade_jin_lin_lv = 247,
		upgrade_shen_shou = 248,
		upgrade_sheng_dao_skill = 249,
		two_dictate_grade = 250,
		three_dictate_grade = 251,
		three_wing_grade = 252,
		two_inside_grade = 253,
		three_inside_grade = 254,
		strengthen_lv = 255,
		two_wing = 256,
		three_wing = 257,
		kill_unknown_boss = 258,
		daily_task_liveness = 259,
		challenge_field_leader = 260,
		an_dian_leader = 261,
		dabao_equip_grade = 262,
		tian_fu_allLv = 263,
		tou_xian_lv = 264,
		dao_bao_shen_qi_allLv = 265,
		active_yuan_gu_skill_num = 266,
		chuan_si_qiang_hua_allLv = 267,
		level_max_limit = 268,
		all_kill_user = 600,
		all_hero_dragon_equip_grade = 601,
		ring_strengthen_lv = 602,
		holyarms_up_grade = 603,
		juexue_up_lv = 604,
		all_hero_area_up_lv = 605,
		all_hero_magicCircle_up_star = 606,
		all_hero_holy_beast_up_star = 607,
		competive_win = 608,
		all_skill_up_lv = 609,
		pet_up_lv = 610,
		pet_up_grade = 611,
		active_jue_xue_skill = 612,
		wear_chuan_shi_equip = 613,
		zhan_chong_all_lv = 614,
		dao_bao_mi_jin_boss_kill_nums = 615,
		competive_all_win = 617,
		xiang_qian_bao_shi_max_lv = 618,
		pet_up_break = 619,
		kill_stage_monster = 620,
		all_online = 1011,
		all_card_activity = 1021,
		all_treasure = 1031,
		all_recharge_day = 1041,
		all_buy_open_gift = 1051,
		all_competive_win = 1061,
		all_kill_worldleader = 1071,
		all_kill_ancient_boss = 1081,
		all_finish_daily_task = 1091,
		all_daily_task_liveness = 1101,
		all_finish_copy = 1111,
		all_sign = 1121,
		all_kill_monster = 1002,
		one_equip_intensify_max_lv = 1003,
		all_kill_stage = 1012,
		three_inside_chong = 1131,
		xiao_jin_lin_up_lv = 1141,
		te_jie_qiang_hua_times = 1151,
		tiao_zhan_an_dian_boss = 1161,
		tiao_zhan_yuan_gu_boss = 1171,
		consume_gold = 1181,
		join_guild = 1191,
		kill_boss_num = 1201,
		kill_monster_num = 1211,
		recharge_daily = 1221,
		
	}
}


declare module pb {
	export const enum AchievementType {
		cheng_jiu_zhu_xian_ren_wu = 1,
		cheng_jiu_hero_lv = 2,
		cheng_jiu_kill_boss_num = 3,
		cheng_jiu_equip_max_lv = 4,
		cheng_jiu_monster_kill_num = 5,
		cheng_jiu_competitve_win_num = 6,
		cheng_jiu_get_assist_num = 7,
		
	}
}


declare module pb {
	export const enum ConditionType {
		all = 1,
		justOne = 2,
		
	}
}


declare module pb {
	export const enum ItemColor {
		WHITE = 1,
		GREEN = 2,
		BLUE = 3,
		PURPLE = 4,
		YELLOW = 5,
		RED = 6,
		BLACK = 7,
		
	}
}


declare module pb {
	export const enum DisplayType {
		EQUIP = 0,
		FASHION = 1,
		
	}
}


declare module pb {
	export const enum FunctionId {
		SHOP_OPEN = 108,
		FIELD_FIGHT = 115,
		WING_OPEN = 134,
		WORLD_LEADER = 161,
		ELF_OPEN = 164,
		OPEN_GIFT_OPEN = 271,
		TREASURE_SHOP = 284,
		
	}
}


declare module pb {
	export const enum ZodiacType {
		RAT = 1,
		OX = 2,
		TIGER = 3,
		RABBIT = 4,
		DRAGON = 5,
		SNAKE = 6,
		HORSE = 7,
		SHEEP = 8,
		MONKEY = 9,
		ROOSTER = 10,
		DOG = 11,
		PIG = 12,
		
	}
}


declare module pb {
	export const enum KingarmsType {
		SHENYU = 1,
		CANBAO = 2,
		BAOJI = 3,
		QINGYU = 4,
		XUENIU = 5,
		HUIMIE = 6,
		CHUANCHENG = 7,
		SHENLI = 8,
		
	}
}


declare module pb {
	export const enum SkillPos {
		one = 1,
		two = 2,
		three = 3,
		four = 4,
		five = 5,
		six = 6,
		
	}
}


declare module pb {
	export const enum SkillType {
		ORDINARY = 1,
		ACTIVE = 2,
		PASSIVE = 3,
		Unique = 4,
		PASSIVE2 = 5,
		
	}
}


declare module pb {
	export const enum SkillEffectType {
		attack = 1,
		treat = 2,
		
	}
}


declare module pb {
	export const enum UniqueSkillPos {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		
	}
}


declare module pb {
	export const enum DragonarmsType {
		DOULI = 1,
		DUNPAI = 2,
		XUNZHANG = 3,
		HUFU = 4,
		LONGXIN = 5,
		
	}
}


declare module pb {
	export const enum FightModel {
		PEACE = 0,
		WHOLE = 1,
		
	}
}


declare module pb {
	export const enum BlessType {
		SUCCESS = 1,
		FAIL = 2,
		INVALID = 3,
		
	}
}


declare module pb {
	export const enum SpecialEquipType {
		ZODIAC = 1,
		DRAGONARMS = 2,
		KINGARMS = 3,
		
	}
}


declare module pb {
	export const enum DictateType {
		WUQI = 1,
		KAIJIA = 2,
		HUWANZUO = 3,
		JIEZHIZUO = 4,
		YAODAI = 5,
		TOUKUI = 6,
		XIANGLIAN = 7,
		HUWANYOU = 8,
		JIEZHIYOU = 9,
		XUEZI = 10,
		
	}
}


declare module pb {
	export const enum JewelPos {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		
	}
}


declare module pb {
	export const enum InsideType {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		FOUR = 4,
		
	}
}


declare module pb {
	export const enum InsideSkillType {
		ONE = 1,
		TWO = 2,
		
	}
}


declare module pb {
	export const enum RingPos {
		LEFT = 1,
		RIGHT = 2,
		
	}
}


declare module pb {
	export const enum RingPhantomPos {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		
	}
}


declare module pb {
	export const enum RingSkillId {
		ONE = 1,
		TWO = 2,
		
	}
}


declare module pb {
	export const enum AreaType {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		FOUR = 4,
		FIVE = 5,
		SIX = 6,
		
	}
}


declare module pb {
	export const enum ResetType {
		SIGN = 1,
		MINING = 2,
		EXPSTAGE = 3,
		DARKPALACE = 4,
		COMPETITVE = 5,
		FIELDFIGHT = 6,
		FIELDBOSS = 7,
		PERSONBOSS = 8,
		VIPBOSS = 9,
		MATERIALSTAGE = 10,
		SHOP = 11,
		MonthCard = 12,
		DailyTask = 13,
		FirstRecharge = 14,
		DailyPack_Day = 15,
		DailyPack_Week = 16,
		WarOrder = 17,
		ONLINE = 18,
		DailyRank = 19,
		CARD = 20,
		TREASURE = 21,
		OPENDAY = 22,
		CONTRECHARGE = 23,
		WORLD_LEADER = 24,
		ANCIENTBOSS = 25,
		TREASURE_SHOP = 26,
		HELLBOSS = 27,
		LOTTERY = 28,
		TOWER = 29,
		LABEL = 30,
		RedPacketUseNums = 31,
		
	}
}


declare module pb {
	export const enum GuildPosition {
		HUIZHANG = 1,
		FUHUIZHANG = 2,
		ZHANGLAO = 3,
		CHENGYUAN = 4,
		
	}
}


declare module pb {
	export const enum ShopType {
		WEEK_LIMIT = 1,
		YUANBAO = 2,
		HONOR = 3,
		
	}
}


declare module pb {
	export const enum DailyActivityType {
		PAODIAN = 1,
		MAGIC_TOWER = 2,
		
	}
}


declare module pb {
	export const enum VipPrivilege {
		COMPETITVE_FREENUM = 1,
		COMPETITVE_BUYNUM = 2,
		FIELDFIGHT_FREENUM = 3,
		FIELDFIGHT_BUYNUM = 4,
		MINING_FREENUM = 5,
		MINING_BUYNUM = 6,
		SHOP_DISCOUNT = 7,
		EXPSTAGE_FIGHTNUM = 8,
		MATERIALSTAGE_FIGHTNUM = 9,
		DARKPALACE_FREENUM = 10,
		DARKPALACE_BUYNUM = 11,
		FIELDBOSS_FREENUM = 12,
		FIELDBOSS_BUYNUM = 13,
		CHAT_FONT = 14,
		TITLE = 15,
		ATTR = 16,
		quickPick = 17,
		HANGUP_EXP = 18,
		EQUIP_RECOVERY = 19,
		AUCTION_SERVICE_CHARGE = 20,
		DAILYTASK_RESOURCES_BACK = 21,
		COMPETITVE_DAILY_REWARD = 22,
		EXPSTAGE = 23,
		REVIVE_FREENUM = 24,
		EQUIP_STRENGTH_AUTO_UP_LV = 25,
		EQUIP_STRENGTH_AUTO_BREAK = 26,
		COPY_SWEEP = 27,
		COMPETITVE_MULTIPLE_GET = 28,
		INSIDE_AUTO_UP = 29,
		CUTTREASURE_AUTO = 30,
		EQUIP_RECOVER_AUTO = 31,
		ELF_FEED_AUTO = 32,
		NEI_GONG_TEN_LEVEL = 33,
		GJ_AUTO_FIGHT_BOSS = 34,
		CUTTREASURE_RESET_CD = 35,
		HELLBOSS_FREENUM = 36,
		HELLBOSS_BUYNUM = 37,
		ANCIENT_BOSS_FREENUM = 38,
		ANCIENT_BOSS_BUYNUM = 39,
		RED_PACKET_GET_NUM = 40,
		STRIKE_BACK = 41,
		ELF_RECOVER_LIMIT_ADD = 42,
		
	}
}


declare module pb {
	export const enum DailyTaskActivityType {
		JING_YAN_FU_BEN = 1,
		KUANG_DONG_ZHENG_DUO = 2,
		JING_JI_CHANG = 3,
		YE_ZHAN = 4,
		YU_YI_FU_BEN = 5,
		JIN_BI_FU_BEN = 6,
		TONG_TIAN_TA = 7,
		GUA_JI_BOSS = 8,
		DUO_REN_AN_DIAN_BOSS = 9,
		DUO_REN_YE_WAI_BOSS = 10,
		GE_REN_BOSS = 11,
		VIP_GE_REN_BOSS = 12,
		GONG_HUI_GOU_HUO = 13,
		QIANG_HUA_FU_BEN = 14,
		
	}
}


declare module pb {
	export const enum MonthCardStatus {
		OPEN = 1,
		CLOSE = 2,
		
	}
}


declare module pb {
	export const enum MonthCardType {
		SLIVER = 1,
		GOLD = 2,
		
	}
}


declare module pb {
	export const enum MaterialStageType {
		WING = 1,
		GOLD = 2,
		STRENGTH = 3,
		FASHION = 4,
		
	}
}


declare module pb {
	export const enum FitSkillType {
		ZHUDONG = 1,
		BEIDONG = 2,
		
	}
}


declare module pb {
	export const enum ComposeType {
		ITEM = 1,
		EQUIP = 2,
		
	}
}


declare module pb {
	export const enum LimitedGiftType {
		INSIDE = 1,
		JEWEL = 2,
		LEVEL = 3,
		PET = 4,
		STRENGTH = 5,
		DICTATE = 6,
		FASHION = 7,
		REIN = 8,
		
	}
}


declare module pb {
	export const enum LimitedGiftBuyType {
		INGOT = 1,
		MONEY = 2,
		
	}
}


declare module pb {
	export const enum LimitedGiftGradeStatus {
		UP = 1,
		DOWN = 2,
		KEEP = 3,
		
	}
}


declare module pb {
	export const enum LimitedGiftGrade {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		FOUR = 4,
		FIVE = 5,
		
	}
}


declare module pb {
	export const enum DailyPackType {
		DAY = 1,
		WEEK = 2,
		
	}
}


declare module pb {
	export const enum WarOrderCondition {
		KILL_MONSTER = 1,
		WEEK_LOGIN_DAY = 2,
		BUY_SHOP_GOODS = 3,
		AUCTION_SELL = 4,
		AUCTION_BUY = 5,
		COMPLETE_COPY = 6,
		COMPETIVE_NUM = 7,
		SHABAKE_NUM = 8,
		PAODIAN_NUM = 9,
		FIELDFIGHT_NUM = 10,
		MINING_NUM = 11,
		GUILDBONFIRE_NUM = 12,
		GET_ITEM = 13,
		KILL_MONSTERAI_ONE = 14,
		KILL_MONSTERAI_TWO = 15,
		KILL_USER = 16,
		ONLINE = 17,
		
	}
}


declare module pb {
	export const enum ElfSkillPos {
		One = 1,
		Two = 2,
		Three = 3,
		
	}
}


declare module pb {
	export const enum TreasureType {
		One = 1,
		Two = 2,
		Three = 3,
		Four = 4,
		OneRoundTimes = 12,
		
	}
}


declare module pb {
	export const enum HolyBeastType {
		ZHUQUE = 1,
		XUANWU = 2,
		QINGLONG = 3,
		BAIHU = 4,
		
	}
}


declare module pb {
	export const enum FitHolyEquipPos {
		ONE = 1,
		TWO = 2,
		THREE = 3,
		FOUR = 4,
		FIVE = 5,
		SIX = 6,
		SEVEN = 7,
		EIGHT = 8,
		NINE = 9,
		TEN = 10,
		
	}
}


declare module pb {
	export const enum MoneyPayType {
		VIP = 1,
		LIMITED_GIFT = 2,
		WARORDER_LUXURY = 3,
		RECHARGE = 4,
		WARORDER_EXP = 5,
		DAILY_PACK = 6,
		GROW_FUND = 7,
		MONTH_CARD = 8,
		TREASURE = 9,
		DAILYRANKBUYGIFT = 10,
		SEVENINVESTMENT = 11,
		OPEN_GIFT = 12,
		FIRST_RECHARGE = 13,
		
	}
}


declare module pb {
	export const enum FunctionType {
		BAG = 1,
		FABAO = 2,
		WING = 3,
		REIN = 4,
		ATLAS = 5,
		MATERIAL = 6,
		ARENA = 7,
		ARENAROLL = 8,
		
	}
}


declare module pb {
	export const enum GuildBrocastType {
		kickUser = 1,
		delGuild = 2,
		tanHeHuiZhang = 3,
		applyUser = 4,
		zhuanRangHuiZhang = 5,
		applyQuit = 6,
		chuLiShenQingUser = 7,
		autoChuLiShenQingUser = 8,
		JoinGuild = 9,
		
	}
}


declare module pb {
	export const enum RedPointType {
		OwnGuildAuctionHaveItems = 1,
		OwnGuildAuctionNoItems = 2,
		UpItemSold = 3,
		UpItemBeBid = 4,
		
	}
}


declare module pb {
	export const enum RedPointState {
		Bright = 1,
		NoBright = 0,
		
	}
}


declare module pb {
	export const enum IsBagFullState {
		NotFull = 0,
		Full = 1,
		
	}
}


declare module pb {
	export const enum ChuanShiPos {
		WuQi = 1,
		YiFu = 2,
		TouKui = 3,
		XiangLian = 4,
		ZuoShouZhuo = 5,
		YouShouZhuo = 6,
		ZuoJieZhi = 7,
		YouJieZhi = 8,
		YaoDai = 9,
		XieZi = 10,
		
	}
}


declare module pb {
	export const enum AuctionErrCode {
		upOk = 1,
		errDb = 2,
		errCfg = 3,
		errNoItem = 4,
		errCanNotUp = 5,
		errNotInPeriod = 6,
		errLimitDaily = 7,
		errTogetherLimit = 8,
		errUpCount = 9,
		errSetPrice = 10,
		errOverCount = 11,
		
	}
}


declare module pb {
	export const enum ScrolingType {
		jiHuoBaiYingKa = 1,
		jiHuoBaiHuangJinKa = 2,
		gouMaiZhanLin = 3,
		gouMaiQiRiTouZhi = 4,
		chouka = 5,
		killGet = 6,
		shabakeBegin = 7,
		anDianBossDrop = 8,
		worldLeaderOpen = 9,
		kaiFuBuy = 10,
		lianChongHaoLi = 11,
		fightHelp = 12,
		lottery = 13,
		ancientBoss = 14,
		hellBoss = 15,
		daBao = 16,
		shabakeGate = 17,
		huangcheng = 18,
		privilegeOpen = 19,
		killMonster = 20,
		
	}
}


declare module pb {
	export const enum DailyPackBuyType {
		INGOT = 1,
		MONEY = 2,
		
	}
}


declare module pb {
	export const enum ConditionAttributeType {
		StrengthenLink = 1,
		AncientTreasureStar = 2,
		AncientTreasureJueXing = 3,
		AncientTreasureTaoZhuang = 4,
		
	}
}


declare module pb {
	export const enum ChuanShiStrengthenStone {
		LUCK = 1,
		PROTECT = 2,
		RISE = 3,
		
	}
}


declare module pb {
	export const enum AppletsType {
		Pursuit = 1,
		Bow = 2,
		Number = 3,
		
	}
}


declare module pb {
	export const enum LabelType {
		civil_service = 1,
		military_general = 2,
		
	}
}


declare module pb {
	export const enum Subscribe {
		HOOK = 1,
		
	}
}



declare module pb {
	export interface MessageHandler {
		onRecvMessage?(cmdId: number, data: pb.ProtoBufModel, transId: number): boolean; // return true代表不需要路由到handler
		
		onErrorAck?(data: pb.ErrorAck, transId: number): void; // 1
		onPingReq?(data: pb.PingReq, transId: number): void; // 2
		onPingAck?(data: pb.PingAck, transId: number): void; // 3
		onTopDataChangeNtf?(data: pb.TopDataChangeNtf, transId: number): void; // 10
		onBagDataChangeNtf?(data: pb.BagDataChangeNtf, transId: number): void; // 11
		onBagEquipDataChangeNtf?(data: pb.BagEquipDataChangeNtf, transId: number): void; // 12
		onDebugAddGoodsReq?(data: pb.DebugAddGoodsReq, transId: number): void; // 98
		onDebugAddGoodsAck?(data: pb.DebugAddGoodsAck, transId: number): void; // 99
		onEnterGameReq?(data: pb.EnterGameReq, transId: number): void; // 100
		onEnterGameAck?(data: pb.EnterGameAck, transId: number): void; // 101
		onCreateUserReq?(data: pb.CreateUserReq, transId: number): void; // 102
		onCreateUserAck?(data: pb.CreateUserAck, transId: number): void; // 103
		onKickUserNtf?(data: pb.KickUserNtf, transId: number): void; // 104
		onUserPropertyNtf?(data: pb.UserPropertyNtf, transId: number): void; // 105
		onCreateHeroReq?(data: pb.CreateHeroReq, transId: number): void; // 106
		onCreateHeroAck?(data: pb.CreateHeroAck, transId: number): void; // 107
		onPreferenceSetReq?(data: pb.PreferenceSetReq, transId: number): void; // 108
		onPreferenceSetAck?(data: pb.PreferenceSetAck, transId: number): void; // 109
		onPreferenceLoadReq?(data: pb.PreferenceLoadReq, transId: number): void; // 110
		onPreferenceLoadAck?(data: pb.PreferenceLoadAck, transId: number): void; // 111
		onRandNameReq?(data: pb.RandNameReq, transId: number): void; // 112
		onRandNameAck?(data: pb.RandNameAck, transId: number): void; // 113
		onDisplayNtf?(data: pb.DisplayNtf, transId: number): void; // 114
		onChangeFightModelReq?(data: pb.ChangeFightModelReq, transId: number): void; // 115
		onChangeFightModelAck?(data: pb.ChangeFightModelAck, transId: number): void; // 116
		onResetNtf?(data: pb.ResetNtf, transId: number): void; // 117
		onCrossFightOpenNtf?(data: pb.CrossFightOpenNtf, transId: number): void; // 118
		onChangeHeroNameReq?(data: pb.ChangeHeroNameReq, transId: number): void; // 119
		onChangeHeroNameAck?(data: pb.ChangeHeroNameAck, transId: number): void; // 120
		onUserRechargeNumNtf?(data: pb.UserRechargeNumNtf, transId: number): void; // 121
		onRechargFulfilledNtf?(data: pb.RechargFulfilledNtf, transId: number): void; // 122
		onRechargeApplyPayReq?(data: pb.RechargeApplyPayReq, transId: number): void; // 123
		onRechargeApplyPayAck?(data: pb.RechargeApplyPayAck, transId: number): void; // 124
		onUserRedPacketGetNumNtf?(data: pb.UserRedPacketGetNumNtf, transId: number): void; // 125
		onUserOnlineNtf?(data: pb.UserOnlineNtf, transId: number): void; // 126
		onUserOffLineNtf?(data: pb.UserOffLineNtf, transId: number): void; // 127
		onMoneyPayReq?(data: pb.MoneyPayReq, transId: number): void; // 128
		onMoneyPayAck?(data: pb.MoneyPayAck, transId: number): void; // 129
		onFuncStateCloseNtf?(data: pb.FuncStateCloseNtf, transId: number): void; // 130
		onUserInGameOkReq?(data: pb.UserInGameOkReq, transId: number): void; // 131
		onUserSubscribeReq?(data: pb.UserSubscribeReq, transId: number): void; // 132
		onUserSubscribeAck?(data: pb.UserSubscribeAck, transId: number): void; // 133
		onBagInfoReq?(data: pb.BagInfoReq, transId: number): void; // 200
		onBagInfoNtf?(data: pb.BagInfoNtf, transId: number): void; // 201
		onBagSpaceAddReq?(data: pb.BagSpaceAddReq, transId: number): void; // 202
		onBagSpaceAddAck?(data: pb.BagSpaceAddAck, transId: number): void; // 203
		onBagSortReq?(data: pb.BagSortReq, transId: number): void; // 204
		onBagSortAck?(data: pb.BagSortAck, transId: number): void; // 205
		onGiftUseReq?(data: pb.GiftUseReq, transId: number): void; // 206
		onGiftUseAck?(data: pb.GiftUseAck, transId: number): void; // 207
		onEquipRecoverReq?(data: pb.EquipRecoverReq, transId: number): void; // 208
		onEquipRecoverAck?(data: pb.EquipRecoverAck, transId: number): void; // 209
		onItemUseReq?(data: pb.ItemUseReq, transId: number): void; // 210
		onItemUseAck?(data: pb.ItemUseAck, transId: number): void; // 211
		onEquipDestroyReq?(data: pb.EquipDestroyReq, transId: number): void; // 212
		onEquipDestroyAck?(data: pb.EquipDestroyAck, transId: number): void; // 213
		onEquipChangeReq?(data: pb.EquipChangeReq, transId: number): void; // 220
		onEquipChangeAck?(data: pb.EquipChangeAck, transId: number): void; // 221
		onEquipLockReq?(data: pb.EquipLockReq, transId: number): void; // 222
		onEquipLockAck?(data: pb.EquipLockAck, transId: number): void; // 223
		onEquipRemoveReq?(data: pb.EquipRemoveReq, transId: number): void; // 224
		onEquipRemoveAck?(data: pb.EquipRemoveAck, transId: number): void; // 225
		onEquipStrengthenReq?(data: pb.EquipStrengthenReq, transId: number): void; // 230
		onEquipStrengthenAck?(data: pb.EquipStrengthenAck, transId: number): void; // 231
		onEquipBlessNtf?(data: pb.EquipBlessNtf, transId: number): void; // 232
		onEquipStrengthenAutoReq?(data: pb.EquipStrengthenAutoReq, transId: number): void; // 233
		onEquipStrengthenAutoAck?(data: pb.EquipStrengthenAutoAck, transId: number): void; // 234
		onFabaoActiveReq?(data: pb.FabaoActiveReq, transId: number): void; // 260
		onFabaoActiveAck?(data: pb.FabaoActiveAck, transId: number): void; // 261
		onFabaoUpLevelReq?(data: pb.FabaoUpLevelReq, transId: number): void; // 262
		onFabaoUpLevelAck?(data: pb.FabaoUpLevelAck, transId: number): void; // 263
		onFabaoSkillActiveReq?(data: pb.FabaoSkillActiveReq, transId: number): void; // 264
		onFabaoSkillActiveAck?(data: pb.FabaoSkillActiveAck, transId: number): void; // 265
		onWingUpLevelReq?(data: pb.WingUpLevelReq, transId: number): void; // 280
		onWingUpLevelAck?(data: pb.WingUpLevelAck, transId: number): void; // 281
		onWingSpecialUpReq?(data: pb.WingSpecialUpReq, transId: number): void; // 282
		onWingSpecialUpAck?(data: pb.WingSpecialUpAck, transId: number): void; // 283
		onWingSpecialNtf?(data: pb.WingSpecialNtf, transId: number): void; // 284
		onWingUseMaterialReq?(data: pb.WingUseMaterialReq, transId: number): void; // 285
		onWingUseMaterialAck?(data: pb.WingUseMaterialAck, transId: number): void; // 286
		onWingWearReq?(data: pb.WingWearReq, transId: number): void; // 287
		onWingWearAck?(data: pb.WingWearAck, transId: number): void; // 288
		onStageFightStartReq?(data: pb.StageFightStartReq, transId: number): void; // 300
		onStageFightStartAck?(data: pb.StageFightStartAck, transId: number): void; // 301
		onStageFightEndReq?(data: pb.StageFightEndReq, transId: number): void; // 302
		onStageFightEndNtf?(data: pb.StageFightEndNtf, transId: number): void; // 303
		onLeaveFightReq?(data: pb.LeaveFightReq, transId: number): void; // 304
		onLeaveFightAck?(data: pb.LeaveFightAck, transId: number): void; // 305
		onKillMonsterReq?(data: pb.KillMonsterReq, transId: number): void; // 306
		onKillMonsterAck?(data: pb.KillMonsterAck, transId: number): void; // 307
		onStartStageBossFightReq?(data: pb.StartStageBossFightReq, transId: number): void; // 308
		onStageBagChangeNtf?(data: pb.StageBagChangeNtf, transId: number): void; // 309
		onStageGetHookMapRewardReq?(data: pb.StageGetHookMapRewardReq, transId: number): void; // 310
		onStageGetHookMapRewardAck?(data: pb.StageGetHookMapRewardAck, transId: number): void; // 311
		onPersonBossLoadReq?(data: pb.PersonBossLoadReq, transId: number): void; // 320
		onPersonBossLoadAck?(data: pb.PersonBossLoadAck, transId: number): void; // 321
		onEnterPersonBossFightReq?(data: pb.EnterPersonBossFightReq, transId: number): void; // 322
		onPersonBossFightResultNtf?(data: pb.PersonBossFightResultNtf, transId: number): void; // 323
		onEnterPersonBossFightAck?(data: pb.EnterPersonBossFightAck, transId: number): void; // 324
		onPersonBossSweepReq?(data: pb.PersonBossSweepReq, transId: number): void; // 325
		onPersonBossSweepAck?(data: pb.PersonBossSweepAck, transId: number): void; // 326
		onPersonBossDareNumNtf?(data: pb.PersonBossDareNumNtf, transId: number): void; // 327
		onHolyActiveReq?(data: pb.HolyActiveReq, transId: number): void; // 330
		onHolyActiveAck?(data: pb.HolyActiveAck, transId: number): void; // 331
		onHolyUpLevelReq?(data: pb.HolyUpLevelReq, transId: number): void; // 332
		onHolyUpLevelAck?(data: pb.HolyUpLevelAck, transId: number): void; // 333
		onHolySkillActiveReq?(data: pb.HolySkillActiveReq, transId: number): void; // 334
		onHolySkillActiveAck?(data: pb.HolySkillActiveAck, transId: number): void; // 335
		onHolySkillUpLvReq?(data: pb.HolySkillUpLvReq, transId: number): void; // 336
		onHolySkillUpLvAck?(data: pb.HolySkillUpLvAck, transId: number): void; // 337
		onMiningLoadReq?(data: pb.MiningLoadReq, transId: number): void; // 340
		onMiningLoadAck?(data: pb.MiningLoadAck, transId: number): void; // 341
		onMiningUpMinerReq?(data: pb.MiningUpMinerReq, transId: number): void; // 342
		onMiningUpMinerAck?(data: pb.MiningUpMinerAck, transId: number): void; // 343
		onMiningBuyNumReq?(data: pb.MiningBuyNumReq, transId: number): void; // 344
		onMiningBuyNumAck?(data: pb.MiningBuyNumAck, transId: number): void; // 345
		onMiningStartReq?(data: pb.MiningStartReq, transId: number): void; // 346
		onMiningStartAck?(data: pb.MiningStartAck, transId: number): void; // 347
		onMiningRobReq?(data: pb.MiningRobReq, transId: number): void; // 348
		onMiningRobAck?(data: pb.MiningRobAck, transId: number): void; // 349
		onMiningRobListReq?(data: pb.MiningRobListReq, transId: number): void; // 350
		onMiningRobListAck?(data: pb.MiningRobListAck, transId: number): void; // 351
		onMiningListReq?(data: pb.MiningListReq, transId: number): void; // 352
		onMiningListAck?(data: pb.MiningListAck, transId: number): void; // 353
		onMiningDrawLoadReq?(data: pb.MiningDrawLoadReq, transId: number): void; // 354
		onMiningDrawLoadAck?(data: pb.MiningDrawLoadAck, transId: number): void; // 355
		onMiningDrawReq?(data: pb.MiningDrawReq, transId: number): void; // 356
		onMiningDrawAck?(data: pb.MiningDrawAck, transId: number): void; // 357
		onMiningRobBackReq?(data: pb.MiningRobBackReq, transId: number): void; // 358
		onMiningRobBackAck?(data: pb.MiningRobBackAck, transId: number): void; // 359
		onMiningInReq?(data: pb.MiningInReq, transId: number): void; // 360
		onMiningRobFightAck?(data: pb.MiningRobFightAck, transId: number): void; // 361
		onMiningRobBackFightAck?(data: pb.MiningRobBackFightAck, transId: number): void; // 362
		onMiningInAck?(data: pb.MiningInAck, transId: number): void; // 363
		onAreaUpLvReq?(data: pb.AreaUpLvReq, transId: number): void; // 370
		onAreaUpLvAck?(data: pb.AreaUpLvAck, transId: number): void; // 371
		onReinActiveReq?(data: pb.ReinActiveReq, transId: number): void; // 380
		onReinActiveAck?(data: pb.ReinActiveAck, transId: number): void; // 381
		onReincarnationReq?(data: pb.ReincarnationReq, transId: number): void; // 382
		onReincarnationAck?(data: pb.ReincarnationAck, transId: number): void; // 383
		onReinCostBuyReq?(data: pb.ReinCostBuyReq, transId: number): void; // 384
		onReinCostBuyAck?(data: pb.ReinCostBuyAck, transId: number): void; // 385
		onReinCostUseReq?(data: pb.ReinCostUseReq, transId: number): void; // 386
		onReinCostUseAck?(data: pb.ReinCostUseAck, transId: number): void; // 387
		onReinCostBuyNumRefNtf?(data: pb.ReinCostBuyNumRefNtf, transId: number): void; // 388
		onShopListReq?(data: pb.ShopListReq, transId: number): void; // 400
		onShopListAck?(data: pb.ShopListAck, transId: number): void; // 401
		onShopBuyReq?(data: pb.ShopBuyReq, transId: number): void; // 402
		onShopBuyAck?(data: pb.ShopBuyAck, transId: number): void; // 403
		onShopWeekResetNtf?(data: pb.ShopWeekResetNtf, transId: number): void; // 404
		onTowerRankRewardReq?(data: pb.TowerRankRewardReq, transId: number): void; // 411
		onTowerRankRewardAck?(data: pb.TowerRankRewardAck, transId: number): void; // 412
		onTowerSweepReq?(data: pb.TowerSweepReq, transId: number): void; // 416
		onTowerSweepAck?(data: pb.TowerSweepAck, transId: number): void; // 417
		onOpenTowerReq?(data: pb.OpenTowerReq, transId: number): void; // 420
		onOpenTowerAck?(data: pb.OpenTowerAck, transId: number): void; // 421
		onEnterTowerFightReq?(data: pb.EnterTowerFightReq, transId: number): void; // 422
		onTowerFightResultNtf?(data: pb.TowerFightResultNtf, transId: number): void; // 423
		onTowerFightContinueReq?(data: pb.TowerFightContinueReq, transId: number): void; // 424
		onToweryDayAwardReq?(data: pb.ToweryDayAwardReq, transId: number): void; // 425
		onToweryDayAwardAck?(data: pb.ToweryDayAwardAck, transId: number): void; // 426
		onTowerLotteryReq?(data: pb.TowerLotteryReq, transId: number): void; // 427
		onTowerLotteryAck?(data: pb.TowerLotteryAck, transId: number): void; // 428
		onTowerLvNtf?(data: pb.TowerLvNtf, transId: number): void; // 429
		onAtlasActiveReq?(data: pb.AtlasActiveReq, transId: number): void; // 430
		onAtlasActiveAck?(data: pb.AtlasActiveAck, transId: number): void; // 431
		onAtlasUpStarReq?(data: pb.AtlasUpStarReq, transId: number): void; // 432
		onAtlasUpStarAck?(data: pb.AtlasUpStarAck, transId: number): void; // 433
		onAtlasGatherActiveReq?(data: pb.AtlasGatherActiveReq, transId: number): void; // 434
		onAtlasGatherActiveAck?(data: pb.AtlasGatherActiveAck, transId: number): void; // 435
		onAtlasGatherUpStarReq?(data: pb.AtlasGatherUpStarReq, transId: number): void; // 446
		onAtlasGatherUpStarAck?(data: pb.AtlasGatherUpStarAck, transId: number): void; // 447
		onAtlasWearChangeReq?(data: pb.AtlasWearChangeReq, transId: number): void; // 448
		onAtlasWearChangeAck?(data: pb.AtlasWearChangeAck, transId: number): void; // 449
		onFieldBossLoadReq?(data: pb.FieldBossLoadReq, transId: number): void; // 450
		onFieldBossLoadAck?(data: pb.FieldBossLoadAck, transId: number): void; // 451
		onEnterFieldBossFightReq?(data: pb.EnterFieldBossFightReq, transId: number): void; // 452
		onFieldBossFightResultNtf?(data: pb.FieldBossFightResultNtf, transId: number): void; // 453
		onFieldBossBuyNumReq?(data: pb.FieldBossBuyNumReq, transId: number): void; // 454
		onFieldBossBuyNumAck?(data: pb.FieldBossBuyNumAck, transId: number): void; // 455
		onFieldBossNtf?(data: pb.FieldBossNtf, transId: number): void; // 456
		onEnterFieldBossFightAck?(data: pb.EnterFieldBossFightAck, transId: number): void; // 457
		onBeatBackInfoNtf?(data: pb.BeatBackInfoNtf, transId: number): void; // 458
		onFieldBossFirstReq?(data: pb.FieldBossFirstReq, transId: number): void; // 459
		onFieldBossFirstAck?(data: pb.FieldBossFirstAck, transId: number): void; // 460
		onEnterWorldBossFightReq?(data: pb.EnterWorldBossFightReq, transId: number): void; // 470
		onWorldBossFightResultNtf?(data: pb.WorldBossFightResultNtf, transId: number): void; // 471
		onWorldBossInfoNtf?(data: pb.WorldBossInfoNtf, transId: number): void; // 472
		onMaterialStageLoadReq?(data: pb.MaterialStageLoadReq, transId: number): void; // 490
		onMaterialStageLoadAck?(data: pb.MaterialStageLoadAck, transId: number): void; // 491
		onEnterMaterialStageFightReq?(data: pb.EnterMaterialStageFightReq, transId: number): void; // 492
		onMaterialStageFightResultNtf?(data: pb.MaterialStageFightResultNtf, transId: number): void; // 493
		onMaterialStageSweepReq?(data: pb.MaterialStageSweepReq, transId: number): void; // 494
		onMaterialStageSweepAck?(data: pb.MaterialStageSweepAck, transId: number): void; // 495
		onMaterialStageBuyNumNtf?(data: pb.MaterialStageBuyNumNtf, transId: number): void; // 496
		onMaterialStageBuyNumReq?(data: pb.MaterialStageBuyNumReq, transId: number): void; // 497
		onMaterialStageBuyNumAck?(data: pb.MaterialStageBuyNumAck, transId: number): void; // 498
		onVipBossLoadReq?(data: pb.VipBossLoadReq, transId: number): void; // 510
		onVipBossLoadAck?(data: pb.VipBossLoadAck, transId: number): void; // 511
		onEnterVipBossFightReq?(data: pb.EnterVipBossFightReq, transId: number): void; // 512
		onVipBossFightResultNtf?(data: pb.VipBossFightResultNtf, transId: number): void; // 513
		onEnterVipBossFightAck?(data: pb.EnterVipBossFightAck, transId: number): void; // 514
		onVipBossSweepReq?(data: pb.VipBossSweepReq, transId: number): void; // 515
		onVipBossSweepAck?(data: pb.VipBossSweepAck, transId: number): void; // 516
		onVipBossDareNumNtf?(data: pb.VipBossDareNumNtf, transId: number): void; // 517
		onExpStageFightReq?(data: pb.ExpStageFightReq, transId: number): void; // 530
		onExpStageDareNumNtf?(data: pb.ExpStageDareNumNtf, transId: number): void; // 531
		onExpStageFightResultNtf?(data: pb.ExpStageFightResultNtf, transId: number): void; // 532
		onExpStageDoubleReq?(data: pb.ExpStageDoubleReq, transId: number): void; // 533
		onExpStageDoubleAck?(data: pb.ExpStageDoubleAck, transId: number): void; // 534
		onExpStageRefNtf?(data: pb.ExpStageRefNtf, transId: number): void; // 535
		onExpStageBuyNumNtf?(data: pb.ExpStageBuyNumNtf, transId: number): void; // 536
		onExpStageSweepReq?(data: pb.ExpStageSweepReq, transId: number): void; // 537
		onExpStageSweepAck?(data: pb.ExpStageSweepAck, transId: number): void; // 538
		onExpStageBuyNumReq?(data: pb.ExpStageBuyNumReq, transId: number): void; // 539
		onExpStageBuyNumAck?(data: pb.ExpStageBuyNumAck, transId: number): void; // 540
		onArenaOpenReq?(data: pb.ArenaOpenReq, transId: number): void; // 550
		onArenaOpenAck?(data: pb.ArenaOpenAck, transId: number): void; // 551
		onEnterArenaFightReq?(data: pb.EnterArenaFightReq, transId: number): void; // 552
		onArenaFightNtf?(data: pb.ArenaFightNtf, transId: number): void; // 553
		onBuyArenaFightNumReq?(data: pb.BuyArenaFightNumReq, transId: number): void; // 556
		onBuyArenaFightNumAck?(data: pb.BuyArenaFightNumAck, transId: number): void; // 557
		onRefArenaRankReq?(data: pb.RefArenaRankReq, transId: number): void; // 558
		onRefArenaRankAck?(data: pb.RefArenaRankAck, transId: number): void; // 559
		onDragonEquipUpLvReq?(data: pb.DragonEquipUpLvReq, transId: number): void; // 570
		onDragonEquipUpLvAck?(data: pb.DragonEquipUpLvAck, transId: number): void; // 571
		onSpecialEquipChangeReq?(data: pb.SpecialEquipChangeReq, transId: number): void; // 580
		onSpecialEquipChangeAck?(data: pb.SpecialEquipChangeAck, transId: number): void; // 581
		onSpecialEquipRemoveReq?(data: pb.SpecialEquipRemoveReq, transId: number): void; // 582
		onSpecialEquipRemoveAck?(data: pb.SpecialEquipRemoveAck, transId: number): void; // 583
		onDictateUpReq?(data: pb.DictateUpReq, transId: number): void; // 590
		onDictateUpAck?(data: pb.DictateUpAck, transId: number): void; // 591
		onPanaceaUseReq?(data: pb.PanaceaUseReq, transId: number): void; // 600
		onPanaceaUseAck?(data: pb.PanaceaUseAck, transId: number): void; // 601
		onSkillUpLvReq?(data: pb.SkillUpLvReq, transId: number): void; // 620
		onSkillUpLvAck?(data: pb.SkillUpLvAck, transId: number): void; // 621
		onSkillChangePosReq?(data: pb.SkillChangePosReq, transId: number): void; // 622
		onSkillChangePosAck?(data: pb.SkillChangePosAck, transId: number): void; // 623
		onSkillChangeWearReq?(data: pb.SkillChangeWearReq, transId: number): void; // 624
		onSkillChangeWearAck?(data: pb.SkillChangeWearAck, transId: number): void; // 625
		onSkillResetReq?(data: pb.SkillResetReq, transId: number): void; // 626
		onSkillResetAck?(data: pb.SkillResetAck, transId: number): void; // 627
		onSkillUseReq?(data: pb.SkillUseReq, transId: number): void; // 628
		onSkillUseNtf?(data: pb.SkillUseNtf, transId: number): void; // 629
		onClearSkillCdNtf?(data: pb.ClearSkillCdNtf, transId: number): void; // 630
		onComposeReq?(data: pb.ComposeReq, transId: number): void; // 640
		onComposeAck?(data: pb.ComposeAck, transId: number): void; // 641
		onComposeEquipReq?(data: pb.ComposeEquipReq, transId: number): void; // 642
		onComposeEquipAck?(data: pb.ComposeEquipAck, transId: number): void; // 643
		onComposeChuanShiEquipReq?(data: pb.ComposeChuanShiEquipReq, transId: number): void; // 644
		onComposeChuanShiEquipAck?(data: pb.ComposeChuanShiEquipAck, transId: number): void; // 645
		onMagicCircleUpLvReq?(data: pb.MagicCircleUpLvReq, transId: number): void; // 660
		onMagicCircleUpLvAck?(data: pb.MagicCircleUpLvAck, transId: number): void; // 661
		onMagicCircleChangeWearReq?(data: pb.MagicCircleChangeWearReq, transId: number): void; // 662
		onMagicCircleChangeWearAck?(data: pb.MagicCircleChangeWearAck, transId: number): void; // 663
		onClearReq?(data: pb.ClearReq, transId: number): void; // 670
		onClearAck?(data: pb.ClearAck, transId: number): void; // 671
		onJewelMakeReq?(data: pb.JewelMakeReq, transId: number): void; // 680
		onJewelMakeAck?(data: pb.JewelMakeAck, transId: number): void; // 681
		onJewelUpLvReq?(data: pb.JewelUpLvReq, transId: number): void; // 682
		onJewelUpLvAck?(data: pb.JewelUpLvAck, transId: number): void; // 683
		onJewelChangeReq?(data: pb.JewelChangeReq, transId: number): void; // 684
		onJewelChangeAck?(data: pb.JewelChangeAck, transId: number): void; // 685
		onJewelRemoveReq?(data: pb.JewelRemoveReq, transId: number): void; // 686
		onJewelRemoveAck?(data: pb.JewelRemoveAck, transId: number): void; // 687
		onJewelMakeAllReq?(data: pb.JewelMakeAllReq, transId: number): void; // 688
		onJewelMakeAllAck?(data: pb.JewelMakeAllAck, transId: number): void; // 689
		onSignReq?(data: pb.SignReq, transId: number): void; // 690
		onSignAck?(data: pb.SignAck, transId: number): void; // 691
		onSignRepairReq?(data: pb.SignRepairReq, transId: number): void; // 692
		onSignRepairAck?(data: pb.SignRepairAck, transId: number): void; // 693
		onCumulativeSignReq?(data: pb.CumulativeSignReq, transId: number): void; // 694
		onCumulativeSignAck?(data: pb.CumulativeSignAck, transId: number): void; // 695
		onSignResetNtf?(data: pb.SignResetNtf, transId: number): void; // 696
		onMailReadReq?(data: pb.MailReadReq, transId: number): void; // 710
		onMailReadAck?(data: pb.MailReadAck, transId: number): void; // 711
		onMailRedeemReq?(data: pb.MailRedeemReq, transId: number): void; // 712
		onMailRedeemAck?(data: pb.MailRedeemAck, transId: number): void; // 713
		onMailNtf?(data: pb.MailNtf, transId: number): void; // 714
		onMailLoadReq?(data: pb.MailLoadReq, transId: number): void; // 715
		onMailLoadAck?(data: pb.MailLoadAck, transId: number): void; // 716
		onMailRedeemAllReq?(data: pb.MailRedeemAllReq, transId: number): void; // 717
		onMailRedeemAllAck?(data: pb.MailRedeemAllAck, transId: number): void; // 718
		onMailDeleteReq?(data: pb.MailDeleteReq, transId: number): void; // 719
		onMailDeleteAck?(data: pb.MailDeleteAck, transId: number): void; // 720
		onMailDeleteAllReq?(data: pb.MailDeleteAllReq, transId: number): void; // 721
		onMailDeleteAllAck?(data: pb.MailDeleteAllAck, transId: number): void; // 722
		onRankLoadReq?(data: pb.RankLoadReq, transId: number): void; // 731
		onRankLoadAck?(data: pb.RankLoadAck, transId: number): void; // 732
		onRankWorshipReq?(data: pb.RankWorshipReq, transId: number): void; // 733
		onRankWorshipAck?(data: pb.RankWorshipAck, transId: number): void; // 734
		onChatMessageNtf?(data: pb.ChatMessageNtf, transId: number): void; // 751
		onChatMessageListReq?(data: pb.ChatMessageListReq, transId: number): void; // 752
		onChatMessageListAck?(data: pb.ChatMessageListAck, transId: number): void; // 753
		onChatSendReq?(data: pb.ChatSendReq, transId: number): void; // 754
		onChatSendAck?(data: pb.ChatSendAck, transId: number): void; // 755
		onChatBanNtf?(data: pb.ChatBanNtf, transId: number): void; // 756
		onChatBanRemoveNtf?(data: pb.ChatBanRemoveNtf, transId: number): void; // 757
		onInsideUpStarReq?(data: pb.InsideUpStarReq, transId: number): void; // 781
		onInsideUpStarAck?(data: pb.InsideUpStarAck, transId: number): void; // 782
		onInsideUpGradeReq?(data: pb.InsideUpGradeReq, transId: number): void; // 783
		onInsideUpGradeAck?(data: pb.InsideUpGradeAck, transId: number): void; // 784
		onInsideUpOrderReq?(data: pb.InsideUpOrderReq, transId: number): void; // 785
		onInsideUpOrderAck?(data: pb.InsideUpOrderAck, transId: number): void; // 786
		onInsideSkillUpLvReq?(data: pb.InsideSkillUpLvReq, transId: number): void; // 787
		onInsideSkillUpLvAck?(data: pb.InsideSkillUpLvAck, transId: number): void; // 788
		onInsideAutoUpReq?(data: pb.InsideAutoUpReq, transId: number): void; // 789
		onInsideAutoUpAck?(data: pb.InsideAutoUpAck, transId: number): void; // 790
		onTaskInfoNtf?(data: pb.TaskInfoNtf, transId: number): void; // 800
		onTaskDoneReq?(data: pb.TaskDoneReq, transId: number): void; // 801
		onTaskDoneAck?(data: pb.TaskDoneAck, transId: number): void; // 802
		onTaskNpcStateReq?(data: pb.TaskNpcStateReq, transId: number): void; // 803
		onTaskNpcStateAck?(data: pb.TaskNpcStateAck, transId: number): void; // 804
		onSetTaskInfoReq?(data: pb.SetTaskInfoReq, transId: number): void; // 805
		onSetTaskInfoAck?(data: pb.SetTaskInfoAck, transId: number): void; // 806
		onGetOnlineAwardInfoReq?(data: pb.GetOnlineAwardInfoReq, transId: number): void; // 820
		onGetOnlineAwardInfoAck?(data: pb.GetOnlineAwardInfoAck, transId: number): void; // 821
		onGetOnlineAwardReq?(data: pb.GetOnlineAwardReq, transId: number): void; // 822
		onGetOnlineAwardAck?(data: pb.GetOnlineAwardAck, transId: number): void; // 823
		onFashionUpLevelReq?(data: pb.FashionUpLevelReq, transId: number): void; // 830
		onFashionUpLevelAck?(data: pb.FashionUpLevelAck, transId: number): void; // 831
		onFashionWearReq?(data: pb.FashionWearReq, transId: number): void; // 832
		onFashionWearAck?(data: pb.FashionWearAck, transId: number): void; // 834
		onOfficialUpLevelReq?(data: pb.OfficialUpLevelReq, transId: number): void; // 840
		onOfficialUpLevelAck?(data: pb.OfficialUpLevelAck, transId: number): void; // 841
		onRingWearReq?(data: pb.RingWearReq, transId: number): void; // 850
		onRingWearAck?(data: pb.RingWearAck, transId: number): void; // 851
		onRingRemoveReq?(data: pb.RingRemoveReq, transId: number): void; // 852
		onRingRemoveAck?(data: pb.RingRemoveAck, transId: number): void; // 853
		onRingStrengthenReq?(data: pb.RingStrengthenReq, transId: number): void; // 854
		onRingStrengthenAck?(data: pb.RingStrengthenAck, transId: number): void; // 855
		onRingPhantomReq?(data: pb.RingPhantomReq, transId: number): void; // 856
		onRingPhantomAck?(data: pb.RingPhantomAck, transId: number): void; // 857
		onRingSkillUpReq?(data: pb.RingSkillUpReq, transId: number): void; // 858
		onRingSkillUpAck?(data: pb.RingSkillUpAck, transId: number): void; // 859
		onRingFuseReq?(data: pb.RingFuseReq, transId: number): void; // 860
		onRingFuseAck?(data: pb.RingFuseAck, transId: number): void; // 861
		onRingSkillResetReq?(data: pb.RingSkillResetReq, transId: number): void; // 862
		onRingSkillResetAck?(data: pb.RingSkillResetAck, transId: number): void; // 863
		onGodEquipActiveReq?(data: pb.GodEquipActiveReq, transId: number): void; // 880
		onGodEquipActiveAck?(data: pb.GodEquipActiveAck, transId: number): void; // 881
		onGodEquipUpLevelReq?(data: pb.GodEquipUpLevelReq, transId: number): void; // 882
		onGodEquipUpLevelAck?(data: pb.GodEquipUpLevelAck, transId: number): void; // 883
		onGodEquipBloodReq?(data: pb.GodEquipBloodReq, transId: number): void; // 884
		onGodEquipBloodAck?(data: pb.GodEquipBloodAck, transId: number): void; // 885
		onJuexueUpLevelReq?(data: pb.JuexueUpLevelReq, transId: number): void; // 890
		onJuexueUpLevelAck?(data: pb.JuexueUpLevelAck, transId: number): void; // 891
		onPetActiveReq?(data: pb.PetActiveReq, transId: number): void; // 900
		onPetActiveAck?(data: pb.PetActiveAck, transId: number): void; // 901
		onPetUpLvReq?(data: pb.PetUpLvReq, transId: number): void; // 902
		onPetUpLvAck?(data: pb.PetUpLvAck, transId: number): void; // 903
		onPetUpGradeReq?(data: pb.PetUpGradeReq, transId: number): void; // 904
		onPetUpGradeAck?(data: pb.PetUpGradeAck, transId: number): void; // 905
		onPetBreakReq?(data: pb.PetBreakReq, transId: number): void; // 906
		onPetBreakAck?(data: pb.PetBreakAck, transId: number): void; // 907
		onPetChangeWearReq?(data: pb.PetChangeWearReq, transId: number): void; // 908
		onPetChangeWearAck?(data: pb.PetChangeWearAck, transId: number): void; // 909
		onPetAppendageReq?(data: pb.PetAppendageReq, transId: number): void; // 910
		onPetAppendageAck?(data: pb.PetAppendageAck, transId: number): void; // 911
		onCompetitveLoadReq?(data: pb.CompetitveLoadReq, transId: number): void; // 920
		onCompetitveLoadAck?(data: pb.CompetitveLoadAck, transId: number): void; // 921
		onBuyCompetitveChallengeTimesReq?(data: pb.BuyCompetitveChallengeTimesReq, transId: number): void; // 922
		onBuyCompetitveChallengeTimesAck?(data: pb.BuyCompetitveChallengeTimesAck, transId: number): void; // 923
		onRefCompetitveRankReq?(data: pb.RefCompetitveRankReq, transId: number): void; // 924
		onRefCompetitveRankAck?(data: pb.RefCompetitveRankAck, transId: number): void; // 925
		onGetCompetitveDailyRewardReq?(data: pb.GetCompetitveDailyRewardReq, transId: number): void; // 926
		onGetCompetitveDailyRewardAck?(data: pb.GetCompetitveDailyRewardAck, transId: number): void; // 927
		onEnterCompetitveFightReq?(data: pb.EnterCompetitveFightReq, transId: number): void; // 928
		onCompetitveFightNtf?(data: pb.CompetitveFightNtf, transId: number): void; // 929
		onCompetitveMultipleClaimReq?(data: pb.CompetitveMultipleClaimReq, transId: number): void; // 930
		onCompetitveMultipleClaimAck?(data: pb.CompetitveMultipleClaimAck, transId: number): void; // 931
		onFieldFightLoadReq?(data: pb.FieldFightLoadReq, transId: number): void; // 941
		onFieldFightLoadAck?(data: pb.FieldFightLoadAck, transId: number): void; // 942
		onEnterFieldFightReq?(data: pb.EnterFieldFightReq, transId: number): void; // 943
		onFieldFightNtf?(data: pb.FieldFightNtf, transId: number): void; // 944
		onBuyFieldFightChallengeTimesReq?(data: pb.BuyFieldFightChallengeTimesReq, transId: number): void; // 945
		onBuyFieldFightChallengeTimesAck?(data: pb.BuyFieldFightChallengeTimesAck, transId: number): void; // 946
		onRefFieldFightRivalUserReq?(data: pb.RefFieldFightRivalUserReq, transId: number): void; // 947
		onRefFieldFightRivalUserAck?(data: pb.RefFieldFightRivalUserAck, transId: number): void; // 948
		onDarkPalaceDareNumNtf?(data: pb.DarkPalaceDareNumNtf, transId: number): void; // 956
		onDarkPalaceLoadReq?(data: pb.DarkPalaceLoadReq, transId: number): void; // 961
		onDarkPalaceLoadAck?(data: pb.DarkPalaceLoadAck, transId: number): void; // 962
		onEnterDarkPalaceFightReq?(data: pb.EnterDarkPalaceFightReq, transId: number): void; // 963
		onDarkPalaceFightResultNtf?(data: pb.DarkPalaceFightResultNtf, transId: number): void; // 964
		onDarkPalaceBuyNumReq?(data: pb.DarkPalaceBuyNumReq, transId: number): void; // 965
		onDarkPalaceBuyNumAck?(data: pb.DarkPalaceBuyNumAck, transId: number): void; // 966
		onDarkPalaceBossNtf?(data: pb.DarkPalaceBossNtf, transId: number): void; // 967
		onEnterDarkPalaceHelpFightReq?(data: pb.EnterDarkPalaceHelpFightReq, transId: number): void; // 968
		onDarkPalaceHelpFightResultNtf?(data: pb.DarkPalaceHelpFightResultNtf, transId: number): void; // 969
		onExpPoolLoadReq?(data: pb.ExpPoolLoadReq, transId: number): void; // 970
		onExpPoolLoadAck?(data: pb.ExpPoolLoadAck, transId: number): void; // 971
		onExpPoolUpGradeReq?(data: pb.ExpPoolUpGradeReq, transId: number): void; // 972
		onExpPoolUpGradeAck?(data: pb.ExpPoolUpGradeAck, transId: number): void; // 973
		onWarehouseInfoReq?(data: pb.WarehouseInfoReq, transId: number): void; // 981
		onWarehouseInfoNtf?(data: pb.WarehouseInfoNtf, transId: number): void; // 982
		onWareHouseSpaceAddReq?(data: pb.WareHouseSpaceAddReq, transId: number): void; // 983
		onWareHouseSpaceAddAck?(data: pb.WareHouseSpaceAddAck, transId: number): void; // 984
		onWarehouseAddReq?(data: pb.WarehouseAddReq, transId: number): void; // 985
		onWarehouseAddAck?(data: pb.WarehouseAddAck, transId: number): void; // 986
		onWarehouseShiftOutReq?(data: pb.WarehouseShiftOutReq, transId: number): void; // 987
		onWarehouseShiftOutAck?(data: pb.WarehouseShiftOutAck, transId: number): void; // 988
		onWarehouseSortReq?(data: pb.WarehouseSortReq, transId: number): void; // 989
		onWarehouseSortAck?(data: pb.WarehouseSortAck, transId: number): void; // 990
		onTalentUpLvReq?(data: pb.TalentUpLvReq, transId: number): void; // 1001
		onTalentUpLvAck?(data: pb.TalentUpLvAck, transId: number): void; // 1002
		onTalentResetReq?(data: pb.TalentResetReq, transId: number): void; // 1003
		onTalentResetAck?(data: pb.TalentResetAck, transId: number): void; // 1004
		onGuildLoadInfoReq?(data: pb.GuildLoadInfoReq, transId: number): void; // 1020
		onGuildLoadInfoAck?(data: pb.GuildLoadInfoAck, transId: number): void; // 1021
		onCreateGuildReq?(data: pb.CreateGuildReq, transId: number): void; // 1022
		onCreateGuildAck?(data: pb.CreateGuildAck, transId: number): void; // 1023
		onQuitGuildReq?(data: pb.QuitGuildReq, transId: number): void; // 1026
		onQuitGuildAck?(data: pb.QuitGuildAck, transId: number): void; // 1027
		onKickOutReq?(data: pb.KickOutReq, transId: number): void; // 1028
		onKickOutAck?(data: pb.KickOutAck, transId: number): void; // 1029
		onImpeachPresidentReq?(data: pb.ImpeachPresidentReq, transId: number): void; // 1030
		onImpeachPresidentAck?(data: pb.ImpeachPresidentAck, transId: number): void; // 1031
		onGuildCheckMemberInfoReq?(data: pb.GuildCheckMemberInfoReq, transId: number): void; // 1032
		onGuildCheckMemberInfoAck?(data: pb.GuildCheckMemberInfoAck, transId: number): void; // 1033
		onApplyJoinGuildReq?(data: pb.ApplyJoinGuildReq, transId: number): void; // 1034
		onApplyJoinGuildAck?(data: pb.ApplyJoinGuildAck, transId: number): void; // 1035
		onGuildAssignReq?(data: pb.GuildAssignReq, transId: number): void; // 1036
		onGuildAssignAck?(data: pb.GuildAssignAck, transId: number): void; // 1037
		onAllGuildInfosReq?(data: pb.AllGuildInfosReq, transId: number): void; // 1038
		onAllGuildInfosAck?(data: pb.AllGuildInfosAck, transId: number): void; // 1039
		onDissolveGuildReq?(data: pb.DissolveGuildReq, transId: number): void; // 1040
		onDissolveGuildAck?(data: pb.DissolveGuildAck, transId: number): void; // 1041
		onJoinGuildCombatLimitReq?(data: pb.JoinGuildCombatLimitReq, transId: number): void; // 1042
		onJoinGuildCombatLimitAck?(data: pb.JoinGuildCombatLimitAck, transId: number): void; // 1043
		onJoinGuildDisposeReq?(data: pb.JoinGuildDisposeReq, transId: number): void; // 1044
		onJoinGuildDisposeAck?(data: pb.JoinGuildDisposeAck, transId: number): void; // 1045
		onGetApplyUserListReq?(data: pb.GetApplyUserListReq, transId: number): void; // 1046
		onGetApplyUserListAck?(data: pb.GetApplyUserListAck, transId: number): void; // 1047
		onModifyBulletinReq?(data: pb.ModifyBulletinReq, transId: number): void; // 1048
		onModifyBulletinAck?(data: pb.ModifyBulletinAck, transId: number): void; // 1049
		onGuildBonfireLoadReq?(data: pb.GuildBonfireLoadReq, transId: number): void; // 1050
		onGuildBonfireLoadAck?(data: pb.GuildBonfireLoadAck, transId: number): void; // 1051
		onGuildBonfireAddExpReq?(data: pb.GuildBonfireAddExpReq, transId: number): void; // 1052
		onGuildBonfireAddExpAck?(data: pb.GuildBonfireAddExpAck, transId: number): void; // 1053
		onEnterGuildBonfireFightReq?(data: pb.EnterGuildBonfireFightReq, transId: number): void; // 1054
		onGuildBonfireFightNtf?(data: pb.GuildBonfireFightNtf, transId: number): void; // 1055
		onGuildBonfireOpenStateNtf?(data: pb.GuildBonfireOpenStateNtf, transId: number): void; // 1056
		onJoinGuildSuccessNtf?(data: pb.JoinGuildSuccessNtf, transId: number): void; // 1057
		onAllJoinGuildDisposeReq?(data: pb.AllJoinGuildDisposeReq, transId: number): void; // 1058
		onAllJoinGuildDisposeAck?(data: pb.AllJoinGuildDisposeAck, transId: number): void; // 1059
		onApplyJoinGuildReDotNtf?(data: pb.ApplyJoinGuildReDotNtf, transId: number): void; // 1060
		onImpeachPresidentNtf?(data: pb.ImpeachPresidentNtf, transId: number): void; // 1061
		onBroadcastGuildChangeNtf?(data: pb.BroadcastGuildChangeNtf, transId: number): void; // 1062
		onEnterDailyActivityReq?(data: pb.EnterDailyActivityReq, transId: number): void; // 1071
		onDailyActivityResultNtf?(data: pb.DailyActivityResultNtf, transId: number): void; // 1072
		onDailyActivityListReq?(data: pb.DailyActivityListReq, transId: number): void; // 1073
		onDailyActivityListAck?(data: pb.DailyActivityListAck, transId: number): void; // 1074
		onPaodianFightEnd?(data: pb.PaodianFightEnd, transId: number): void; // 1075
		onShaBaKeInfoReq?(data: pb.ShaBaKeInfoReq, transId: number): void; // 1100
		onShaBaKeInfoAck?(data: pb.ShaBaKeInfoAck, transId: number): void; // 1101
		onEnterShaBaKeFightReq?(data: pb.EnterShaBaKeFightReq, transId: number): void; // 1102
		onShaBaKeFightResultNtf?(data: pb.ShaBaKeFightResultNtf, transId: number): void; // 1103
		onShabakeIsOpenNtf?(data: pb.ShabakeIsOpenNtf, transId: number): void; // 1104
		onVipGiftGetReq?(data: pb.VipGiftGetReq, transId: number): void; // 1111
		onVipGiftGetAck?(data: pb.VipGiftGetAck, transId: number): void; // 1112
		onAuctionInfoReq?(data: pb.AuctionInfoReq, transId: number): void; // 1130
		onAuctionInfoNtf?(data: pb.AuctionInfoNtf, transId: number): void; // 1131
		onBidInfoReq?(data: pb.BidInfoReq, transId: number): void; // 1132
		onBidInfoNtf?(data: pb.BidInfoNtf, transId: number): void; // 1133
		onBidReq?(data: pb.BidReq, transId: number): void; // 1134
		onBidNtf?(data: pb.BidNtf, transId: number): void; // 1135
		onMyBidReq?(data: pb.MyBidReq, transId: number): void; // 1136
		onMyBidNtf?(data: pb.MyBidNtf, transId: number): void; // 1137
		onBidItemUpdateNtf?(data: pb.BidItemUpdateNtf, transId: number): void; // 1138
		onAuctionPutawayItemReq?(data: pb.AuctionPutawayItemReq, transId: number): void; // 1139
		onAuctionPutawayItemNtf?(data: pb.AuctionPutawayItemNtf, transId: number): void; // 1140
		onMyPutAwayItemInfoReq?(data: pb.MyPutAwayItemInfoReq, transId: number): void; // 1141
		onMyPutAwayItemInfoAck?(data: pb.MyPutAwayItemInfoAck, transId: number): void; // 1142
		onMyBidInfoItemReq?(data: pb.MyBidInfoItemReq, transId: number): void; // 1143
		onMyBidInfoItemAck?(data: pb.MyBidInfoItemAck, transId: number): void; // 1144
		onRedPointStateNtf?(data: pb.RedPointStateNtf, transId: number): void; // 1145
		onConversionGoldIngotReq?(data: pb.ConversionGoldIngotReq, transId: number): void; // 1146
		onConversionGoldIngotAck?(data: pb.ConversionGoldIngotAck, transId: number): void; // 1147
		onFriendListReq?(data: pb.FriendListReq, transId: number): void; // 1161
		onFriendListAck?(data: pb.FriendListAck, transId: number): void; // 1162
		onFriendAddReq?(data: pb.FriendAddReq, transId: number): void; // 1163
		onFriendAddAck?(data: pb.FriendAddAck, transId: number): void; // 1164
		onFriendDelReq?(data: pb.FriendDelReq, transId: number): void; // 1165
		onFriendDelAck?(data: pb.FriendDelAck, transId: number): void; // 1166
		onFriendBlockAddReq?(data: pb.FriendBlockAddReq, transId: number): void; // 1167
		onFriendBlockAddAck?(data: pb.FriendBlockAddAck, transId: number): void; // 1168
		onFriendSearchReq?(data: pb.FriendSearchReq, transId: number): void; // 1169
		onFriendSearchAck?(data: pb.FriendSearchAck, transId: number): void; // 1170
		onFriendBlockListReq?(data: pb.FriendBlockListReq, transId: number): void; // 1171
		onFriendBlockListAck?(data: pb.FriendBlockListAck, transId: number): void; // 1172
		onFriendBlockDelReq?(data: pb.FriendBlockDelReq, transId: number): void; // 1173
		onFriendBlockDelAck?(data: pb.FriendBlockDelAck, transId: number): void; // 1174
		onFriendMsgReadReq?(data: pb.FriendMsgReadReq, transId: number): void; // 1175
		onFriendMsgReadAck?(data: pb.FriendMsgReadAck, transId: number): void; // 1176
		onFriendUserInfoReq?(data: pb.FriendUserInfoReq, transId: number): void; // 1177
		onFriendUserInfoAck?(data: pb.FriendUserInfoAck, transId: number): void; // 1178
		onFriendMsgReq?(data: pb.FriendMsgReq, transId: number): void; // 1179
		onFriendMsgAck?(data: pb.FriendMsgAck, transId: number): void; // 1180
		onFriendApplyAddReq?(data: pb.FriendApplyAddReq, transId: number): void; // 1181
		onFriendApplyAddNtf?(data: pb.FriendApplyAddNtf, transId: number): void; // 1182
		onFriendApplyAgreeReq?(data: pb.FriendApplyAgreeReq, transId: number): void; // 1183
		onFriendApplyAgreeNtf?(data: pb.FriendApplyAgreeNtf, transId: number): void; // 1184
		onFriendApplyRefuseReq?(data: pb.FriendApplyRefuseReq, transId: number): void; // 1185
		onFriendApplyRefuseNtf?(data: pb.FriendApplyRefuseNtf, transId: number): void; // 1186
		onFriendApplyListReq?(data: pb.FriendApplyListReq, transId: number): void; // 1187
		onFriendApplyListAck?(data: pb.FriendApplyListAck, transId: number): void; // 1188
		onFitUpLvReq?(data: pb.FitUpLvReq, transId: number): void; // 1190
		onFitUpLvAck?(data: pb.FitUpLvAck, transId: number): void; // 1191
		onFitSkillUpLvReq?(data: pb.FitSkillUpLvReq, transId: number): void; // 1192
		onFitSkillUpLvAck?(data: pb.FitSkillUpLvAck, transId: number): void; // 1193
		onFitSkillUpStarReq?(data: pb.FitSkillUpStarReq, transId: number): void; // 1194
		onFitSkillUpStarAck?(data: pb.FitSkillUpStarAck, transId: number): void; // 1195
		onFitSkillChangeReq?(data: pb.FitSkillChangeReq, transId: number): void; // 1196
		onFitSkillChangeAck?(data: pb.FitSkillChangeAck, transId: number): void; // 1197
		onFitSkillResetReq?(data: pb.FitSkillResetReq, transId: number): void; // 1198
		onFitSkillResetAck?(data: pb.FitSkillResetAck, transId: number): void; // 1199
		onFitFashionUpLvReq?(data: pb.FitFashionUpLvReq, transId: number): void; // 1200
		onFitFashionUpLvAck?(data: pb.FitFashionUpLvAck, transId: number): void; // 1201
		onFitFashionChangeReq?(data: pb.FitFashionChangeReq, transId: number): void; // 1202
		onFitFashionChangeAck?(data: pb.FitFashionChangeAck, transId: number): void; // 1203
		onFitSkillActiveReq?(data: pb.FitSkillActiveReq, transId: number): void; // 1204
		onFitSkillActiveAck?(data: pb.FitSkillActiveAck, transId: number): void; // 1205
		onFitEnterReq?(data: pb.FitEnterReq, transId: number): void; // 1206
		onFitEnterAck?(data: pb.FitEnterAck, transId: number): void; // 1207
		onFitCancleReq?(data: pb.FitCancleReq, transId: number): void; // 1208
		onFitCancleAck?(data: pb.FitCancleAck, transId: number): void; // 1209
		onRechargeAllGetReq?(data: pb.RechargeAllGetReq, transId: number): void; // 1210
		onRechargeAllGetAck?(data: pb.RechargeAllGetAck, transId: number): void; // 1211
		onRechargeResetNtf?(data: pb.RechargeResetNtf, transId: number): void; // 1212
		onDailyTaskLoadReq?(data: pb.DailyTaskLoadReq, transId: number): void; // 1221
		onDailyTaskLoadAck?(data: pb.DailyTaskLoadAck, transId: number): void; // 1222
		onBuyChallengeTimeReq?(data: pb.BuyChallengeTimeReq, transId: number): void; // 1223
		onBuyChallengeTimeAck?(data: pb.BuyChallengeTimeAck, transId: number): void; // 1224
		onGetAwardReq?(data: pb.GetAwardReq, transId: number): void; // 1225
		onGetAwardAck?(data: pb.GetAwardAck, transId: number): void; // 1226
		onResourcesBackGetRewardReq?(data: pb.ResourcesBackGetRewardReq, transId: number): void; // 1227
		onResourcesBackGetRewardAck?(data: pb.ResourcesBackGetRewardAck, transId: number): void; // 1228
		onGetExpReq?(data: pb.GetExpReq, transId: number): void; // 1229
		onGetExpAck?(data: pb.GetExpAck, transId: number): void; // 1230
		onResourcesBackGetAllRewardReq?(data: pb.ResourcesBackGetAllRewardReq, transId: number): void; // 1231
		onResourcesBackGetAllRewardAck?(data: pb.ResourcesBackGetAllRewardAck, transId: number): void; // 1232
		onMonthCardBuyReq?(data: pb.MonthCardBuyReq, transId: number): void; // 1241
		onMonthCardBuyAck?(data: pb.MonthCardBuyAck, transId: number): void; // 1242
		onMonthCardDailyRewardReq?(data: pb.MonthCardDailyRewardReq, transId: number): void; // 1243
		onMonthCardDailyRewardAck?(data: pb.MonthCardDailyRewardAck, transId: number): void; // 1244
		onFirstRechargeRewardReq?(data: pb.FirstRechargeRewardReq, transId: number): void; // 1260
		onFirstRechargeRewardAck?(data: pb.FirstRechargeRewardAck, transId: number): void; // 1261
		onFirstRechargeNtf?(data: pb.FirstRechargeNtf, transId: number): void; // 1262
		onDailyRankLoadReq?(data: pb.DailyRankLoadReq, transId: number): void; // 1280
		onDailyRankLoadAck?(data: pb.DailyRankLoadAck, transId: number): void; // 1281
		onDailyRankGetMarkRewardReq?(data: pb.DailyRankGetMarkRewardReq, transId: number): void; // 1282
		onDailyRankGetMarkRewardAck?(data: pb.DailyRankGetMarkRewardAck, transId: number): void; // 1283
		onDailyRankBuyGiftReq?(data: pb.DailyRankBuyGiftReq, transId: number): void; // 1284
		onDailyRankBuyGiftAck?(data: pb.DailyRankBuyGiftAck, transId: number): void; // 1285
		onOpenGiftReq?(data: pb.OpenGiftReq, transId: number): void; // 1291
		onOpenGiftAck?(data: pb.OpenGiftAck, transId: number): void; // 1292
		onSpendRebatesRewardReq?(data: pb.SpendRebatesRewardReq, transId: number): void; // 1301
		onSpendRebatesRewardAck?(data: pb.SpendRebatesRewardAck, transId: number): void; // 1302
		onSpendRebatesNtf?(data: pb.SpendRebatesNtf, transId: number): void; // 1303
		onOfflineAwardLoadReq?(data: pb.OfflineAwardLoadReq, transId: number): void; // 1320
		onOfflineAwardLoadAck?(data: pb.OfflineAwardLoadAck, transId: number): void; // 1321
		onOfflineAwardGetReq?(data: pb.OfflineAwardGetReq, transId: number): void; // 1322
		onOfflineAwardGetAck?(data: pb.OfflineAwardGetAck, transId: number): void; // 1323
		onAchievementLoadReq?(data: pb.AchievementLoadReq, transId: number): void; // 1331
		onAchievementLoadAck?(data: pb.AchievementLoadAck, transId: number): void; // 1332
		onAchievementGetAwardReq?(data: pb.AchievementGetAwardReq, transId: number): void; // 1333
		onAchievementGetAwardAck?(data: pb.AchievementGetAwardAck, transId: number): void; // 1334
		onActiveMedalReq?(data: pb.ActiveMedalReq, transId: number): void; // 1335
		onActiveMedalAck?(data: pb.ActiveMedalAck, transId: number): void; // 1336
		onAchievementTaskInfoNtf?(data: pb.AchievementTaskInfoNtf, transId: number): void; // 1337
		onGiftCodeRewardReq?(data: pb.GiftCodeRewardReq, transId: number): void; // 1341
		onGiftCodeRewardAck?(data: pb.GiftCodeRewardAck, transId: number): void; // 1342
		onChallengeInfoReq?(data: pb.ChallengeInfoReq, transId: number): void; // 1360
		onChallengeInfoAck?(data: pb.ChallengeInfoAck, transId: number): void; // 1361
		onApplyChallengeReq?(data: pb.ApplyChallengeReq, transId: number): void; // 1362
		onApplyChallengeAck?(data: pb.ApplyChallengeAck, transId: number): void; // 1363
		onChallengeEachRoundPeopleReq?(data: pb.ChallengeEachRoundPeopleReq, transId: number): void; // 1364
		onChallengeEachRoundPeopleAck?(data: pb.ChallengeEachRoundPeopleAck, transId: number): void; // 1365
		onBottomPourReq?(data: pb.BottomPourReq, transId: number): void; // 1366
		onBottomPourAck?(data: pb.BottomPourAck, transId: number): void; // 1367
		onChallengeOpenNtf?(data: pb.ChallengeOpenNtf, transId: number): void; // 1368
		onChallengeRoundEndNtf?(data: pb.ChallengeRoundEndNtf, transId: number): void; // 1369
		onChallengeApplyUserInfoNtf?(data: pb.ChallengeApplyUserInfoNtf, transId: number): void; // 1370
		onLimitedGiftNtf?(data: pb.LimitedGiftNtf, transId: number): void; // 1381
		onLimitedGiftBuyReq?(data: pb.LimitedGiftBuyReq, transId: number): void; // 1382
		onLimitedGiftBuyAck?(data: pb.LimitedGiftBuyAck, transId: number): void; // 1383
		onLimitedGiftReq?(data: pb.LimitedGiftReq, transId: number): void; // 1394
		onDailyPackBuyReq?(data: pb.DailyPackBuyReq, transId: number): void; // 1400
		onDailyPackBuyAck?(data: pb.DailyPackBuyAck, transId: number): void; // 1401
		onGrowFundBuyReq?(data: pb.GrowFundBuyReq, transId: number): void; // 1420
		onGrowFundBuyAck?(data: pb.GrowFundBuyAck, transId: number): void; // 1421
		onGrowFundRewardReq?(data: pb.GrowFundRewardReq, transId: number): void; // 1422
		onGrowFundRewardAck?(data: pb.GrowFundRewardAck, transId: number): void; // 1423
		onWorldLeaderStartNtf?(data: pb.WorldLeaderStartNtf, transId: number): void; // 1440
		onLoadWorldLeaderReq?(data: pb.LoadWorldLeaderReq, transId: number): void; // 1441
		onLoadWorldLeaderAck?(data: pb.LoadWorldLeaderAck, transId: number): void; // 1442
		onWorldLeaderEnterReq?(data: pb.WorldLeaderEnterReq, transId: number): void; // 1443
		onWorldLeaderEnterAck?(data: pb.WorldLeaderEnterAck, transId: number): void; // 1444
		onGetWorldLeaderRankInfoReq?(data: pb.GetWorldLeaderRankInfoReq, transId: number): void; // 1445
		onGetWorldLeaderRankInfoAck?(data: pb.GetWorldLeaderRankInfoAck, transId: number): void; // 1446
		onWorldLeaderEndRewardNtf?(data: pb.WorldLeaderEndRewardNtf, transId: number): void; // 1447
		onWorldLeaderBossHpNtf?(data: pb.WorldLeaderBossHpNtf, transId: number): void; // 1448
		onWarOrderTaskNtf?(data: pb.WarOrderTaskNtf, transId: number): void; // 1461
		onWarOrderTaskFinishReq?(data: pb.WarOrderTaskFinishReq, transId: number): void; // 1462
		onWarOrderTaskFinishAck?(data: pb.WarOrderTaskFinishAck, transId: number): void; // 1463
		onWarOrderTaskRewardReq?(data: pb.WarOrderTaskRewardReq, transId: number): void; // 1464
		onWarOrderTaskRewardAck?(data: pb.WarOrderTaskRewardAck, transId: number): void; // 1465
		onWarOrderBuyLuxuryReq?(data: pb.WarOrderBuyLuxuryReq, transId: number): void; // 1466
		onWarOrderBuyLuxuryAck?(data: pb.WarOrderBuyLuxuryAck, transId: number): void; // 1467
		onWarOrderBuyExpReq?(data: pb.WarOrderBuyExpReq, transId: number): void; // 1468
		onWarOrderBuyExpAck?(data: pb.WarOrderBuyExpAck, transId: number): void; // 1469
		onWarOrderLvRewardReq?(data: pb.WarOrderLvRewardReq, transId: number): void; // 1470
		onWarOrderLvRewardAck?(data: pb.WarOrderLvRewardAck, transId: number): void; // 1471
		onWarOrderExchangeReq?(data: pb.WarOrderExchangeReq, transId: number): void; // 1472
		onWarOrderExchangeAck?(data: pb.WarOrderExchangeAck, transId: number): void; // 1473
		onWarOrderLvNtf?(data: pb.WarOrderLvNtf, transId: number): void; // 1474
		onWarOrderOpenReq?(data: pb.WarOrderOpenReq, transId: number): void; // 1475
		onWarOrderOpenAck?(data: pb.WarOrderOpenAck, transId: number): void; // 1476
		onWarOrderResetNtf?(data: pb.WarOrderResetNtf, transId: number): void; // 1477
		onShaBaKeInfoCrossReq?(data: pb.ShaBaKeInfoCrossReq, transId: number): void; // 1500
		onShaBaKeInfoCrossAck?(data: pb.ShaBaKeInfoCrossAck, transId: number): void; // 1501
		onEnterCrossShaBaKeFightReq?(data: pb.EnterCrossShaBaKeFightReq, transId: number): void; // 1502
		onEnterCrossShaBaKeFightAck?(data: pb.EnterCrossShaBaKeFightAck, transId: number): void; // 1503
		onCrossShabakeOpenNtf?(data: pb.CrossShabakeOpenNtf, transId: number): void; // 1504
		onElfFeedReq?(data: pb.ElfFeedReq, transId: number): void; // 1521
		onElfFeedAck?(data: pb.ElfFeedAck, transId: number): void; // 1522
		onElfSkillUpLvReq?(data: pb.ElfSkillUpLvReq, transId: number): void; // 1523
		onElfSkillUpLvAck?(data: pb.ElfSkillUpLvAck, transId: number): void; // 1524
		onElfSkillChangePosReq?(data: pb.ElfSkillChangePosReq, transId: number): void; // 1525
		onElfSkillChangePosAck?(data: pb.ElfSkillChangePosAck, transId: number): void; // 1526
		onCardActivityApplyGetReq?(data: pb.CardActivityApplyGetReq, transId: number): void; // 1540
		onCardActivityApplyGetAck?(data: pb.CardActivityApplyGetAck, transId: number): void; // 1541
		onCardActivityInfosReq?(data: pb.CardActivityInfosReq, transId: number): void; // 1542
		onCardActivityInfosAck?(data: pb.CardActivityInfosAck, transId: number): void; // 1543
		onCardInfoNtf?(data: pb.CardInfoNtf, transId: number): void; // 1544
		onGetIntegralAwardReq?(data: pb.GetIntegralAwardReq, transId: number): void; // 1545
		onGetIntegralAwardAck?(data: pb.GetIntegralAwardAck, transId: number): void; // 1546
		onCardCloseNtf?(data: pb.CardCloseNtf, transId: number): void; // 1547
		onSetTreasurePopUpStateReq?(data: pb.SetTreasurePopUpStateReq, transId: number): void; // 1561
		onSetTreasurePopUpStateAck?(data: pb.SetTreasurePopUpStateAck, transId: number): void; // 1562
		onChooseTreasureAwardReq?(data: pb.ChooseTreasureAwardReq, transId: number): void; // 1563
		onChooseTreasureAwardAck?(data: pb.ChooseTreasureAwardAck, transId: number): void; // 1564
		onBuyTreasureItemReq?(data: pb.BuyTreasureItemReq, transId: number): void; // 1565
		onBuyTreasureItemAck?(data: pb.BuyTreasureItemAck, transId: number): void; // 1566
		onTreasureApplyGetReq?(data: pb.TreasureApplyGetReq, transId: number): void; // 1567
		onTreasureApplyGetAck?(data: pb.TreasureApplyGetAck, transId: number): void; // 1568
		onTreasureInfosReq?(data: pb.TreasureInfosReq, transId: number): void; // 1569
		onTreasureInfosAck?(data: pb.TreasureInfosAck, transId: number): void; // 1570
		onGetTreasureIntegralAwardReq?(data: pb.GetTreasureIntegralAwardReq, transId: number): void; // 1571
		onGetTreasureIntegralAwardAck?(data: pb.GetTreasureIntegralAwardAck, transId: number): void; // 1572
		onTreasureInfoNtf?(data: pb.TreasureInfoNtf, transId: number): void; // 1573
		onTreasureDrawInfoReq?(data: pb.TreasureDrawInfoReq, transId: number): void; // 1574
		onTreasureDrawInfoAck?(data: pb.TreasureDrawInfoAck, transId: number): void; // 1575
		onTreasureCloseNtf?(data: pb.TreasureCloseNtf, transId: number): void; // 1576
		onCutTreasureUpLvReq?(data: pb.CutTreasureUpLvReq, transId: number): void; // 1581
		onCutTreasureUpLvAck?(data: pb.CutTreasureUpLvAck, transId: number): void; // 1582
		onCutTreasureUseReq?(data: pb.CutTreasureUseReq, transId: number): void; // 1583
		onCutTreasureUseAck?(data: pb.CutTreasureUseAck, transId: number): void; // 1584
		onHolyBeastLoadInfoReq?(data: pb.HolyBeastLoadInfoReq, transId: number): void; // 1600
		onHolyBeastLoadInfoAck?(data: pb.HolyBeastLoadInfoAck, transId: number): void; // 1601
		onHolyBeastActivateReq?(data: pb.HolyBeastActivateReq, transId: number): void; // 1602
		onHolyBeastActivateAck?(data: pb.HolyBeastActivateAck, transId: number): void; // 1603
		onHolyBeastUpStarReq?(data: pb.HolyBeastUpStarReq, transId: number): void; // 1604
		onHolyBeastUpStarAck?(data: pb.HolyBeastUpStarAck, transId: number): void; // 1605
		onHolyBeastPointAddReq?(data: pb.HolyBeastPointAddReq, transId: number): void; // 1606
		onHolyBeastPointAddAck?(data: pb.HolyBeastPointAddAck, transId: number): void; // 1607
		onHolyBeastChoosePropReq?(data: pb.HolyBeastChoosePropReq, transId: number): void; // 1608
		onHolyBeastChoosePropAck?(data: pb.HolyBeastChoosePropAck, transId: number): void; // 1609
		onHolyBeastRestReq?(data: pb.HolyBeastRestReq, transId: number): void; // 1610
		onHolyBeastRestAck?(data: pb.HolyBeastRestAck, transId: number): void; // 1611
		onFitHolyEquipComposeReq?(data: pb.FitHolyEquipComposeReq, transId: number): void; // 1621
		onFitHolyEquipComposeAck?(data: pb.FitHolyEquipComposeAck, transId: number): void; // 1622
		onFitHolyEquipDeComposeReq?(data: pb.FitHolyEquipDeComposeReq, transId: number): void; // 1623
		onFitHolyEquipDeComposeAck?(data: pb.FitHolyEquipDeComposeAck, transId: number): void; // 1624
		onFitHolyEquipWearReq?(data: pb.FitHolyEquipWearReq, transId: number): void; // 1625
		onFitHolyEquipWearAck?(data: pb.FitHolyEquipWearAck, transId: number): void; // 1626
		onFitHolyEquipRemoveReq?(data: pb.FitHolyEquipRemoveReq, transId: number): void; // 1627
		onFitHolyEquipRemoveAck?(data: pb.FitHolyEquipRemoveAck, transId: number): void; // 1628
		onFitHolyEquipSuitSkillChangeReq?(data: pb.FitHolyEquipSuitSkillChangeReq, transId: number): void; // 1629
		onFitHolyEquipSuitSkillChangeAck?(data: pb.FitHolyEquipSuitSkillChangeAck, transId: number): void; // 1630
		onChuanShiWearReq?(data: pb.ChuanShiWearReq, transId: number): void; // 1650
		onChuanShiWearAck?(data: pb.ChuanShiWearAck, transId: number): void; // 1651
		onChuanShiRemoveReq?(data: pb.ChuanShiRemoveReq, transId: number): void; // 1652
		onChuanShiRemoveAck?(data: pb.ChuanShiRemoveAck, transId: number): void; // 1653
		onChuanShiDeComposeReq?(data: pb.ChuanShiDeComposeReq, transId: number): void; // 1654
		onChuanShiDeComposeAck?(data: pb.ChuanShiDeComposeAck, transId: number): void; // 1655
		onChuanshiStrengthenReq?(data: pb.ChuanshiStrengthenReq, transId: number): void; // 1656
		onChuanshiStrengthenAck?(data: pb.ChuanshiStrengthenAck, transId: number): void; // 1657
		onPreviewFunctionLoadReq?(data: pb.PreviewFunctionLoadReq, transId: number): void; // 1700
		onPreviewFunctionLoadAck?(data: pb.PreviewFunctionLoadAck, transId: number): void; // 1701
		onPreviewFunctionGetReq?(data: pb.PreviewFunctionGetReq, transId: number): void; // 1702
		onPreviewFunctionGetAck?(data: pb.PreviewFunctionGetAck, transId: number): void; // 1703
		onPreviewFunctionPointReq?(data: pb.PreviewFunctionPointReq, transId: number): void; // 1704
		onPreviewFunctionPointAck?(data: pb.PreviewFunctionPointAck, transId: number): void; // 1705
		onSevenInvestmentLoadReq?(data: pb.SevenInvestmentLoadReq, transId: number): void; // 1721
		onSevenInvestmentLoadAck?(data: pb.SevenInvestmentLoadAck, transId: number): void; // 1722
		onGetSevenInvestmentAwardReq?(data: pb.GetSevenInvestmentAwardReq, transId: number): void; // 1723
		onGetSevenInvestmentAwardAck?(data: pb.GetSevenInvestmentAwardAck, transId: number): void; // 1724
		onContRechargeCycleNtf?(data: pb.ContRechargeCycleNtf, transId: number): void; // 1731
		onContRechargeNtf?(data: pb.ContRechargeNtf, transId: number): void; // 1732
		onContRechargeReceiveReq?(data: pb.ContRechargeReceiveReq, transId: number): void; // 1733
		onContRechargeReceiveAck?(data: pb.ContRechargeReceiveAck, transId: number): void; // 1734
		onOpenGiftBuyNtf?(data: pb.OpenGiftBuyNtf, transId: number): void; // 1750
		onOpenGiftEndTimeReq?(data: pb.OpenGiftEndTimeReq, transId: number): void; // 1751
		onOpenGiftEndTimeAck?(data: pb.OpenGiftEndTimeAck, transId: number): void; // 1752
		onVipCustomerReq?(data: pb.VipCustomerReq, transId: number): void; // 1770
		onVipCustomerAck?(data: pb.VipCustomerAck, transId: number): void; // 1771
		onPaoMaDengNtf?(data: pb.PaoMaDengNtf, transId: number): void; // 1790
		onAncientBossLoadReq?(data: pb.AncientBossLoadReq, transId: number): void; // 1800
		onAncientBossLoadAck?(data: pb.AncientBossLoadAck, transId: number): void; // 1801
		onAncientBossBuyNumReq?(data: pb.AncientBossBuyNumReq, transId: number): void; // 1802
		onAncientBossBuyNumAck?(data: pb.AncientBossBuyNumAck, transId: number): void; // 1803
		onEnterAncientBossFightReq?(data: pb.EnterAncientBossFightReq, transId: number): void; // 1804
		onEnterAncientBossFightAck?(data: pb.EnterAncientBossFightAck, transId: number): void; // 1805
		onAncientBossFightResultNtf?(data: pb.AncientBossFightResultNtf, transId: number): void; // 1806
		onAncientBossNtf?(data: pb.AncientBossNtf, transId: number): void; // 1807
		onAncientBossOwnerReq?(data: pb.AncientBossOwnerReq, transId: number): void; // 1808
		onAncientBossOwnerAck?(data: pb.AncientBossOwnerAck, transId: number): void; // 1809
		onAncientSkillUpLvReq?(data: pb.AncientSkillUpLvReq, transId: number): void; // 1830
		onAncientSkillUpLvAck?(data: pb.AncientSkillUpLvAck, transId: number): void; // 1831
		onAncientSkillUpGradeReq?(data: pb.AncientSkillUpGradeReq, transId: number): void; // 1832
		onAncientSkillUpGradeAck?(data: pb.AncientSkillUpGradeAck, transId: number): void; // 1833
		onAncientSkillActiveReq?(data: pb.AncientSkillActiveReq, transId: number): void; // 1834
		onAncientSkillActiveAck?(data: pb.AncientSkillActiveAck, transId: number): void; // 1835
		onEnterGuardPillarReq?(data: pb.EnterGuardPillarReq, transId: number): void; // 1850
		onGuardPillarResultNtf?(data: pb.GuardPillarResultNtf, transId: number): void; // 1851
		onTitleActiveReq?(data: pb.TitleActiveReq, transId: number): void; // 1870
		onTitleActiveAck?(data: pb.TitleActiveAck, transId: number): void; // 1871
		onTitleWearReq?(data: pb.TitleWearReq, transId: number): void; // 1872
		onTitleWearAck?(data: pb.TitleWearAck, transId: number): void; // 1873
		onTitleAutoActiveNtf?(data: pb.TitleAutoActiveNtf, transId: number): void; // 1874
		onTitleExpireNtf?(data: pb.TitleExpireNtf, transId: number): void; // 1875
		onTitleRemoveReq?(data: pb.TitleRemoveReq, transId: number): void; // 1876
		onTitleRemoveAck?(data: pb.TitleRemoveAck, transId: number): void; // 1877
		onTitleLookReq?(data: pb.TitleLookReq, transId: number): void; // 1878
		onTitleLookAck?(data: pb.TitleLookAck, transId: number): void; // 1879
		onGuildActivityOpenNtf?(data: pb.GuildActivityOpenNtf, transId: number): void; // 1890
		onGuildActivityLoadReq?(data: pb.GuildActivityLoadReq, transId: number): void; // 1891
		onGuildActivityLoadAck?(data: pb.GuildActivityLoadAck, transId: number): void; // 1892
		onMiJiUpReq?(data: pb.MiJiUpReq, transId: number): void; // 1920
		onMiJiUpAck?(data: pb.MiJiUpAck, transId: number): void; // 1921
		onAncientTreasuresLoadReq?(data: pb.AncientTreasuresLoadReq, transId: number): void; // 1941
		onAncientTreasuresLoadAck?(data: pb.AncientTreasuresLoadAck, transId: number): void; // 1942
		onAncientTreasuresZhuLinReq?(data: pb.AncientTreasuresZhuLinReq, transId: number): void; // 1943
		onAncientTreasuresZhuLinAck?(data: pb.AncientTreasuresZhuLinAck, transId: number): void; // 1944
		onAncientTreasuresUpStarReq?(data: pb.AncientTreasuresUpStarReq, transId: number): void; // 1945
		onAncientTreasuresUpStarAck?(data: pb.AncientTreasuresUpStarAck, transId: number): void; // 1946
		onAncientTreasuresJueXingReq?(data: pb.AncientTreasuresJueXingReq, transId: number): void; // 1947
		onAncientTreasuresJueXingAck?(data: pb.AncientTreasuresJueXingAck, transId: number): void; // 1948
		onAncientTreasuresActivateReq?(data: pb.AncientTreasuresActivateReq, transId: number): void; // 1949
		onAncientTreasuresActivateAck?(data: pb.AncientTreasuresActivateAck, transId: number): void; // 1950
		onAncientTreasuresResertReq?(data: pb.AncientTreasuresResertReq, transId: number): void; // 1951
		onAncientTreasuresResertAck?(data: pb.AncientTreasuresResertAck, transId: number): void; // 1952
		onAncientTreasuresCondotionInfosReq?(data: pb.AncientTreasuresCondotionInfosReq, transId: number): void; // 1953
		onAncientTreasuresCondotionInfosAck?(data: pb.AncientTreasuresCondotionInfosAck, transId: number): void; // 1954
		onKillMonsterUniLoadReq?(data: pb.KillMonsterUniLoadReq, transId: number): void; // 1961
		onKillMonsterUniLoadAck?(data: pb.KillMonsterUniLoadAck, transId: number): void; // 1962
		onKillMonsterUniFirstDrawReq?(data: pb.KillMonsterUniFirstDrawReq, transId: number): void; // 1963
		onKillMonsterUniFirstDrawAck?(data: pb.KillMonsterUniFirstDrawAck, transId: number): void; // 1964
		onKillMonsterUniDrawReq?(data: pb.KillMonsterUniDrawReq, transId: number): void; // 1965
		onKillMonsterUniDrawAck?(data: pb.KillMonsterUniDrawAck, transId: number): void; // 1966
		onKillMonsterUniKillNtf?(data: pb.KillMonsterUniKillNtf, transId: number): void; // 1967
		onKillMonsterPerLoadReq?(data: pb.KillMonsterPerLoadReq, transId: number): void; // 1968
		onKillMonsterPerLoadAck?(data: pb.KillMonsterPerLoadAck, transId: number): void; // 1969
		onKillMonsterPerDrawReq?(data: pb.KillMonsterPerDrawReq, transId: number): void; // 1970
		onKillMonsterPerDrawAck?(data: pb.KillMonsterPerDrawAck, transId: number): void; // 1971
		onKillMonsterPerKillNtf?(data: pb.KillMonsterPerKillNtf, transId: number): void; // 1972
		onKillMonsterMilLoadReq?(data: pb.KillMonsterMilLoadReq, transId: number): void; // 1973
		onKillMonsterMilLoadAck?(data: pb.KillMonsterMilLoadAck, transId: number): void; // 1974
		onKillMonsterMilDrawReq?(data: pb.KillMonsterMilDrawReq, transId: number): void; // 1975
		onKillMonsterMilDrawAck?(data: pb.KillMonsterMilDrawAck, transId: number): void; // 1976
		onKillMonsterMilKillNtf?(data: pb.KillMonsterMilKillNtf, transId: number): void; // 1977
		onTreasureShopLoadReq?(data: pb.TreasureShopLoadReq, transId: number): void; // 2000
		onTreasureShopLoadAck?(data: pb.TreasureShopLoadAck, transId: number): void; // 2001
		onTreasureShopCarChangeReq?(data: pb.TreasureShopCarChangeReq, transId: number): void; // 2002
		onTreasureShopCarChangeAck?(data: pb.TreasureShopCarChangeAck, transId: number): void; // 2003
		onTreasureShopBuyReq?(data: pb.TreasureShopBuyReq, transId: number): void; // 2004
		onTreasureShopBuyAck?(data: pb.TreasureShopBuyAck, transId: number): void; // 2005
		onTreasureShopRefreshReq?(data: pb.TreasureShopRefreshReq, transId: number): void; // 2006
		onTreasureShopRefreshNtf?(data: pb.TreasureShopRefreshNtf, transId: number): void; // 2007
		onHellBossLoadReq?(data: pb.HellBossLoadReq, transId: number): void; // 2020
		onHellBossLoadAck?(data: pb.HellBossLoadAck, transId: number): void; // 2021
		onHellBossBuyNumReq?(data: pb.HellBossBuyNumReq, transId: number): void; // 2022
		onHellBossBuyNumAck?(data: pb.HellBossBuyNumAck, transId: number): void; // 2023
		onHellBossDareNumNtf?(data: pb.HellBossDareNumNtf, transId: number): void; // 2024
		onEnterHellBossFightReq?(data: pb.EnterHellBossFightReq, transId: number): void; // 2025
		onHellBossFightResultNtf?(data: pb.HellBossFightResultNtf, transId: number): void; // 2026
		onHellBossNtf?(data: pb.HellBossNtf, transId: number): void; // 2027
		onMagicTowerEndNtf?(data: pb.MagicTowerEndNtf, transId: number): void; // 2050
		onMagicTowerGetUserInfoReq?(data: pb.MagicTowerGetUserInfoReq, transId: number): void; // 2051
		onMagicTowerGetUserInfoAck?(data: pb.MagicTowerGetUserInfoAck, transId: number): void; // 2052
		onMagicTowerlayerAwardReq?(data: pb.MagicTowerlayerAwardReq, transId: number): void; // 2053
		onMagicTowerlayerAwardAck?(data: pb.MagicTowerlayerAwardAck, transId: number): void; // 2054
		onLotteryInfoReq?(data: pb.LotteryInfoReq, transId: number): void; // 2061
		onLotteryInfoAck?(data: pb.LotteryInfoAck, transId: number): void; // 2062
		onLotteryBuyNumsReq?(data: pb.LotteryBuyNumsReq, transId: number): void; // 2063
		onLotteryBuyNumsAck?(data: pb.LotteryBuyNumsAck, transId: number): void; // 2064
		onGetGoodLuckReq?(data: pb.GetGoodLuckReq, transId: number): void; // 2065
		onGetGoodLuckAck?(data: pb.GetGoodLuckAck, transId: number): void; // 2066
		onLotteryEnd?(data: pb.LotteryEnd, transId: number): void; // 2067
		onSetLotteryPopUpStateReq?(data: pb.SetLotteryPopUpStateReq, transId: number): void; // 2068
		onSetLotteryPopUpStateAck?(data: pb.SetLotteryPopUpStateAck, transId: number): void; // 2069
		onLotteryInfo1Req?(data: pb.LotteryInfo1Req, transId: number): void; // 2070
		onLotteryInfo1Ack?(data: pb.LotteryInfo1Ack, transId: number): void; // 2071
		onLotteryGetEndAwardReq?(data: pb.LotteryGetEndAwardReq, transId: number): void; // 2072
		onLotteryGetEndAwardAck?(data: pb.LotteryGetEndAwardAck, transId: number): void; // 2073
		onBrocastBuyNumsNtf?(data: pb.BrocastBuyNumsNtf, transId: number): void; // 2074
		onTrialTaskInfoReq?(data: pb.TrialTaskInfoReq, transId: number): void; // 2081
		onTrialTaskInfoAck?(data: pb.TrialTaskInfoAck, transId: number): void; // 2082
		onTrialTaskGetAwardReq?(data: pb.TrialTaskGetAwardReq, transId: number): void; // 2083
		onTrialTaskGetAwardAck?(data: pb.TrialTaskGetAwardAck, transId: number): void; // 2084
		onTrialTaskGetStageAwardReq?(data: pb.TrialTaskGetStageAwardReq, transId: number): void; // 2085
		onTrialTaskGetStageAwardAck?(data: pb.TrialTaskGetStageAwardAck, transId: number): void; // 2086
		onTrialTaskInfoNtf?(data: pb.TrialTaskInfoNtf, transId: number): void; // 2087
		onDaBaoEquipUpReq?(data: pb.DaBaoEquipUpReq, transId: number): void; // 2101
		onDaBaoEquipUpAck?(data: pb.DaBaoEquipUpAck, transId: number): void; // 2102
		onEnterDaBaoMysteryReq?(data: pb.EnterDaBaoMysteryReq, transId: number): void; // 2103
		onDaBaoMysteryResultNtf?(data: pb.DaBaoMysteryResultNtf, transId: number): void; // 2104
		onDaBaoMysteryEnergyItemBuyReq?(data: pb.DaBaoMysteryEnergyItemBuyReq, transId: number): void; // 2105
		onDaBaoMysteryEnergyAddReq?(data: pb.DaBaoMysteryEnergyAddReq, transId: number): void; // 2106
		onDaBaoMysteryEnergyAddAck?(data: pb.DaBaoMysteryEnergyAddAck, transId: number): void; // 2107
		onDaBaoMysteryEnergyNtf?(data: pb.DaBaoMysteryEnergyNtf, transId: number): void; // 2108
		onEnterAppletsReq?(data: pb.EnterAppletsReq, transId: number): void; // 2140
		onAppletsEnergyNtf?(data: pb.AppletsEnergyNtf, transId: number): void; // 2141
		onAppletsReceiveReq?(data: pb.AppletsReceiveReq, transId: number): void; // 2142
		onAppletsReceiveAck?(data: pb.AppletsReceiveAck, transId: number): void; // 2143
		onCronGetAwardReq?(data: pb.CronGetAwardReq, transId: number): void; // 2144
		onCronGetAwardAck?(data: pb.CronGetAwardAck, transId: number): void; // 2145
		onEndResultReq?(data: pb.EndResultReq, transId: number): void; // 2146
		onEndResultAck?(data: pb.EndResultAck, transId: number): void; // 2147
		onLabelUpReq?(data: pb.LabelUpReq, transId: number): void; // 2180
		onLabelUpAck?(data: pb.LabelUpAck, transId: number): void; // 2181
		onLabelTransferReq?(data: pb.LabelTransferReq, transId: number): void; // 2182
		onLabelTransferAck?(data: pb.LabelTransferAck, transId: number): void; // 2183
		onLabelDayRewardReq?(data: pb.LabelDayRewardReq, transId: number): void; // 2184
		onLabelDayRewardAck?(data: pb.LabelDayRewardAck, transId: number): void; // 2185
		onLabelTaskReq?(data: pb.LabelTaskReq, transId: number): void; // 2186
		onLabelTaskNtf?(data: pb.LabelTaskNtf, transId: number): void; // 2187
		onPrivilegeBuyReq?(data: pb.PrivilegeBuyReq, transId: number): void; // 2220
		onPrivilegeBuyAck?(data: pb.PrivilegeBuyAck, transId: number): void; // 2221
		onGetBossFamilyInfoReq?(data: pb.GetBossFamilyInfoReq, transId: number): void; // 2250
		onGetBossFamilyInfoAck?(data: pb.GetBossFamilyInfoAck, transId: number): void; // 2251
		onEnterBossFamilyReq?(data: pb.EnterBossFamilyReq, transId: number): void; // 2252
		onFirstDropLoadReq?(data: pb.FirstDropLoadReq, transId: number): void; // 2260
		onFirstDropLoadAck?(data: pb.FirstDropLoadAck, transId: number): void; // 2261
		onGetFirstDropAwardReq?(data: pb.GetFirstDropAwardReq, transId: number): void; // 2262
		onGetFirstDropAwardAck?(data: pb.GetFirstDropAwardAck, transId: number): void; // 2263
		onGetAllFirstDropAwardReq?(data: pb.GetAllFirstDropAwardReq, transId: number): void; // 2264
		onGetAllFirstDropAwardAck?(data: pb.GetAllFirstDropAwardAck, transId: number): void; // 2265
		onGetAllRedPacketReq?(data: pb.GetAllRedPacketReq, transId: number): void; // 2266
		onGetAllRedPacketAck?(data: pb.GetAllRedPacketAck, transId: number): void; // 2267
		onGetAllFirstDropAwardNtf?(data: pb.GetAllFirstDropAwardNtf, transId: number): void; // 2268
		onFirstDropRedPointNtf?(data: pb.FirstDropRedPointNtf, transId: number): void; // 2269
		onEnterPublicCopyReq?(data: pb.EnterPublicCopyReq, transId: number): void; // 8000
		onEnterPublicCopyAck?(data: pb.EnterPublicCopyAck, transId: number): void; // 8001
		onFightPickUpReq?(data: pb.FightPickUpReq, transId: number): void; // 8102
		onFightPickUpAck?(data: pb.FightPickUpAck, transId: number): void; // 8103
		onFightUserReliveReq?(data: pb.FightUserReliveReq, transId: number): void; // 8104
		onFightUserReliveAck?(data: pb.FightUserReliveAck, transId: number): void; // 8105
		onFightCheerReq?(data: pb.FightCheerReq, transId: number): void; // 8106
		onFightCheerAck?(data: pb.FightCheerAck, transId: number): void; // 8107
		onFightPotionReq?(data: pb.FightPotionReq, transId: number): void; // 8108
		onFightPotionAck?(data: pb.FightPotionAck, transId: number): void; // 8109
		onFightCollectionReq?(data: pb.FightCollectionReq, transId: number): void; // 8110
		onFightCollectionAck?(data: pb.FightCollectionAck, transId: number): void; // 8111
		onFightGetCheerNumReq?(data: pb.FightGetCheerNumReq, transId: number): void; // 8112
		onFightGetCheerNumNtf?(data: pb.FightGetCheerNumNtf, transId: number): void; // 8113
		onFightCollectionNtf?(data: pb.FightCollectionNtf, transId: number): void; // 8114
		onFightPotionCdReq?(data: pb.FightPotionCdReq, transId: number): void; // 8115
		onFightPotionCdAck?(data: pb.FightPotionCdAck, transId: number): void; // 8116
		onFightCollectionCancelReq?(data: pb.FightCollectionCancelReq, transId: number): void; // 8117
		onFightCollectionCancelAck?(data: pb.FightCollectionCancelAck, transId: number): void; // 8118
		onFightApplyForHelpReq?(data: pb.FightApplyForHelpReq, transId: number): void; // 8119
		onFightApplyForHelpAck?(data: pb.FightApplyForHelpAck, transId: number): void; // 8120
		onFightApplyForHelpNtf?(data: pb.FightApplyForHelpNtf, transId: number): void; // 8121
		onFightAskForHelpResultReq?(data: pb.FightAskForHelpResultReq, transId: number): void; // 8122
		onFightAskForHelpResultNtf?(data: pb.FightAskForHelpResultNtf, transId: number): void; // 8123
		onFightTeamChangeNtf?(data: pb.FightTeamChangeNtf, transId: number): void; // 8124
		onFightUserChangeToHelperNtf?(data: pb.FightUserChangeToHelperNtf, transId: number): void; // 8125
		onFightAskForHelpResultAck?(data: pb.FightAskForHelpResultAck, transId: number): void; // 8126
		onFightItemsAddNtf?(data: pb.FightItemsAddNtf, transId: number): void; // 8127
		onFightNpcEventReq?(data: pb.FightNpcEventReq, transId: number): void; // 8128
		onSceneEnterNtf?(data: pb.SceneEnterNtf, transId: number): void; // 9001
		onSceneLeaveNtf?(data: pb.SceneLeaveNtf, transId: number): void; // 9002
		onSceneMoveRpt?(data: pb.SceneMoveRpt, transId: number): void; // 9003
		onSceneMoveNtf?(data: pb.SceneMoveNtf, transId: number): void; // 9004
		onAttackRpt?(data: pb.AttackRpt, transId: number): void; // 9005
		onAttackEffectNtf?(data: pb.AttackEffectNtf, transId: number): void; // 9007
		onSceneDieNtf?(data: pb.SceneDieNtf, transId: number): void; // 9008
		onSceneEnterOverNtf?(data: pb.SceneEnterOverNtf, transId: number): void; // 9009
		onFightHurtRankReq?(data: pb.FightHurtRankReq, transId: number): void; // 9010
		onFightHurtRankAck?(data: pb.FightHurtRankAck, transId: number): void; // 9011
		onSceneUserUpdateNtf?(data: pb.SceneUserUpdateNtf, transId: number): void; // 9013
		onSceneUserReliveNtf?(data: pb.SceneUserReliveNtf, transId: number): void; // 9014
		onSceneObjHpNtf?(data: pb.SceneObjHpNtf, transId: number): void; // 9015
		onGetBossOwnerChangReq?(data: pb.GetBossOwnerChangReq, transId: number): void; // 9016
		onBossOwnerChangNtf?(data: pb.BossOwnerChangNtf, transId: number): void; // 9017
		onSceneObjMpNtf?(data: pb.SceneObjMpNtf, transId: number): void; // 9018
		onCollectionStatusChangeNtf?(data: pb.CollectionStatusChangeNtf, transId: number): void; // 9019
		onFightEnterOkReq?(data: pb.FightEnterOkReq, transId: number): void; // 9020
		onFightStartCountDownNtf?(data: pb.FightStartCountDownNtf, transId: number): void; // 9021
		onFightStartCountDownOkReq?(data: pb.FightStartCountDownOkReq, transId: number): void; // 9022
		onFightStartNtf?(data: pb.FightStartNtf, transId: number): void; // 9023
		onSceneUserElfUpdateNtf?(data: pb.SceneUserElfUpdateNtf, transId: number): void; // 9024
		onFightCheerNumChangeNtf?(data: pb.FightCheerNumChangeNtf, transId: number): void; // 9025
		onGuardPillarFightNtf?(data: pb.GuardPillarFightNtf, transId: number): void; // 9026
		onMagicTowerFightNtf?(data: pb.MagicTowerFightNtf, transId: number): void; // 9027
		onBuffChangeNtf?(data: pb.BuffChangeNtf, transId: number): void; // 9030
		onBuffDelNtf?(data: pb.BuffDelNtf, transId: number): void; // 9031
		onBuffHpChangeNtf?(data: pb.BuffHpChangeNtf, transId: number): void; // 9032
		onBuffPropChangeNtf?(data: pb.BuffPropChangeNtf, transId: number): void; // 9033
		onFightUserScoreNtf?(data: pb.FightUserScoreNtf, transId: number): void; // 9040
		onExpStageKillInfoNtf?(data: pb.ExpStageKillInfoNtf, transId: number): void; // 9050
		onPaodianTopUserReq?(data: pb.PaodianTopUserReq, transId: number): void; // 9051
		onPaodianTopUserNtf?(data: pb.PaodianTopUserNtf, transId: number): void; // 9052
		onGetShabakeScoresReq?(data: pb.GetShabakeScoresReq, transId: number): void; // 9053
		onShabakeScoreRankNtf?(data: pb.ShabakeScoreRankNtf, transId: number): void; // 9054
		onPaoDianUserNumNtf?(data: pb.PaoDianUserNumNtf, transId: number): void; // 9055
		onShabakeOccupiedNtf?(data: pb.ShabakeOccupiedNtf, transId: number): void; // 9056
		onGetShabakeCrossScoresReq?(data: pb.GetShabakeCrossScoresReq, transId: number): void; // 9060
		onShabakeCrossScoreRankNtf?(data: pb.ShabakeCrossScoreRankNtf, transId: number): void; // 9061
		onShabakeCrossOccupiedNtf?(data: pb.ShabakeCrossOccupiedNtf, transId: number): void; // 9062
		onCrossShaBaKeFightEndNtf?(data: pb.CrossShaBaKeFightEndNtf, transId: number): void; // 9063
		onGetFightBossInfosReq?(data: pb.GetFightBossInfosReq, transId: number): void; // 9070
		onGetFightBossInfosAck?(data: pb.GetFightBossInfosAck, transId: number): void; // 9071
		onBossReliveNtf?(data: pb.BossReliveNtf, transId: number): void; // 9072
	}
}
